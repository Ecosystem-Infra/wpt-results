{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"> [initialize] ","status":"PASS"},{"name":"  context = new OfflineAudioContext(...) did not throw an exception.","status":"PASS"},{"name":"< [initialize] All assertions passed. (total 1 assertions)","status":"PASS"},{"name":"> [invalid constructor] ","status":"PASS"},{"name":"  new IIRFilterNode() threw EcmaScript error TypeError: \"Failed to construct 'IIRFilterNode': 2 arguments required, but only 0 present.\".","status":"PASS"},{"name":"  new IIRFilterNode(1) threw EcmaScript error TypeError: \"Failed to construct 'IIRFilterNode': 2 arguments required, but only 1 present.\".","status":"PASS"},{"name":"  new IIRFilterNode(context, 42) threw EcmaScript error TypeError: \"Failed to construct 'IIRFilterNode': parameter 2 ('options') is not an object.\".","status":"PASS"},{"name":"< [invalid constructor] All assertions passed. (total 3 assertions)","status":"PASS"},{"name":"> [default constructor] ","status":"PASS"},{"name":"  node0 = new IIRFilterNode(context, {\"feedforward\":[1],\"feedback\":[1,-0.9]}) did not throw an exception.","status":"PASS"},{"name":"  node0 instanceof IIRFilterNode is equal to true.","status":"PASS"},{"name":"  node0.numberOfInputs is equal to 1.","status":"PASS"},{"name":"  node0.numberOfOutputs is equal to 1.","status":"PASS"},{"name":"  node0.channelCount is equal to 2.","status":"PASS"},{"name":"  node0.channelCountMode is equal to max.","status":"PASS"},{"name":"  node0.channelInterpretation is equal to speakers.","status":"PASS"},{"name":"< [default constructor] All assertions passed. (total 7 assertions)","status":"PASS"},{"name":"> [test AudioNodeOptions] ","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCount: 17}} did not throw an exception.","status":"PASS"},{"name":"  node.channelCount is equal to 17.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCount: 0}) threw NotSupportedError: \"Failed to construct 'IIRFilterNode': The channel count provided (0) is outside the range [1, 32].\".","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCount: 99}) threw NotSupportedError: \"Failed to construct 'IIRFilterNode': The channel count provided (99) is outside the range [1, 32].\".","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCountMode: \"max\"} did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode is equal to max.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCountMode: \"max\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode after valid setter is equal to max.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCountMode: \"clamped-max\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode after valid setter is equal to clamped-max.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCountMode: \"explicit\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode after valid setter is equal to explicit.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCountMode: \"foobar\"} threw EcmaScript error TypeError: \"Failed to construct 'IIRFilterNode': The provided value 'foobar' is not a valid enum value of type ChannelCountMode.\".","status":"PASS"},{"name":"  node.channelCountMode after invalid setter is equal to explicit.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelInterpretation: \"speakers\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelInterpretation is equal to speakers.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelInterpretation: \"discrete\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelInterpretation is equal to discrete.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelInterpretation: \"foobar\"}) threw EcmaScript error TypeError: \"Failed to construct 'IIRFilterNode': The provided value 'foobar' is not a valid enum value of type ChannelInterpretation.\".","status":"PASS"},{"name":"  node.channelInterpretation after invalid setter is equal to discrete.","status":"PASS"},{"name":"< [test AudioNodeOptions] All assertions passed. (total 20 assertions)","status":"PASS"},{"name":"> [constructor options] ","status":"PASS"},{"name":"  node = new IIRFilterNode(, {\"feedback\":[1,0.5]}) threw EcmaScript error TypeError: \"Failed to construct 'IIRFilterNode': required member feedforward is undefined.\".","status":"PASS"},{"name":"  node = new IIRFilterNode(c, {\"feedforward\":[1,0.5]}) threw EcmaScript error TypeError: \"Failed to construct 'IIRFilterNode': required member feedback is undefined.\".","status":"PASS"},{"name":"< [constructor options] All assertions passed. (total 2 assertions)","status":"PASS"},{"name":"> [functionality] ","status":"PASS"},{"name":"  Output of filter using new IIRFilter(...) is identical to the array [0,0.05756402015686035,0.1437191516160965,0.21500658988952637,0.29277655482292175,0.36597785353660583,0.4397642910480499,0.511192798614502,0.5813756585121155,0.6494057774543762,0.7153944969177246,0.7789546847343445,0.8399595618247986,0.8981648087501526,0.9533984661102295,1.0054665803909302...].","status":"PASS"},{"name":"< [functionality] All assertions passed. (total 1 assertions)","status":"PASS"},{"name":"# AUDIT TASK RUNNER FINISHED: 6 tasks ran successfully.","status":"PASS"}]}