{"status":"OK","subtests":[{"name":"AudioParam interface: existence and properties of interface object","status":"PASS"},{"name":"AudioParam interface object length","status":"FAIL"},{"name":"AudioParam interface object name","status":"PASS"},{"name":"AudioParam interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioParam interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioParam interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioParam interface: attribute value","status":"PASS"},{"name":"Unscopable handled correctly for value property on AudioParam","status":"PASS"},{"name":"AudioParam interface: attribute defaultValue","status":"PASS"},{"name":"Unscopable handled correctly for defaultValue property on AudioParam","status":"PASS"},{"name":"AudioParam interface: attribute minValue","status":"FAIL"},{"name":"Unscopable handled correctly for minValue property on AudioParam","status":"PASS"},{"name":"AudioParam interface: attribute maxValue","status":"FAIL"},{"name":"Unscopable handled correctly for maxValue property on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation setValueAtTime(float, double)","status":"PASS"},{"name":"Unscopable handled correctly for setValueAtTime(float, double) on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation linearRampToValueAtTime(float, double)","status":"PASS"},{"name":"Unscopable handled correctly for linearRampToValueAtTime(float, double) on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation exponentialRampToValueAtTime(float, double)","status":"PASS"},{"name":"Unscopable handled correctly for exponentialRampToValueAtTime(float, double) on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation setTargetAtTime(float, double, double)","status":"PASS"},{"name":"Unscopable handled correctly for setTargetAtTime(float, double, double) on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation setValueCurveAtTime(Float32Array, double, double)","status":"PASS"},{"name":"Unscopable handled correctly for setValueCurveAtTime(Float32Array, double, double) on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation cancelScheduledValues(double)","status":"PASS"},{"name":"Unscopable handled correctly for cancelScheduledValues(double) on AudioParam","status":"PASS"},{"name":"AudioParam must be primary interface of delay_time","status":"PASS"},{"name":"Stringification of delay_time","status":"PASS"},{"name":"AudioParam interface: delay_time must inherit property \"value\" with the proper type","status":"PASS"},{"name":"AudioParam interface: delay_time must inherit property \"defaultValue\" with the proper type","status":"PASS"},{"name":"AudioParam interface: delay_time must inherit property \"minValue\" with the proper type","status":"FAIL"},{"name":"AudioParam interface: delay_time must inherit property \"maxValue\" with the proper type","status":"FAIL"},{"name":"AudioParam interface: delay_time must inherit property \"setValueAtTime(float, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling setValueAtTime(float, double) on delay_time with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: delay_time must inherit property \"linearRampToValueAtTime(float, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling linearRampToValueAtTime(float, double) on delay_time with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: delay_time must inherit property \"exponentialRampToValueAtTime(float, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling exponentialRampToValueAtTime(float, double) on delay_time with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: delay_time must inherit property \"setTargetAtTime(float, double, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling setTargetAtTime(float, double, double) on delay_time with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: delay_time must inherit property \"setValueCurveAtTime(Float32Array, double, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling setValueCurveAtTime(Float32Array, double, double) on delay_time with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: delay_time must inherit property \"cancelScheduledValues(double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling cancelScheduledValues(double) on delay_time with too few arguments must throw TypeError","status":"PASS"}]}