{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"> [Panner k-rate positionX] ","status":"PASS"},{"name":"  k-rate positionX: Setting positionX.automationRate to \"k-rate\" is equal to k-rate.","status":"PASS"},{"name":"  k-rate positionX: k-rate node: positionX.setValueAtTime(0,0) did not throw an exception.","status":"PASS"},{"name":"  k-rate positionX: k-rate node: positionX.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  k-rate positionX: a-rate node:positionX.setValueAtTime(0,0) did not throw an exception.","status":"PASS"},{"name":"  k-rate positionX: a-rate node:positionX.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  k-rate positionX: Output of k-rate PannerNode is identical to the array [0,0.0034129652194678783,0.006422387436032295,0.008672441355884075,0.009897067211568356,0.009951489977538586,0.008829260244965553,0.006663067732006311,0.003709051525220275,0.0003164778754580766,-0.003113511484116316,-0.006175371818244457,-0.008507056161761284,-0.009832882322371006,-0.00999609474092722,-0.00897736381739378...].","status":"PASS"},{"name":"  k-rate positionX: Output of a-rate PannerNode is identical to the array [0,0.0033637555316090584,0.006236478686332703,0.008294522762298584,0.00932004302740097,0.009223885834217072,0.008052226155996323,0.005976969376206398,0.0032713909167796373,0.0002743604709394276,-0.0026520462706685066,-0.0051664067432284355,-0.006987776607275009,-0.0079270638525486,-0.007906230166554451,-0.0069635226391255856...].","status":"PASS"},{"name":"  k-rate positionX: Difference between a-rate and k-rate PannerNode is not constantly 0 (contains 7940 different values).","status":"PASS"},{"name":"< [Panner k-rate positionX] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Panner k-rate positionY] ","status":"PASS"},{"name":"  k-rate positionY: Setting positionY.automationRate to \"k-rate\" is equal to k-rate.","status":"PASS"},{"name":"  k-rate positionY: k-rate node: positionY.setValueAtTime(0,0) did not throw an exception.","status":"PASS"},{"name":"  k-rate positionY: k-rate node: positionY.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  k-rate positionY: a-rate node:positionY.setValueAtTime(0,0) did not throw an exception.","status":"PASS"},{"name":"  k-rate positionY: a-rate node:positionY.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  k-rate positionY: Output of k-rate PannerNode is identical to the array [0,0.003153169061988592,0.0059335120022296906,0.008012291043996811,0.009143698029220104,0.00919397734105587,0.008157172240316868,0.006155871786177158,0.003426716662943363,0.0002923874417319894,-0.0028765094466507435,-0.005705299787223339,-0.007859494537115097,-0.009084398858249187,-0.009235186502337456,-0.008294003084301949...].","status":"PASS"},{"name":"  k-rate positionY: Output of a-rate PannerNode is identical to the array [0,0.0031077656894922256,0.005762204993516207,0.007664485368877649,0.008613284677267075,0.008525910787284374,0.007444500923156738,0.005527261644601822,0.003026127815246582,0.0002538741973694414,-0.002454915316775441,-0.004784299060702324,-0.00647379457950592,-0.007347472943365574,-0.007331894710659981,-0.006461181677877903...].","status":"PASS"},{"name":"  k-rate positionY: Difference between a-rate and k-rate PannerNode is not constantly 0 (contains 7961 different values).","status":"PASS"},{"name":"< [Panner k-rate positionY] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Panner k-rate orientationX] ","status":"PASS"},{"name":"  k-rate orientationX: Setting orientationX.automationRate to \"k-rate\" is equal to k-rate.","status":"PASS"},{"name":"  k-rate orientationX: k-rate node: orientationX.setValueAtTime(0.1,0) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationX: k-rate node: orientationX.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationX: a-rate node:orientationX.setValueAtTime(0.1,0) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationX: a-rate node:orientationX.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationX: Output of k-rate PannerNode is identical to the array [0,0.002279259031638503,0.0042890221811831,0.00579166179522872,0.0066094957292079926,0.006645840592682362,0.00589638901874423,0.004449754487723112,0.002476992318406701,0.0002113514201482758,-0.0020792766008526087,-0.004124059341847897,-0.005681213457137346,-0.006566631607711315,-0.006675628945231438,-0.005995296407490969...].","status":"PASS"},{"name":"  k-rate orientationX: Output of a-rate PannerNode is identical to the array [0,0.0019146079430356622,0.002935122000053525,0.0030980310402810574,0.0025990132708102465,0.0017294626450166106,0.0008043991401791573,0.00009738936932990327,0.0002070441551040858,0.000038129455788293853,-0.0005596030969172716,-0.0014449188020080328,-0.0024129971861839294,-0.0032364288344979286,-0.0037071837577968836,-0.0036732980515807867...].","status":"PASS"},{"name":"  k-rate orientationX: Difference between a-rate and k-rate PannerNode is not constantly 0 (contains 7958 different values).","status":"PASS"},{"name":"< [Panner k-rate orientationX] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Panner k-rate orientationY] ","status":"PASS"},{"name":"  k-rate orientationY: Setting orientationY.automationRate to \"k-rate\" is equal to k-rate.","status":"PASS"},{"name":"  k-rate orientationY: k-rate node: orientationY.setValueAtTime(0.1,0) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationY: k-rate node: orientationY.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationY: a-rate node:orientationY.setValueAtTime(0.1,0) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationY: a-rate node:orientationY.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationY: Output of k-rate PannerNode is identical to the array [0,0.002279259031638503,0.0042890221811831,0.00579166179522872,0.0066094957292079926,0.006645840592682362,0.00589638901874423,0.004449754487723112,0.002476992318406701,0.0002113514201482758,-0.0020792766008526087,-0.004124059341847897,-0.005681213457137346,-0.006566631607711315,-0.006675628945231438,-0.005995296407490969...].","status":"PASS"},{"name":"  k-rate orientationY: Output of a-rate PannerNode is identical to the array [0,0.0019146079430356622,0.002935122000053525,0.0030980310402810574,0.0025990132708102465,0.0017294626450166106,0.0008043991401791573,0.00009738936932990327,0.0002070441551040858,0.000038129455788293853,-0.0005596030969172716,-0.0014449188020080328,-0.0024129971861839294,-0.0032364288344979286,-0.0037071837577968836,-0.0036732980515807867...].","status":"PASS"},{"name":"  k-rate orientationY: Difference between a-rate and k-rate PannerNode is not constantly 0 (contains 7959 different values).","status":"PASS"},{"name":"< [Panner k-rate orientationY] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Panner k-rate orientationZ] ","status":"PASS"},{"name":"  k-rate orientationZ: Setting orientationZ.automationRate to \"k-rate\" is equal to k-rate.","status":"PASS"},{"name":"  k-rate orientationZ: k-rate node: orientationZ.setValueAtTime(0.1,0) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationZ: k-rate node: orientationZ.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationZ: a-rate node:orientationZ.setValueAtTime(0.1,0) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationZ: a-rate node:orientationZ.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  k-rate orientationZ: Output of k-rate PannerNode is identical to the array [0,0.002279259031638503,0.0042890221811831,0.00579166179522872,0.0066094957292079926,0.006645840592682362,0.00589638901874423,0.004449754487723112,0.002476992318406701,0.0002113514201482758,-0.0020792766008526087,-0.004124059341847897,-0.005681213457137346,-0.006566631607711315,-0.006675628945231438,-0.005995296407490969...].","status":"PASS"},{"name":"  k-rate orientationZ: Output of a-rate PannerNode is identical to the array [0,0.0019146079430356622,0.002935122000053525,0.0030980310402810574,0.0025990132708102465,0.0017294626450166106,0.0008043991401791573,0.00009738936932990327,0.0002070441551040858,0.000038129455788293853,-0.0005596030969172716,-0.0014449188020080328,-0.0024129971861839294,-0.0032364288344979286,-0.0037071837577968836,-0.0036732980515807867...].","status":"PASS"},{"name":"  k-rate orientationZ: Difference between a-rate and k-rate PannerNode is not constantly 0 (contains 7959 different values).","status":"PASS"},{"name":"< [Panner k-rate orientationZ] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Listener k-rate positionX] ","status":"PASS"},{"name":"  Listener positionX.automationRate is equal to k-rate.","status":"PASS"},{"name":"  Listener positionX.setValueAtTime(1,0) did not throw an exception.","status":"PASS"},{"name":"  Listener positionX.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  Listener k-rate positionX: Output is not constantly 0.0013299635611474514 (contains 512 different values).","status":"PASS"},{"name":"  Listener k-rate positionX: Output [0, 127] contains only the constant 0.0013299635611474514.","status":"PASS"},{"name":"  Listener k-rate positionX: Output [128, 255] contains only the constant 0.012293370440602303.","status":"PASS"},{"name":"  Listener k-rate positionX: Output [256, 383] contains only the constant 0.011927678249776363.","status":"PASS"},{"name":"  Listener k-rate positionX: Output [384, 511] contains only the constant 0.008936939761042595.","status":"PASS"},{"name":"  Listener k-rate positionX: Output [512, 639] contains only the constant 0.006943006068468094.","status":"PASS"},{"name":"< [Listener k-rate positionX] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [Listener k-rate positionY] ","status":"PASS"},{"name":"  Listener positionY.automationRate is equal to k-rate.","status":"PASS"},{"name":"  Listener positionY.setValueAtTime(1,0) did not throw an exception.","status":"PASS"},{"name":"  Listener positionY.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  Listener k-rate positionY: Output is not constantly 0.0011720563052222133 (contains 512 different values).","status":"PASS"},{"name":"  Listener k-rate positionY: Output [0, 127] contains only the constant 0.0011720563052222133.","status":"PASS"},{"name":"  Listener k-rate positionY: Output [128, 255] contains only the constant 0.014085138216614723.","status":"PASS"},{"name":"  Listener k-rate positionY: Output [256, 383] contains only the constant 0.013277369551360607.","status":"PASS"},{"name":"  Listener k-rate positionY: Output [384, 511] contains only the constant 0.009970049373805523.","status":"PASS"},{"name":"  Listener k-rate positionY: Output [512, 639] contains only the constant 0.007745886687189341.","status":"PASS"},{"name":"< [Listener k-rate positionY] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [Listener k-rate positionZ] ","status":"PASS"},{"name":"  Listener positionZ.automationRate is equal to k-rate.","status":"PASS"},{"name":"  Listener positionZ.setValueAtTime(1,0) did not throw an exception.","status":"PASS"},{"name":"  Listener positionZ.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  Listener k-rate positionZ: Output is not constantly 0.0013299635611474514 (contains 512 different values).","status":"PASS"},{"name":"  Listener k-rate positionZ: Output [0, 127] contains only the constant 0.0013299635611474514.","status":"PASS"},{"name":"  Listener k-rate positionZ: Output [128, 255] contains only the constant 0.012293369509279728.","status":"PASS"},{"name":"  Listener k-rate positionZ: Output [256, 383] contains only the constant 0.011927677318453789.","status":"PASS"},{"name":"  Listener k-rate positionZ: Output [384, 511] contains only the constant 0.008936937898397446.","status":"PASS"},{"name":"  Listener k-rate positionZ: Output [512, 639] contains only the constant 0.006943006534129381.","status":"PASS"},{"name":"< [Listener k-rate positionZ] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [Listener k-rate forwardX] ","status":"PASS"},{"name":"  Listener forwardX.automationRate is equal to k-rate.","status":"PASS"},{"name":"  Listener forwardX.setValueAtTime(-1,0) did not throw an exception.","status":"PASS"},{"name":"  Listener forwardX.linearRampToValueAtTime(1,1) did not throw an exception.","status":"PASS"},{"name":"  Listener k-rate forwardX: Output is not constantly 0.0011720563052222133 (contains 512 different values).","status":"PASS"},{"name":"  Listener k-rate forwardX: Output [0, 127] contains only the constant 0.0011720563052222133.","status":"PASS"},{"name":"  Listener k-rate forwardX: Output [128, 255] contains only the constant 0.0011720549082383513.","status":"PASS"},{"name":"  Listener k-rate forwardX: Output [256, 383] contains only the constant 0.0011720503680408.","status":"PASS"},{"name":"  Listener k-rate forwardX: Output [384, 511] contains only the constant 0.001172042335383594.","status":"PASS"},{"name":"  Listener k-rate forwardX: Output [512, 639] contains only the constant 0.0011720301117748022.","status":"PASS"},{"name":"< [Listener k-rate forwardX] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [Listener k-rate forwardY] ","status":"PASS"},{"name":"  Listener forwardY.automationRate is equal to k-rate.","status":"PASS"},{"name":"  Listener forwardY.setValueAtTime(-1,0) did not throw an exception.","status":"PASS"},{"name":"  Listener forwardY.linearRampToValueAtTime(1,1) did not throw an exception.","status":"PASS"},{"name":"  Listener k-rate forwardY: Output is not constantly 0.0008287689415737987 (contains 512 different values).","status":"PASS"},{"name":"  Listener k-rate forwardY: Output [0, 127] contains only the constant 0.0008287689415737987.","status":"PASS"},{"name":"  Listener k-rate forwardY: Output [128, 255] contains only the constant 0.0011720563052222133.","status":"PASS"},{"name":"  Listener k-rate forwardY: Output [256, 383] contains only the constant 0.0011720563052222133.","status":"PASS"},{"name":"  Listener k-rate forwardY: Output [384, 511] contains only the constant 0.0011720563052222133.","status":"PASS"},{"name":"  Listener k-rate forwardY: Output [512, 639] contains only the constant 0.0011720563052222133.","status":"PASS"},{"name":"< [Listener k-rate forwardY] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [Listener k-rate forwardZ] ","status":"PASS"},{"name":"  Listener forwardZ.automationRate is equal to k-rate.","status":"PASS"},{"name":"  Listener forwardZ.setValueAtTime(-1,0) did not throw an exception.","status":"PASS"},{"name":"  Listener forwardZ.linearRampToValueAtTime(1,1) did not throw an exception.","status":"PASS"},{"name":"  Listener k-rate forwardZ: Output is not constantly 0.0011720563052222133 (contains 512 different values).","status":"PASS"},{"name":"  Listener k-rate forwardZ: Output [0, 127] contains only the constant 0.0011720563052222133.","status":"PASS"},{"name":"  Listener k-rate forwardZ: Output [128, 255] contains only the constant 0.0011720549082383513.","status":"PASS"},{"name":"  Listener k-rate forwardZ: Output [256, 383] contains only the constant 0.0011720503680408.","status":"PASS"},{"name":"  Listener k-rate forwardZ: Output [384, 511] contains only the constant 0.001172042335383594.","status":"PASS"},{"name":"  Listener k-rate forwardZ: Output [512, 639] contains only the constant 0.0011720301117748022.","status":"PASS"},{"name":"< [Listener k-rate forwardZ] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [Listener k-rate upX] ","status":"PASS"},{"name":"  Listener upX.automationRate is equal to k-rate.","status":"PASS"},{"name":"  Listener upX.setValueAtTime(-1,0) did not throw an exception.","status":"PASS"},{"name":"  Listener upX.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  Listener k-rate upX: Output is not constantly 0.0010044159134849906 (contains 512 different values).","status":"PASS"},{"name":"  Listener k-rate upX: Output [0, 127] contains only the constant 0.0010044159134849906.","status":"PASS"},{"name":"  Listener k-rate upX: Output [128, 255] contains only the constant 0.0010139292571693659.","status":"PASS"},{"name":"  Listener k-rate upX: Output [256, 383] contains only the constant 0.001008721999824047.","status":"PASS"},{"name":"  Listener k-rate upX: Output [384, 511] contains only the constant 0.0010071939323097467.","status":"PASS"},{"name":"  Listener k-rate upX: Output [512, 639] contains only the constant 0.0010064655216410756.","status":"PASS"},{"name":"< [Listener k-rate upX] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [Listener k-rate upY] ","status":"PASS"},{"name":"  Listener upY.automationRate is equal to k-rate.","status":"PASS"},{"name":"  Listener upY.setValueAtTime(-1,0) did not throw an exception.","status":"PASS"},{"name":"  Listener upY.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  Listener k-rate upY: Output is not constantly 0.0008287689415737987 (contains 512 different values).","status":"PASS"},{"name":"  Listener k-rate upY: Output [0, 127] contains only the constant 0.0008287689415737987.","status":"PASS"},{"name":"  Listener k-rate upY: Output [128, 255] contains only the constant 0.0011720563052222133.","status":"PASS"},{"name":"  Listener k-rate upY: Output [256, 383] contains only the constant 0.0011720563052222133.","status":"PASS"},{"name":"  Listener k-rate upY: Output [384, 511] contains only the constant 0.0011720563052222133.","status":"PASS"},{"name":"  Listener k-rate upY: Output [512, 639] contains only the constant 0.0011720563052222133.","status":"PASS"},{"name":"< [Listener k-rate upY] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [Listener k-rate upZ] ","status":"PASS"},{"name":"  Listener upZ.automationRate is equal to k-rate.","status":"PASS"},{"name":"  Listener upZ.setValueAtTime(-1,0) did not throw an exception.","status":"PASS"},{"name":"  Listener upZ.linearRampToValueAtTime(1000,1) did not throw an exception.","status":"PASS"},{"name":"  Listener k-rate upZ: Output is not constantly 0.0010044159134849906 (contains 512 different values).","status":"PASS"},{"name":"  Listener k-rate upZ: Output [0, 127] contains only the constant 0.0010044159134849906.","status":"PASS"},{"name":"  Listener k-rate upZ: Output [128, 255] contains only the constant 0.0010139293735846877.","status":"PASS"},{"name":"  Listener k-rate upZ: Output [256, 383] contains only the constant 0.001008721999824047.","status":"PASS"},{"name":"  Listener k-rate upZ: Output [384, 511] contains only the constant 0.0010071939323097467.","status":"PASS"},{"name":"  Listener k-rate upZ: Output [512, 639] contains only the constant 0.0010064655216410756.","status":"PASS"},{"name":"< [Listener k-rate upZ] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"# AUDIT TASK RUNNER FINISHED: 14 tasks ran successfully.","status":"PASS"}]}