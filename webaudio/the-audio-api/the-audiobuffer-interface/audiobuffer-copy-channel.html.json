{"status":"ERROR","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"> [initialize] ","status":"PASS"},{"name":"  Initialized values contains only the constant -1.","status":"PASS"},{"name":"< [initialize] All assertions passed. (total 1 assertions)","status":"PASS"},{"name":"> [copyFrom-exceptions] ","status":"PASS"},{"name":"  AudioBuffer.prototype.copyFromChannel does exist.","status":"PASS"},{"name":"  0: buffer = context.createBuffer(3, 16, context.sampleRate) did not throw an exception.","status":"PASS"},{"name":"  1: buffer.copyFromChannel(null, 0) threw TypeError: \"Argument 1 of AudioBuffer.copyFromChannel is not an object.\".","status":"PASS"},{"name":"  2: buffer.copyFromChannel(context, 0) threw TypeError: \"Argument 1 of AudioBuffer.copyFromChannel does not implement interface Float32Array.\".","status":"PASS"},{"name":"X 3: buffer.copyFromChannel(x, -1) threw \"NotSupportedError\" instead of IndexSizeError.","status":"FAIL"},{"name":"X 4: buffer.copyFromChannel(x, 3) threw \"NotSupportedError\" instead of IndexSizeError.","status":"FAIL"},{"name":"X 5: buffer.copyFromChannel(x, 0, -1) threw \"NotSupportedError\" instead of IndexSizeError.","status":"FAIL"},{"name":"X 6: buffer.copyFromChannel(x, 0, 16) threw \"NotSupportedError\" instead of IndexSizeError.","status":"FAIL"},{"name":"X 7: buffer.copyFromChannel(x, 3) threw \"NotSupportedError\" instead of IndexSizeError.","status":"FAIL"},{"name":"< [copyFrom-exceptions] 5 out of 9 assertions were failed.","status":"FAIL"},{"name":"> [copyTo-exceptions] ","status":"PASS"},{"name":"  AudioBuffer.prototype.copyToChannel does exist.","status":"PASS"},{"name":"  0: buffer.copyToChannel(null, 0) threw TypeError: \"Argument 1 of AudioBuffer.copyToChannel is not an object.\".","status":"PASS"},{"name":"  1: buffer.copyToChannel(context, 0) threw TypeError: \"Argument 1 of AudioBuffer.copyToChannel does not implement interface Float32Array.\".","status":"PASS"},{"name":"X 2: buffer.copyToChannel(x, -1) threw \"NotSupportedError\" instead of IndexSizeError.","status":"FAIL"},{"name":"X 3: buffer.copyToChannel(x, 3) threw \"NotSupportedError\" instead of IndexSizeError.","status":"FAIL"},{"name":"X 4: buffer.copyToChannel(x, 0, -1) threw \"NotSupportedError\" instead of IndexSizeError.","status":"FAIL"},{"name":"X 5: buffer.copyToChannel(x, 0, 16) threw \"NotSupportedError\" instead of IndexSizeError.","status":"FAIL"},{"name":"X 6: buffer.copyToChannel(x, 3) threw \"NotSupportedError\" instead of IndexSizeError.","status":"FAIL"},{"name":"< [copyTo-exceptions] 5 out of 8 assertions were failed.","status":"FAIL"},{"name":"> [copyFrom-validate] ","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 0) is identical to the array [1,2,3,4,5,6,7,8].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 1) is identical to the array [2,3,4,5,6,7,8,9].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 2) is identical to the array [3,4,5,6,7,8,9,10].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 0, 1) is identical to the array [2,3,4,5,6,7,8,9].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 1, 1) is identical to the array [3,4,5,6,7,8,9,10].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 2, 1) is identical to the array [4,5,6,7,8,9,10,11].","status":"PASS"}]}