{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"> [initialize] ","status":"PASS"},{"name":"  context = new OfflineAudioContext(...) did not throw an exception.","status":"PASS"},{"name":"< [initialize] All assertions passed. (total 1 assertions)","status":"PASS"},{"name":"> [invalid constructor] ","status":"PASS"},{"name":"  new ChannelMergerNode() threw TypeError: \"ChannelMergerNode requires at least 1 argument, but only 0 were passed\".","status":"PASS"},{"name":"  new ChannelMergerNode(1) threw TypeError: \"Argument 1 of ChannelMergerNode.constructor is not an object.\".","status":"PASS"},{"name":"  new ChannelMergerNode(context, 42) threw TypeError: \"Value can't be converted to a dictionary.\".","status":"PASS"},{"name":"< [invalid constructor] All assertions passed. (total 3 assertions)","status":"PASS"},{"name":"> [default constructor] ","status":"PASS"},{"name":"  node0 = new ChannelMergerNode(context) did not throw an exception.","status":"PASS"},{"name":"  node0 instanceof ChannelMergerNode is equal to true.","status":"PASS"},{"name":"  node0.numberOfInputs is equal to 6.","status":"PASS"},{"name":"  node0.numberOfOutputs is equal to 1.","status":"PASS"},{"name":"  node0.channelCount is equal to 1.","status":"PASS"},{"name":"  node0.channelCountMode is equal to explicit.","status":"PASS"},{"name":"  node0.channelInterpretation is equal to speakers.","status":"PASS"},{"name":"< [default constructor] All assertions passed. (total 7 assertions)","status":"PASS"},{"name":"> [test AudioNodeOptions] ","status":"PASS"},{"name":"  new ChannelMergerNode(c, {channelCount: 1}} did not throw an exception.","status":"PASS"},{"name":"  node.channelCount is equal to 1.","status":"PASS"},{"name":"X new ChannelMergerNode(c, {channelCount: 2}} did not throw an exception.","status":"FAIL"},{"name":"  new ChannelMergerNode(c, {channelCountMode: \"explicit\"} did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode is equal to explicit.","status":"PASS"},{"name":"X new ChannelMergerNode(c, {channelCountMode: \"max\"}) did not throw an exception.","status":"FAIL"},{"name":"X new ChannelMergerNode(c, {channelCountMode: \"clamped-max\"}) did not throw an exception.","status":"FAIL"},{"name":"  new ChannelMergerNode(c, {channelInterpretation: \"speakers\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelInterpretation is equal to speakers.","status":"PASS"},{"name":"  new ChannelMergerNode(c, {channelInterpretation: \"discrete\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelInterpretation is equal to discrete.","status":"PASS"},{"name":"  new ChannelMergerNode(c, {channelInterpretation: \"foobar\"}) threw TypeError: \"'channelInterpretation' member of AudioNodeOptions 'foobar' is not a valid value for enumeration ChannelInterpretation.\".","status":"PASS"},{"name":"  node.channelInterpretation after invalid setter is equal to discrete.","status":"PASS"},{"name":"< [test AudioNodeOptions] 3 out of 13 assertions were failed.","status":"FAIL"},{"name":"> [constructor options] ","status":"PASS"},{"name":"  node1 = new ChannelMergerNode(context, {\"numberOfInputs\":3,\"numberOfOutputs\":9,\"channelInterpretation\":\"discrete\"}) did not throw an exception.","status":"PASS"},{"name":"  node1.numberOfInputs is equal to 3.","status":"PASS"},{"name":"  node1.numberOfOutputs is equal to 1.","status":"PASS"},{"name":"  node1.channelInterpretation is equal to discrete.","status":"PASS"},{"name":"  new ChannelMergerNode(c, {\"numberOfInputs\":99}) threw IndexSizeError: \"Index or size is negative or greater than the allowed amount\".","status":"PASS"},{"name":"X new ChannelMergerNode(c, {\"channelCount\":3}) did not throw an exception.","status":"FAIL"},{"name":"X new ChannelMergerNode(c, {\"channelCountMode\":\"max\"}) did not throw an exception.","status":"FAIL"},{"name":"< [constructor options] 2 out of 7 assertions were failed.","status":"FAIL"},{"name":"# AUDIT TASK RUNNER FINISHED: 2 out of 5 tasks were failed.","status":"FAIL"}]}