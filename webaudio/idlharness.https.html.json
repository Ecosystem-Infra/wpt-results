{"status":"OK","subtests":[{"name":"Test driver","status":"PASS"},{"name":"WorkerGlobalScope interface: existence and properties of interface object","status":"PASS"},{"name":"DedicatedWorkerGlobalScope interface: existence and properties of interface object","status":"PASS"},{"name":"SharedWorkerGlobalScope interface: existence and properties of interface object","status":"PASS"},{"name":"WorkerNavigator interface: existence and properties of interface object","status":"PASS"},{"name":"WorkerLocation interface: existence and properties of interface object","status":"PASS"},{"name":"BaseAudioContext interface: existence and properties of interface object","status":"PASS"},{"name":"BaseAudioContext interface object length","status":"PASS"},{"name":"BaseAudioContext interface object name","status":"PASS"},{"name":"BaseAudioContext interface: existence and properties of interface prototype object","status":"PASS"},{"name":"BaseAudioContext interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"BaseAudioContext interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"BaseAudioContext interface: attribute destination","status":"PASS"},{"name":"Unscopable handled correctly for destination property on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: attribute sampleRate","status":"PASS"},{"name":"Unscopable handled correctly for sampleRate property on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: attribute currentTime","status":"PASS"},{"name":"Unscopable handled correctly for currentTime property on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: attribute listener","status":"PASS"},{"name":"Unscopable handled correctly for listener property on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: attribute state","status":"PASS"},{"name":"Unscopable handled correctly for state property on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: attribute audioWorklet","status":"PASS"},{"name":"Unscopable handled correctly for audioWorklet property on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation resume()","status":"PASS"},{"name":"Unscopable handled correctly for resume() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: attribute onstatechange","status":"PASS"},{"name":"Unscopable handled correctly for onstatechange property on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createBuffer(unsigned long, unsigned long, float)","status":"PASS"},{"name":"Unscopable handled correctly for createBuffer(unsigned long, unsigned long, float) on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation decodeAudioData(ArrayBuffer, DecodeSuccessCallback, DecodeErrorCallback)","status":"PASS"},{"name":"Unscopable handled correctly for decodeAudioData(ArrayBuffer, DecodeSuccessCallback, DecodeErrorCallback) on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createBufferSource()","status":"PASS"},{"name":"Unscopable handled correctly for createBufferSource() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createConstantSource()","status":"PASS"},{"name":"Unscopable handled correctly for createConstantSource() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createScriptProcessor(unsigned long, unsigned long, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for createScriptProcessor(unsigned long, unsigned long, unsigned long) on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createAnalyser()","status":"PASS"},{"name":"Unscopable handled correctly for createAnalyser() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createGain()","status":"PASS"},{"name":"Unscopable handled correctly for createGain() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createDelay(double)","status":"PASS"},{"name":"Unscopable handled correctly for createDelay(double) on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createBiquadFilter()","status":"PASS"},{"name":"Unscopable handled correctly for createBiquadFilter() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createIIRFilter([object Object], [object Object])","status":"PASS"},{"name":"Unscopable handled correctly for createIIRFilter([object Object], [object Object]) on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createWaveShaper()","status":"PASS"},{"name":"Unscopable handled correctly for createWaveShaper() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createPanner()","status":"PASS"},{"name":"Unscopable handled correctly for createPanner() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createStereoPanner()","status":"PASS"},{"name":"Unscopable handled correctly for createStereoPanner() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createConvolver()","status":"PASS"},{"name":"Unscopable handled correctly for createConvolver() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createChannelSplitter(unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for createChannelSplitter(unsigned long) on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createChannelMerger(unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for createChannelMerger(unsigned long) on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createDynamicsCompressor()","status":"PASS"},{"name":"Unscopable handled correctly for createDynamicsCompressor() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createOscillator()","status":"PASS"},{"name":"Unscopable handled correctly for createOscillator() on BaseAudioContext","status":"PASS"},{"name":"BaseAudioContext interface: operation createPeriodicWave([object Object], [object Object], PeriodicWaveConstraints)","status":"PASS"},{"name":"Unscopable handled correctly for createPeriodicWave([object Object], [object Object], PeriodicWaveConstraints) on BaseAudioContext","status":"PASS"},{"name":"AudioContext interface: existence and properties of interface object","status":"PASS"},{"name":"AudioContext interface object length","status":"PASS"},{"name":"AudioContext interface object name","status":"PASS"},{"name":"AudioContext interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioContext interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioContext interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioContext interface: attribute baseLatency","status":"PASS"},{"name":"Unscopable handled correctly for baseLatency property on AudioContext","status":"PASS"},{"name":"AudioContext interface: attribute outputLatency","status":"FAIL"},{"name":"Unscopable handled correctly for outputLatency property on AudioContext","status":"PASS"},{"name":"AudioContext interface: operation getOutputTimestamp()","status":"PASS"},{"name":"Unscopable handled correctly for getOutputTimestamp() on AudioContext","status":"PASS"},{"name":"AudioContext interface: operation suspend()","status":"PASS"},{"name":"Unscopable handled correctly for suspend() on AudioContext","status":"PASS"},{"name":"AudioContext interface: operation close()","status":"PASS"},{"name":"Unscopable handled correctly for close() on AudioContext","status":"PASS"},{"name":"AudioContext interface: operation createMediaElementSource(HTMLMediaElement)","status":"FAIL"},{"name":"Unscopable handled correctly for createMediaElementSource(HTMLMediaElement) on AudioContext","status":"PASS"},{"name":"AudioContext interface: operation createMediaStreamSource(MediaStream)","status":"FAIL"},{"name":"Unscopable handled correctly for createMediaStreamSource(MediaStream) on AudioContext","status":"PASS"},{"name":"AudioContext interface: operation createMediaStreamTrackSource(MediaStreamTrack)","status":"FAIL"},{"name":"Unscopable handled correctly for createMediaStreamTrackSource(MediaStreamTrack) on AudioContext","status":"PASS"},{"name":"AudioContext interface: operation createMediaStreamDestination()","status":"FAIL"},{"name":"Unscopable handled correctly for createMediaStreamDestination() on AudioContext","status":"PASS"},{"name":"AudioContext must be primary interface of [object AudioContext]","status":"PASS"},{"name":"Stringification of [object AudioContext]","status":"PASS"},{"name":"AudioContext interface: [object AudioContext] must inherit property \"baseLatency\" with the proper type","status":"PASS"},{"name":"AudioContext interface: [object AudioContext] must inherit property \"outputLatency\" with the proper type","status":"FAIL"},{"name":"AudioContext interface: [object AudioContext] must inherit property \"getOutputTimestamp()\" with the proper type","status":"PASS"},{"name":"AudioContext interface: [object AudioContext] must inherit property \"suspend()\" with the proper type","status":"PASS"},{"name":"AudioContext interface: [object AudioContext] must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"AudioContext interface: [object AudioContext] must inherit property \"createMediaElementSource(HTMLMediaElement)\" with the proper type","status":"PASS"},{"name":"AudioContext interface: calling createMediaElementSource(HTMLMediaElement) on [object AudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioContext interface: [object AudioContext] must inherit property \"createMediaStreamSource(MediaStream)\" with the proper type","status":"PASS"},{"name":"AudioContext interface: calling createMediaStreamSource(MediaStream) on [object AudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioContext interface: [object AudioContext] must inherit property \"createMediaStreamTrackSource(MediaStreamTrack)\" with the proper type","status":"FAIL"},{"name":"AudioContext interface: calling createMediaStreamTrackSource(MediaStreamTrack) on [object AudioContext] with too few arguments must throw TypeError","status":"FAIL"},{"name":"AudioContext interface: [object AudioContext] must inherit property \"createMediaStreamDestination()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"destination\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"sampleRate\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"currentTime\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"listener\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"state\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"audioWorklet\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"resume()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"onstatechange\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createBuffer(unsigned long, unsigned long, float)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createBuffer(unsigned long, unsigned long, float) on [object AudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"decodeAudioData(ArrayBuffer, DecodeSuccessCallback, DecodeErrorCallback)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling decodeAudioData(ArrayBuffer, DecodeSuccessCallback, DecodeErrorCallback) on [object AudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createBufferSource()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createConstantSource()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createScriptProcessor(unsigned long, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createScriptProcessor(unsigned long, unsigned long, unsigned long) on [object AudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createAnalyser()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createGain()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createDelay(double)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createDelay(double) on [object AudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createBiquadFilter()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createIIRFilter([object Object], [object Object])\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createIIRFilter([object Object], [object Object]) on [object AudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createWaveShaper()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createPanner()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createStereoPanner()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createConvolver()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createChannelSplitter(unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createChannelSplitter(unsigned long) on [object AudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createChannelMerger(unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createChannelMerger(unsigned long) on [object AudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createDynamicsCompressor()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createOscillator()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object AudioContext] must inherit property \"createPeriodicWave([object Object], [object Object], PeriodicWaveConstraints)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createPeriodicWave([object Object], [object Object], PeriodicWaveConstraints) on [object AudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"OfflineAudioContext interface: existence and properties of interface object","status":"PASS"},{"name":"OfflineAudioContext interface object length","status":"PASS"},{"name":"OfflineAudioContext interface object name","status":"PASS"},{"name":"OfflineAudioContext interface: existence and properties of interface prototype object","status":"PASS"},{"name":"OfflineAudioContext interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"OfflineAudioContext interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"OfflineAudioContext interface: operation startRendering()","status":"PASS"},{"name":"Unscopable handled correctly for startRendering() on OfflineAudioContext","status":"PASS"},{"name":"OfflineAudioContext interface: operation suspend(double)","status":"PASS"},{"name":"Unscopable handled correctly for suspend(double) on OfflineAudioContext","status":"PASS"},{"name":"OfflineAudioContext interface: attribute length","status":"PASS"},{"name":"Unscopable handled correctly for length property on OfflineAudioContext","status":"PASS"},{"name":"OfflineAudioContext interface: attribute oncomplete","status":"PASS"},{"name":"Unscopable handled correctly for oncomplete property on OfflineAudioContext","status":"PASS"},{"name":"OfflineAudioContext must be primary interface of [object OfflineAudioContext]","status":"PASS"},{"name":"Stringification of [object OfflineAudioContext]","status":"PASS"},{"name":"OfflineAudioContext interface: [object OfflineAudioContext] must inherit property \"startRendering()\" with the proper type","status":"PASS"},{"name":"OfflineAudioContext interface: [object OfflineAudioContext] must inherit property \"suspend(double)\" with the proper type","status":"PASS"},{"name":"OfflineAudioContext interface: calling suspend(double) on [object OfflineAudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"OfflineAudioContext interface: [object OfflineAudioContext] must inherit property \"length\" with the proper type","status":"PASS"},{"name":"OfflineAudioContext interface: [object OfflineAudioContext] must inherit property \"oncomplete\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"destination\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"sampleRate\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"currentTime\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"listener\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"state\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"audioWorklet\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"resume()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"onstatechange\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createBuffer(unsigned long, unsigned long, float)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createBuffer(unsigned long, unsigned long, float) on [object OfflineAudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"decodeAudioData(ArrayBuffer, DecodeSuccessCallback, DecodeErrorCallback)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling decodeAudioData(ArrayBuffer, DecodeSuccessCallback, DecodeErrorCallback) on [object OfflineAudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createBufferSource()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createConstantSource()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createScriptProcessor(unsigned long, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createScriptProcessor(unsigned long, unsigned long, unsigned long) on [object OfflineAudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createAnalyser()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createGain()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createDelay(double)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createDelay(double) on [object OfflineAudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createBiquadFilter()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createIIRFilter([object Object], [object Object])\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createIIRFilter([object Object], [object Object]) on [object OfflineAudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createWaveShaper()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createPanner()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createStereoPanner()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createConvolver()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createChannelSplitter(unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createChannelSplitter(unsigned long) on [object OfflineAudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createChannelMerger(unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createChannelMerger(unsigned long) on [object OfflineAudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createDynamicsCompressor()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createOscillator()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: [object OfflineAudioContext] must inherit property \"createPeriodicWave([object Object], [object Object], PeriodicWaveConstraints)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createPeriodicWave([object Object], [object Object], PeriodicWaveConstraints) on [object OfflineAudioContext] with too few arguments must throw TypeError","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: existence and properties of interface object","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface object length","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface object name","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: existence and properties of interface prototype object","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: attribute renderedBuffer","status":"PASS"},{"name":"Unscopable handled correctly for renderedBuffer property on OfflineAudioCompletionEvent","status":"PASS"},{"name":"OfflineAudioCompletionEvent must be primary interface of [object OfflineAudioCompletionEvent]","status":"PASS"},{"name":"Stringification of [object OfflineAudioCompletionEvent]","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: [object OfflineAudioCompletionEvent] must inherit property \"renderedBuffer\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: existence and properties of interface object","status":"PASS"},{"name":"AudioBuffer interface object length","status":"PASS"},{"name":"AudioBuffer interface object name","status":"PASS"},{"name":"AudioBuffer interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioBuffer interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioBuffer interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioBuffer interface: attribute sampleRate","status":"PASS"},{"name":"Unscopable handled correctly for sampleRate property on AudioBuffer","status":"PASS"},{"name":"AudioBuffer interface: attribute length","status":"PASS"},{"name":"Unscopable handled correctly for length property on AudioBuffer","status":"PASS"},{"name":"AudioBuffer interface: attribute duration","status":"PASS"},{"name":"Unscopable handled correctly for duration property on AudioBuffer","status":"PASS"},{"name":"AudioBuffer interface: attribute numberOfChannels","status":"PASS"},{"name":"Unscopable handled correctly for numberOfChannels property on AudioBuffer","status":"PASS"},{"name":"AudioBuffer interface: operation getChannelData(unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for getChannelData(unsigned long) on AudioBuffer","status":"PASS"},{"name":"AudioBuffer interface: operation copyFromChannel(Float32Array, unsigned long, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for copyFromChannel(Float32Array, unsigned long, unsigned long) on AudioBuffer","status":"PASS"},{"name":"AudioBuffer interface: operation copyToChannel(Float32Array, unsigned long, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for copyToChannel(Float32Array, unsigned long, unsigned long) on AudioBuffer","status":"PASS"},{"name":"AudioBuffer must be primary interface of [object AudioBuffer]","status":"PASS"},{"name":"Stringification of [object AudioBuffer]","status":"PASS"},{"name":"AudioBuffer interface: [object AudioBuffer] must inherit property \"sampleRate\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: [object AudioBuffer] must inherit property \"length\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: [object AudioBuffer] must inherit property \"duration\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: [object AudioBuffer] must inherit property \"numberOfChannels\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: [object AudioBuffer] must inherit property \"getChannelData(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: calling getChannelData(unsigned long) on [object AudioBuffer] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioBuffer interface: [object AudioBuffer] must inherit property \"copyFromChannel(Float32Array, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: calling copyFromChannel(Float32Array, unsigned long, unsigned long) on [object AudioBuffer] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioBuffer interface: [object AudioBuffer] must inherit property \"copyToChannel(Float32Array, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: calling copyToChannel(Float32Array, unsigned long, unsigned long) on [object AudioBuffer] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: existence and properties of interface object","status":"PASS"},{"name":"AudioNode interface object length","status":"PASS"},{"name":"AudioNode interface object name","status":"PASS"},{"name":"AudioNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioNode interface: operation connect(AudioNode, unsigned long, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for connect(AudioNode, unsigned long, unsigned long) on AudioNode","status":"PASS"},{"name":"AudioNode interface: operation connect(AudioParam, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for connect(AudioParam, unsigned long) on AudioNode","status":"PASS"},{"name":"AudioNode interface: operation disconnect()","status":"PASS"},{"name":"Unscopable handled correctly for disconnect() on AudioNode","status":"PASS"},{"name":"AudioNode interface: operation disconnect(unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for disconnect(unsigned long) on AudioNode","status":"PASS"},{"name":"AudioNode interface: operation disconnect(AudioNode)","status":"PASS"},{"name":"Unscopable handled correctly for disconnect(AudioNode) on AudioNode","status":"PASS"},{"name":"AudioNode interface: operation disconnect(AudioNode, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for disconnect(AudioNode, unsigned long) on AudioNode","status":"PASS"},{"name":"AudioNode interface: operation disconnect(AudioNode, unsigned long, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for disconnect(AudioNode, unsigned long, unsigned long) on AudioNode","status":"PASS"},{"name":"AudioNode interface: operation disconnect(AudioParam)","status":"PASS"},{"name":"Unscopable handled correctly for disconnect(AudioParam) on AudioNode","status":"PASS"},{"name":"AudioNode interface: operation disconnect(AudioParam, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for disconnect(AudioParam, unsigned long) on AudioNode","status":"PASS"},{"name":"AudioNode interface: attribute context","status":"PASS"},{"name":"Unscopable handled correctly for context property on AudioNode","status":"PASS"},{"name":"AudioNode interface: attribute numberOfInputs","status":"PASS"},{"name":"Unscopable handled correctly for numberOfInputs property on AudioNode","status":"PASS"},{"name":"AudioNode interface: attribute numberOfOutputs","status":"PASS"},{"name":"Unscopable handled correctly for numberOfOutputs property on AudioNode","status":"PASS"},{"name":"AudioNode interface: attribute channelCount","status":"PASS"},{"name":"Unscopable handled correctly for channelCount property on AudioNode","status":"PASS"},{"name":"AudioNode interface: attribute channelCountMode","status":"PASS"},{"name":"Unscopable handled correctly for channelCountMode property on AudioNode","status":"PASS"},{"name":"AudioNode interface: attribute channelInterpretation","status":"PASS"},{"name":"Unscopable handled correctly for channelInterpretation property on AudioNode","status":"PASS"},{"name":"AudioParam interface: existence and properties of interface object","status":"PASS"},{"name":"AudioParam interface object length","status":"PASS"},{"name":"AudioParam interface object name","status":"PASS"},{"name":"AudioParam interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioParam interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioParam interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioParam interface: attribute value","status":"PASS"},{"name":"Unscopable handled correctly for value property on AudioParam","status":"PASS"},{"name":"AudioParam interface: attribute defaultValue","status":"PASS"},{"name":"Unscopable handled correctly for defaultValue property on AudioParam","status":"PASS"},{"name":"AudioParam interface: attribute minValue","status":"PASS"},{"name":"Unscopable handled correctly for minValue property on AudioParam","status":"PASS"},{"name":"AudioParam interface: attribute maxValue","status":"PASS"},{"name":"Unscopable handled correctly for maxValue property on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation setValueAtTime(float, double)","status":"PASS"},{"name":"Unscopable handled correctly for setValueAtTime(float, double) on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation linearRampToValueAtTime(float, double)","status":"PASS"},{"name":"Unscopable handled correctly for linearRampToValueAtTime(float, double) on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation exponentialRampToValueAtTime(float, double)","status":"PASS"},{"name":"Unscopable handled correctly for exponentialRampToValueAtTime(float, double) on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation setTargetAtTime(float, double, float)","status":"PASS"},{"name":"Unscopable handled correctly for setTargetAtTime(float, double, float) on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation setValueCurveAtTime([object Object], double, double)","status":"PASS"},{"name":"Unscopable handled correctly for setValueCurveAtTime([object Object], double, double) on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation cancelScheduledValues(double)","status":"PASS"},{"name":"Unscopable handled correctly for cancelScheduledValues(double) on AudioParam","status":"PASS"},{"name":"AudioParam interface: operation cancelAndHoldAtTime(double)","status":"PASS"},{"name":"Unscopable handled correctly for cancelAndHoldAtTime(double) on AudioParam","status":"PASS"},{"name":"AudioParam must be primary interface of [object AudioParam]","status":"PASS"},{"name":"Stringification of [object AudioParam]","status":"PASS"},{"name":"AudioParam interface: [object AudioParam] must inherit property \"value\" with the proper type","status":"PASS"},{"name":"AudioParam interface: [object AudioParam] must inherit property \"defaultValue\" with the proper type","status":"PASS"},{"name":"AudioParam interface: [object AudioParam] must inherit property \"minValue\" with the proper type","status":"PASS"},{"name":"AudioParam interface: [object AudioParam] must inherit property \"maxValue\" with the proper type","status":"PASS"},{"name":"AudioParam interface: [object AudioParam] must inherit property \"setValueAtTime(float, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling setValueAtTime(float, double) on [object AudioParam] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: [object AudioParam] must inherit property \"linearRampToValueAtTime(float, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling linearRampToValueAtTime(float, double) on [object AudioParam] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: [object AudioParam] must inherit property \"exponentialRampToValueAtTime(float, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling exponentialRampToValueAtTime(float, double) on [object AudioParam] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: [object AudioParam] must inherit property \"setTargetAtTime(float, double, float)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling setTargetAtTime(float, double, float) on [object AudioParam] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: [object AudioParam] must inherit property \"setValueCurveAtTime([object Object], double, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling setValueCurveAtTime([object Object], double, double) on [object AudioParam] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: [object AudioParam] must inherit property \"cancelScheduledValues(double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling cancelScheduledValues(double) on [object AudioParam] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: [object AudioParam] must inherit property \"cancelAndHoldAtTime(double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling cancelAndHoldAtTime(double) on [object AudioParam] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: existence and properties of interface object","status":"PASS"},{"name":"AudioScheduledSourceNode interface object length","status":"PASS"},{"name":"AudioScheduledSourceNode interface object name","status":"PASS"},{"name":"AudioScheduledSourceNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioScheduledSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioScheduledSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioScheduledSourceNode interface: attribute onended","status":"PASS"},{"name":"Unscopable handled correctly for onended property on AudioScheduledSourceNode","status":"PASS"},{"name":"AudioScheduledSourceNode interface: operation start(double)","status":"PASS"},{"name":"Unscopable handled correctly for start(double) on AudioScheduledSourceNode","status":"PASS"},{"name":"AudioScheduledSourceNode interface: operation stop(double)","status":"PASS"},{"name":"Unscopable handled correctly for stop(double) on AudioScheduledSourceNode","status":"PASS"},{"name":"AnalyserNode interface: existence and properties of interface object","status":"PASS"},{"name":"AnalyserNode interface object length","status":"PASS"},{"name":"AnalyserNode interface object name","status":"PASS"},{"name":"AnalyserNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AnalyserNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AnalyserNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AnalyserNode interface: operation getFloatFrequencyData(Float32Array)","status":"PASS"},{"name":"Unscopable handled correctly for getFloatFrequencyData(Float32Array) on AnalyserNode","status":"PASS"},{"name":"AnalyserNode interface: operation getByteFrequencyData(Uint8Array)","status":"PASS"},{"name":"Unscopable handled correctly for getByteFrequencyData(Uint8Array) on AnalyserNode","status":"PASS"},{"name":"AnalyserNode interface: operation getFloatTimeDomainData(Float32Array)","status":"PASS"},{"name":"Unscopable handled correctly for getFloatTimeDomainData(Float32Array) on AnalyserNode","status":"PASS"},{"name":"AnalyserNode interface: operation getByteTimeDomainData(Uint8Array)","status":"PASS"},{"name":"Unscopable handled correctly for getByteTimeDomainData(Uint8Array) on AnalyserNode","status":"PASS"},{"name":"AnalyserNode interface: attribute fftSize","status":"PASS"},{"name":"Unscopable handled correctly for fftSize property on AnalyserNode","status":"PASS"},{"name":"AnalyserNode interface: attribute frequencyBinCount","status":"PASS"},{"name":"Unscopable handled correctly for frequencyBinCount property on AnalyserNode","status":"PASS"},{"name":"AnalyserNode interface: attribute minDecibels","status":"PASS"},{"name":"Unscopable handled correctly for minDecibels property on AnalyserNode","status":"PASS"},{"name":"AnalyserNode interface: attribute maxDecibels","status":"PASS"},{"name":"Unscopable handled correctly for maxDecibels property on AnalyserNode","status":"PASS"},{"name":"AnalyserNode interface: attribute smoothingTimeConstant","status":"PASS"},{"name":"Unscopable handled correctly for smoothingTimeConstant property on AnalyserNode","status":"PASS"},{"name":"AnalyserNode must be primary interface of [object AnalyserNode]","status":"PASS"},{"name":"Stringification of [object AnalyserNode]","status":"PASS"},{"name":"AnalyserNode interface: [object AnalyserNode] must inherit property \"getFloatFrequencyData(Float32Array)\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: calling getFloatFrequencyData(Float32Array) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AnalyserNode interface: [object AnalyserNode] must inherit property \"getByteFrequencyData(Uint8Array)\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: calling getByteFrequencyData(Uint8Array) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AnalyserNode interface: [object AnalyserNode] must inherit property \"getFloatTimeDomainData(Float32Array)\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: calling getFloatTimeDomainData(Float32Array) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AnalyserNode interface: [object AnalyserNode] must inherit property \"getByteTimeDomainData(Uint8Array)\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: calling getByteTimeDomainData(Uint8Array) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AnalyserNode interface: [object AnalyserNode] must inherit property \"fftSize\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: [object AnalyserNode] must inherit property \"frequencyBinCount\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: [object AnalyserNode] must inherit property \"minDecibels\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: [object AnalyserNode] must inherit property \"maxDecibels\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: [object AnalyserNode] must inherit property \"smoothingTimeConstant\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object AnalyserNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AnalyserNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: existence and properties of interface object","status":"PASS"},{"name":"AudioBufferSourceNode interface object length","status":"PASS"},{"name":"AudioBufferSourceNode interface object name","status":"PASS"},{"name":"AudioBufferSourceNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioBufferSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioBufferSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute buffer","status":"PASS"},{"name":"Unscopable handled correctly for buffer property on AudioBufferSourceNode","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute playbackRate","status":"PASS"},{"name":"Unscopable handled correctly for playbackRate property on AudioBufferSourceNode","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute detune","status":"PASS"},{"name":"Unscopable handled correctly for detune property on AudioBufferSourceNode","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute loop","status":"PASS"},{"name":"Unscopable handled correctly for loop property on AudioBufferSourceNode","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute loopStart","status":"PASS"},{"name":"Unscopable handled correctly for loopStart property on AudioBufferSourceNode","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute loopEnd","status":"PASS"},{"name":"Unscopable handled correctly for loopEnd property on AudioBufferSourceNode","status":"PASS"},{"name":"AudioBufferSourceNode interface: operation start(double, double, double)","status":"PASS"},{"name":"Unscopable handled correctly for start(double, double, double) on AudioBufferSourceNode","status":"PASS"},{"name":"AudioBufferSourceNode interface: operation stop(double)","status":"FAIL"},{"name":"Unscopable handled correctly for stop(double) on AudioBufferSourceNode","status":"PASS"},{"name":"AudioBufferSourceNode must be primary interface of [object AudioBufferSourceNode]","status":"PASS"},{"name":"Stringification of [object AudioBufferSourceNode]","status":"PASS"},{"name":"AudioBufferSourceNode interface: [object AudioBufferSourceNode] must inherit property \"buffer\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: [object AudioBufferSourceNode] must inherit property \"playbackRate\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: [object AudioBufferSourceNode] must inherit property \"detune\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: [object AudioBufferSourceNode] must inherit property \"loop\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: [object AudioBufferSourceNode] must inherit property \"loopStart\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: [object AudioBufferSourceNode] must inherit property \"loopEnd\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: [object AudioBufferSourceNode] must inherit property \"start(double, double, double)\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: calling start(double, double, double) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioBufferSourceNode interface: [object AudioBufferSourceNode] must inherit property \"stop(double)\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: calling stop(double) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: [object AudioBufferSourceNode] must inherit property \"onended\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: [object AudioBufferSourceNode] must inherit property \"start(double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling start(double) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: [object AudioBufferSourceNode] must inherit property \"stop(double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling stop(double) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object AudioBufferSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioBufferSourceNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"AudioDestinationNode interface: existence and properties of interface object","status":"PASS"},{"name":"AudioDestinationNode interface object length","status":"PASS"},{"name":"AudioDestinationNode interface object name","status":"PASS"},{"name":"AudioDestinationNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioDestinationNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioDestinationNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioDestinationNode interface: attribute maxChannelCount","status":"PASS"},{"name":"Unscopable handled correctly for maxChannelCount property on AudioDestinationNode","status":"PASS"},{"name":"AudioDestinationNode must be primary interface of [object AudioDestinationNode]","status":"PASS"},{"name":"Stringification of [object AudioDestinationNode]","status":"PASS"},{"name":"AudioDestinationNode interface: [object AudioDestinationNode] must inherit property \"maxChannelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object AudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object AudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object AudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object AudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object AudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object AudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object AudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object AudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioDestinationNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"AudioListener interface: existence and properties of interface object","status":"PASS"},{"name":"AudioListener interface object length","status":"PASS"},{"name":"AudioListener interface object name","status":"PASS"},{"name":"AudioListener interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioListener interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioListener interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioListener interface: attribute positionX","status":"PASS"},{"name":"Unscopable handled correctly for positionX property on AudioListener","status":"PASS"},{"name":"AudioListener interface: attribute positionY","status":"PASS"},{"name":"Unscopable handled correctly for positionY property on AudioListener","status":"PASS"},{"name":"AudioListener interface: attribute positionZ","status":"PASS"},{"name":"Unscopable handled correctly for positionZ property on AudioListener","status":"PASS"},{"name":"AudioListener interface: attribute forwardX","status":"PASS"},{"name":"Unscopable handled correctly for forwardX property on AudioListener","status":"PASS"},{"name":"AudioListener interface: attribute forwardY","status":"PASS"},{"name":"Unscopable handled correctly for forwardY property on AudioListener","status":"PASS"},{"name":"AudioListener interface: attribute forwardZ","status":"PASS"},{"name":"Unscopable handled correctly for forwardZ property on AudioListener","status":"PASS"},{"name":"AudioListener interface: attribute upX","status":"PASS"},{"name":"Unscopable handled correctly for upX property on AudioListener","status":"PASS"},{"name":"AudioListener interface: attribute upY","status":"PASS"},{"name":"Unscopable handled correctly for upY property on AudioListener","status":"PASS"},{"name":"AudioListener interface: attribute upZ","status":"PASS"},{"name":"Unscopable handled correctly for upZ property on AudioListener","status":"PASS"},{"name":"AudioListener interface: operation setPosition(float, float, float)","status":"PASS"},{"name":"Unscopable handled correctly for setPosition(float, float, float) on AudioListener","status":"PASS"},{"name":"AudioListener interface: operation setOrientation(float, float, float, float, float, float)","status":"PASS"},{"name":"Unscopable handled correctly for setOrientation(float, float, float, float, float, float) on AudioListener","status":"PASS"},{"name":"AudioListener must be primary interface of [object AudioListener]","status":"PASS"},{"name":"Stringification of [object AudioListener]","status":"PASS"},{"name":"AudioListener interface: [object AudioListener] must inherit property \"positionX\" with the proper type","status":"PASS"},{"name":"AudioListener interface: [object AudioListener] must inherit property \"positionY\" with the proper type","status":"PASS"},{"name":"AudioListener interface: [object AudioListener] must inherit property \"positionZ\" with the proper type","status":"PASS"},{"name":"AudioListener interface: [object AudioListener] must inherit property \"forwardX\" with the proper type","status":"PASS"},{"name":"AudioListener interface: [object AudioListener] must inherit property \"forwardY\" with the proper type","status":"PASS"},{"name":"AudioListener interface: [object AudioListener] must inherit property \"forwardZ\" with the proper type","status":"PASS"},{"name":"AudioListener interface: [object AudioListener] must inherit property \"upX\" with the proper type","status":"PASS"},{"name":"AudioListener interface: [object AudioListener] must inherit property \"upY\" with the proper type","status":"PASS"},{"name":"AudioListener interface: [object AudioListener] must inherit property \"upZ\" with the proper type","status":"PASS"},{"name":"AudioListener interface: [object AudioListener] must inherit property \"setPosition(float, float, float)\" with the proper type","status":"PASS"},{"name":"AudioListener interface: calling setPosition(float, float, float) on [object AudioListener] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioListener interface: [object AudioListener] must inherit property \"setOrientation(float, float, float, float, float, float)\" with the proper type","status":"PASS"},{"name":"AudioListener interface: calling setOrientation(float, float, float, float, float, float) on [object AudioListener] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioProcessingEvent interface: existence and properties of interface object","status":"PASS"},{"name":"AudioProcessingEvent interface object length","status":"PASS"},{"name":"AudioProcessingEvent interface object name","status":"PASS"},{"name":"AudioProcessingEvent interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioProcessingEvent interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioProcessingEvent interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioProcessingEvent interface: attribute playbackTime","status":"PASS"},{"name":"Unscopable handled correctly for playbackTime property on AudioProcessingEvent","status":"PASS"},{"name":"AudioProcessingEvent interface: attribute inputBuffer","status":"PASS"},{"name":"Unscopable handled correctly for inputBuffer property on AudioProcessingEvent","status":"PASS"},{"name":"AudioProcessingEvent interface: attribute outputBuffer","status":"PASS"},{"name":"Unscopable handled correctly for outputBuffer property on AudioProcessingEvent","status":"PASS"},{"name":"AudioProcessingEvent must be primary interface of [object AudioProcessingEvent]","status":"PASS"},{"name":"Stringification of [object AudioProcessingEvent]","status":"PASS"},{"name":"AudioProcessingEvent interface: [object AudioProcessingEvent] must inherit property \"playbackTime\" with the proper type","status":"PASS"},{"name":"AudioProcessingEvent interface: [object AudioProcessingEvent] must inherit property \"inputBuffer\" with the proper type","status":"PASS"},{"name":"AudioProcessingEvent interface: [object AudioProcessingEvent] must inherit property \"outputBuffer\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: existence and properties of interface object","status":"PASS"},{"name":"BiquadFilterNode interface object length","status":"PASS"},{"name":"BiquadFilterNode interface object name","status":"PASS"},{"name":"BiquadFilterNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"BiquadFilterNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"BiquadFilterNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"BiquadFilterNode interface: attribute type","status":"PASS"},{"name":"Unscopable handled correctly for type property on BiquadFilterNode","status":"PASS"},{"name":"BiquadFilterNode interface: attribute frequency","status":"PASS"},{"name":"Unscopable handled correctly for frequency property on BiquadFilterNode","status":"PASS"},{"name":"BiquadFilterNode interface: attribute detune","status":"PASS"},{"name":"Unscopable handled correctly for detune property on BiquadFilterNode","status":"PASS"},{"name":"BiquadFilterNode interface: attribute Q","status":"PASS"},{"name":"Unscopable handled correctly for Q property on BiquadFilterNode","status":"PASS"},{"name":"BiquadFilterNode interface: attribute gain","status":"PASS"},{"name":"Unscopable handled correctly for gain property on BiquadFilterNode","status":"PASS"},{"name":"BiquadFilterNode interface: operation getFrequencyResponse(Float32Array, Float32Array, Float32Array)","status":"PASS"},{"name":"Unscopable handled correctly for getFrequencyResponse(Float32Array, Float32Array, Float32Array) on BiquadFilterNode","status":"PASS"},{"name":"BiquadFilterNode must be primary interface of [object BiquadFilterNode]","status":"PASS"},{"name":"Stringification of [object BiquadFilterNode]","status":"PASS"},{"name":"BiquadFilterNode interface: [object BiquadFilterNode] must inherit property \"type\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: [object BiquadFilterNode] must inherit property \"frequency\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: [object BiquadFilterNode] must inherit property \"detune\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: [object BiquadFilterNode] must inherit property \"Q\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: [object BiquadFilterNode] must inherit property \"gain\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: [object BiquadFilterNode] must inherit property \"getFrequencyResponse(Float32Array, Float32Array, Float32Array)\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: calling getFrequencyResponse(Float32Array, Float32Array, Float32Array) on [object BiquadFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object BiquadFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object BiquadFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object BiquadFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object BiquadFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object BiquadFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object BiquadFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object BiquadFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object BiquadFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object BiquadFilterNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"ChannelMergerNode interface: existence and properties of interface object","status":"PASS"},{"name":"ChannelMergerNode interface object length","status":"PASS"},{"name":"ChannelMergerNode interface object name","status":"PASS"},{"name":"ChannelMergerNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ChannelMergerNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ChannelMergerNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ChannelMergerNode must be primary interface of [object ChannelMergerNode]","status":"PASS"},{"name":"Stringification of [object ChannelMergerNode]","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object ChannelMergerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object ChannelMergerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object ChannelMergerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object ChannelMergerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object ChannelMergerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object ChannelMergerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object ChannelMergerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object ChannelMergerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelMergerNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"ChannelSplitterNode interface: existence and properties of interface object","status":"PASS"},{"name":"ChannelSplitterNode interface object length","status":"PASS"},{"name":"ChannelSplitterNode interface object name","status":"PASS"},{"name":"ChannelSplitterNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ChannelSplitterNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ChannelSplitterNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ChannelSplitterNode must be primary interface of [object ChannelSplitterNode]","status":"PASS"},{"name":"Stringification of [object ChannelSplitterNode]","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object ChannelSplitterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object ChannelSplitterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object ChannelSplitterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object ChannelSplitterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object ChannelSplitterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object ChannelSplitterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object ChannelSplitterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object ChannelSplitterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ChannelSplitterNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"ConstantSourceNode interface: existence and properties of interface object","status":"PASS"},{"name":"ConstantSourceNode interface object length","status":"PASS"},{"name":"ConstantSourceNode interface object name","status":"PASS"},{"name":"ConstantSourceNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ConstantSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ConstantSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ConstantSourceNode interface: attribute offset","status":"PASS"},{"name":"Unscopable handled correctly for offset property on ConstantSourceNode","status":"PASS"},{"name":"ConstantSourceNode must be primary interface of [object ConstantSourceNode]","status":"PASS"},{"name":"Stringification of [object ConstantSourceNode]","status":"PASS"},{"name":"ConstantSourceNode interface: [object ConstantSourceNode] must inherit property \"offset\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: [object ConstantSourceNode] must inherit property \"onended\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: [object ConstantSourceNode] must inherit property \"start(double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling start(double) on [object ConstantSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: [object ConstantSourceNode] must inherit property \"stop(double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling stop(double) on [object ConstantSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object ConstantSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object ConstantSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object ConstantSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object ConstantSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object ConstantSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object ConstantSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object ConstantSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object ConstantSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConstantSourceNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"ConvolverNode interface: existence and properties of interface object","status":"PASS"},{"name":"ConvolverNode interface object length","status":"PASS"},{"name":"ConvolverNode interface object name","status":"PASS"},{"name":"ConvolverNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ConvolverNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ConvolverNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ConvolverNode interface: attribute buffer","status":"PASS"},{"name":"Unscopable handled correctly for buffer property on ConvolverNode","status":"PASS"},{"name":"ConvolverNode interface: attribute normalize","status":"PASS"},{"name":"Unscopable handled correctly for normalize property on ConvolverNode","status":"PASS"},{"name":"ConvolverNode must be primary interface of [object ConvolverNode]","status":"PASS"},{"name":"Stringification of [object ConvolverNode]","status":"PASS"},{"name":"ConvolverNode interface: [object ConvolverNode] must inherit property \"buffer\" with the proper type","status":"PASS"},{"name":"ConvolverNode interface: [object ConvolverNode] must inherit property \"normalize\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object ConvolverNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object ConvolverNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object ConvolverNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object ConvolverNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object ConvolverNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object ConvolverNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object ConvolverNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object ConvolverNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ConvolverNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"DelayNode interface: existence and properties of interface object","status":"PASS"},{"name":"DelayNode interface object length","status":"PASS"},{"name":"DelayNode interface object name","status":"PASS"},{"name":"DelayNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DelayNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DelayNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"DelayNode interface: attribute delayTime","status":"PASS"},{"name":"Unscopable handled correctly for delayTime property on DelayNode","status":"PASS"},{"name":"DelayNode must be primary interface of [object DelayNode]","status":"PASS"},{"name":"Stringification of [object DelayNode]","status":"PASS"},{"name":"DelayNode interface: [object DelayNode] must inherit property \"delayTime\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object DelayNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object DelayNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object DelayNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object DelayNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object DelayNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object DelayNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object DelayNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object DelayNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DelayNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: existence and properties of interface object","status":"PASS"},{"name":"DynamicsCompressorNode interface object length","status":"PASS"},{"name":"DynamicsCompressorNode interface object name","status":"PASS"},{"name":"DynamicsCompressorNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DynamicsCompressorNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DynamicsCompressorNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute threshold","status":"PASS"},{"name":"Unscopable handled correctly for threshold property on DynamicsCompressorNode","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute knee","status":"PASS"},{"name":"Unscopable handled correctly for knee property on DynamicsCompressorNode","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute ratio","status":"PASS"},{"name":"Unscopable handled correctly for ratio property on DynamicsCompressorNode","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute reduction","status":"PASS"},{"name":"Unscopable handled correctly for reduction property on DynamicsCompressorNode","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute attack","status":"PASS"},{"name":"Unscopable handled correctly for attack property on DynamicsCompressorNode","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute release","status":"PASS"},{"name":"Unscopable handled correctly for release property on DynamicsCompressorNode","status":"PASS"},{"name":"DynamicsCompressorNode must be primary interface of [object DynamicsCompressorNode]","status":"PASS"},{"name":"Stringification of [object DynamicsCompressorNode]","status":"PASS"},{"name":"DynamicsCompressorNode interface: [object DynamicsCompressorNode] must inherit property \"threshold\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: [object DynamicsCompressorNode] must inherit property \"knee\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: [object DynamicsCompressorNode] must inherit property \"ratio\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: [object DynamicsCompressorNode] must inherit property \"reduction\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: [object DynamicsCompressorNode] must inherit property \"attack\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: [object DynamicsCompressorNode] must inherit property \"release\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object DynamicsCompressorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object DynamicsCompressorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object DynamicsCompressorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object DynamicsCompressorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object DynamicsCompressorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object DynamicsCompressorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object DynamicsCompressorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object DynamicsCompressorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object DynamicsCompressorNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"GainNode interface: existence and properties of interface object","status":"PASS"},{"name":"GainNode interface object length","status":"PASS"},{"name":"GainNode interface object name","status":"PASS"},{"name":"GainNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"GainNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"GainNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"GainNode interface: attribute gain","status":"PASS"},{"name":"Unscopable handled correctly for gain property on GainNode","status":"PASS"},{"name":"GainNode must be primary interface of [object GainNode]","status":"PASS"},{"name":"Stringification of [object GainNode]","status":"PASS"},{"name":"GainNode interface: [object GainNode] must inherit property \"gain\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object GainNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object GainNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object GainNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object GainNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object GainNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object GainNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object GainNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object GainNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object GainNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"IIRFilterNode interface: existence and properties of interface object","status":"PASS"},{"name":"IIRFilterNode interface object length","status":"PASS"},{"name":"IIRFilterNode interface object name","status":"PASS"},{"name":"IIRFilterNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"IIRFilterNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"IIRFilterNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"IIRFilterNode interface: operation getFrequencyResponse(Float32Array, Float32Array, Float32Array)","status":"PASS"},{"name":"Unscopable handled correctly for getFrequencyResponse(Float32Array, Float32Array, Float32Array) on IIRFilterNode","status":"PASS"},{"name":"IIRFilterNode must be primary interface of [object IIRFilterNode]","status":"PASS"},{"name":"Stringification of [object IIRFilterNode]","status":"PASS"},{"name":"IIRFilterNode interface: [object IIRFilterNode] must inherit property \"getFrequencyResponse(Float32Array, Float32Array, Float32Array)\" with the proper type","status":"PASS"},{"name":"IIRFilterNode interface: calling getFrequencyResponse(Float32Array, Float32Array, Float32Array) on [object IIRFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object IIRFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object IIRFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object IIRFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object IIRFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object IIRFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object IIRFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object IIRFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object IIRFilterNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object IIRFilterNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: existence and properties of interface object","status":"PASS"},{"name":"MediaElementAudioSourceNode interface object length","status":"PASS"},{"name":"MediaElementAudioSourceNode interface object name","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: attribute mediaElement","status":"PASS"},{"name":"Unscopable handled correctly for mediaElement property on MediaElementAudioSourceNode","status":"PASS"},{"name":"MediaElementAudioSourceNode must be primary interface of [object MediaElementAudioSourceNode]","status":"PASS"},{"name":"Stringification of [object MediaElementAudioSourceNode]","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: [object MediaElementAudioSourceNode] must inherit property \"mediaElement\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object MediaElementAudioSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object MediaElementAudioSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object MediaElementAudioSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object MediaElementAudioSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object MediaElementAudioSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object MediaElementAudioSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object MediaElementAudioSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object MediaElementAudioSourceNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaElementAudioSourceNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: existence and properties of interface object","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface object length","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface object name","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: attribute stream","status":"PASS"},{"name":"Unscopable handled correctly for stream property on MediaStreamAudioDestinationNode","status":"PASS"},{"name":"MediaStreamAudioDestinationNode must be primary interface of [object MediaStreamAudioDestinationNode]","status":"PASS"},{"name":"Stringification of [object MediaStreamAudioDestinationNode]","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"stream\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object MediaStreamAudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object MediaStreamAudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object MediaStreamAudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object MediaStreamAudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object MediaStreamAudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object MediaStreamAudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object MediaStreamAudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object MediaStreamAudioDestinationNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object MediaStreamAudioDestinationNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface: existence and properties of interface object","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface object length","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface object name","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface: attribute mediaStream","status":"PASS"},{"name":"Unscopable handled correctly for mediaStream property on MediaStreamAudioSourceNode","status":"PASS"},{"name":"MediaStreamTrackAudioSourceNode interface: existence and properties of interface object","status":"FAIL"},{"name":"MediaStreamTrackAudioSourceNode interface object length","status":"FAIL"},{"name":"MediaStreamTrackAudioSourceNode interface object name","status":"FAIL"},{"name":"MediaStreamTrackAudioSourceNode interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"MediaStreamTrackAudioSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"MediaStreamTrackAudioSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"OscillatorNode interface: existence and properties of interface object","status":"PASS"},{"name":"OscillatorNode interface object length","status":"PASS"},{"name":"OscillatorNode interface object name","status":"PASS"},{"name":"OscillatorNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"OscillatorNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"OscillatorNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"OscillatorNode interface: attribute type","status":"PASS"},{"name":"Unscopable handled correctly for type property on OscillatorNode","status":"PASS"},{"name":"OscillatorNode interface: attribute frequency","status":"PASS"},{"name":"Unscopable handled correctly for frequency property on OscillatorNode","status":"PASS"},{"name":"OscillatorNode interface: attribute detune","status":"PASS"},{"name":"Unscopable handled correctly for detune property on OscillatorNode","status":"PASS"},{"name":"OscillatorNode interface: operation setPeriodicWave(PeriodicWave)","status":"PASS"},{"name":"Unscopable handled correctly for setPeriodicWave(PeriodicWave) on OscillatorNode","status":"PASS"},{"name":"OscillatorNode must be primary interface of [object OscillatorNode]","status":"PASS"},{"name":"Stringification of [object OscillatorNode]","status":"PASS"},{"name":"OscillatorNode interface: [object OscillatorNode] must inherit property \"type\" with the proper type","status":"PASS"},{"name":"OscillatorNode interface: [object OscillatorNode] must inherit property \"frequency\" with the proper type","status":"PASS"},{"name":"OscillatorNode interface: [object OscillatorNode] must inherit property \"detune\" with the proper type","status":"PASS"},{"name":"OscillatorNode interface: [object OscillatorNode] must inherit property \"setPeriodicWave(PeriodicWave)\" with the proper type","status":"PASS"},{"name":"OscillatorNode interface: calling setPeriodicWave(PeriodicWave) on [object OscillatorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: [object OscillatorNode] must inherit property \"onended\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: [object OscillatorNode] must inherit property \"start(double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling start(double) on [object OscillatorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: [object OscillatorNode] must inherit property \"stop(double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling stop(double) on [object OscillatorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object OscillatorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object OscillatorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object OscillatorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object OscillatorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object OscillatorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object OscillatorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object OscillatorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object OscillatorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object OscillatorNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"PannerNode interface: existence and properties of interface object","status":"PASS"},{"name":"PannerNode interface object length","status":"PASS"},{"name":"PannerNode interface object name","status":"PASS"},{"name":"PannerNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"PannerNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"PannerNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"PannerNode interface: attribute panningModel","status":"PASS"},{"name":"Unscopable handled correctly for panningModel property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute positionX","status":"PASS"},{"name":"Unscopable handled correctly for positionX property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute positionY","status":"PASS"},{"name":"Unscopable handled correctly for positionY property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute positionZ","status":"PASS"},{"name":"Unscopable handled correctly for positionZ property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute orientationX","status":"PASS"},{"name":"Unscopable handled correctly for orientationX property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute orientationY","status":"PASS"},{"name":"Unscopable handled correctly for orientationY property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute orientationZ","status":"PASS"},{"name":"Unscopable handled correctly for orientationZ property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute distanceModel","status":"PASS"},{"name":"Unscopable handled correctly for distanceModel property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute refDistance","status":"PASS"},{"name":"Unscopable handled correctly for refDistance property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute maxDistance","status":"PASS"},{"name":"Unscopable handled correctly for maxDistance property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute rolloffFactor","status":"PASS"},{"name":"Unscopable handled correctly for rolloffFactor property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute coneInnerAngle","status":"PASS"},{"name":"Unscopable handled correctly for coneInnerAngle property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute coneOuterAngle","status":"PASS"},{"name":"Unscopable handled correctly for coneOuterAngle property on PannerNode","status":"PASS"},{"name":"PannerNode interface: attribute coneOuterGain","status":"PASS"},{"name":"Unscopable handled correctly for coneOuterGain property on PannerNode","status":"PASS"},{"name":"PannerNode interface: operation setPosition(float, float, float)","status":"PASS"},{"name":"Unscopable handled correctly for setPosition(float, float, float) on PannerNode","status":"PASS"},{"name":"PannerNode interface: operation setOrientation(float, float, float)","status":"PASS"},{"name":"Unscopable handled correctly for setOrientation(float, float, float) on PannerNode","status":"PASS"},{"name":"PannerNode must be primary interface of [object PannerNode]","status":"PASS"},{"name":"Stringification of [object PannerNode]","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"panningModel\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"positionX\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"positionY\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"positionZ\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"orientationX\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"orientationY\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"orientationZ\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"distanceModel\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"refDistance\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"maxDistance\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"rolloffFactor\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"coneInnerAngle\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"coneOuterAngle\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"coneOuterGain\" with the proper type","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"setPosition(float, float, float)\" with the proper type","status":"PASS"},{"name":"PannerNode interface: calling setPosition(float, float, float) on [object PannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"PannerNode interface: [object PannerNode] must inherit property \"setOrientation(float, float, float)\" with the proper type","status":"PASS"},{"name":"PannerNode interface: calling setOrientation(float, float, float) on [object PannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object PannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object PannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object PannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object PannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object PannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object PannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object PannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object PannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object PannerNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"PeriodicWave interface: existence and properties of interface object","status":"PASS"},{"name":"PeriodicWave interface object length","status":"PASS"},{"name":"PeriodicWave interface object name","status":"PASS"},{"name":"PeriodicWave interface: existence and properties of interface prototype object","status":"PASS"},{"name":"PeriodicWave interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"PeriodicWave interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"PeriodicWave must be primary interface of [object PeriodicWave]","status":"PASS"},{"name":"Stringification of [object PeriodicWave]","status":"PASS"},{"name":"ScriptProcessorNode interface: existence and properties of interface object","status":"PASS"},{"name":"ScriptProcessorNode interface object length","status":"PASS"},{"name":"ScriptProcessorNode interface object name","status":"PASS"},{"name":"ScriptProcessorNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ScriptProcessorNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ScriptProcessorNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ScriptProcessorNode interface: attribute onaudioprocess","status":"PASS"},{"name":"Unscopable handled correctly for onaudioprocess property on ScriptProcessorNode","status":"PASS"},{"name":"ScriptProcessorNode interface: attribute bufferSize","status":"PASS"},{"name":"Unscopable handled correctly for bufferSize property on ScriptProcessorNode","status":"PASS"},{"name":"ScriptProcessorNode must be primary interface of [object ScriptProcessorNode]","status":"PASS"},{"name":"Stringification of [object ScriptProcessorNode]","status":"PASS"},{"name":"ScriptProcessorNode interface: [object ScriptProcessorNode] must inherit property \"onaudioprocess\" with the proper type","status":"PASS"},{"name":"ScriptProcessorNode interface: [object ScriptProcessorNode] must inherit property \"bufferSize\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object ScriptProcessorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object ScriptProcessorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object ScriptProcessorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object ScriptProcessorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object ScriptProcessorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object ScriptProcessorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object ScriptProcessorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object ScriptProcessorNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object ScriptProcessorNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"StereoPannerNode interface: existence and properties of interface object","status":"PASS"},{"name":"StereoPannerNode interface object length","status":"PASS"},{"name":"StereoPannerNode interface object name","status":"PASS"},{"name":"StereoPannerNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"StereoPannerNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"StereoPannerNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"StereoPannerNode interface: attribute pan","status":"PASS"},{"name":"Unscopable handled correctly for pan property on StereoPannerNode","status":"PASS"},{"name":"StereoPannerNode must be primary interface of [object StereoPannerNode]","status":"PASS"},{"name":"Stringification of [object StereoPannerNode]","status":"PASS"},{"name":"StereoPannerNode interface: [object StereoPannerNode] must inherit property \"pan\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object StereoPannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object StereoPannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object StereoPannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object StereoPannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object StereoPannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object StereoPannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object StereoPannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object StereoPannerNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object StereoPannerNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"WaveShaperNode interface: existence and properties of interface object","status":"PASS"},{"name":"WaveShaperNode interface object length","status":"PASS"},{"name":"WaveShaperNode interface object name","status":"PASS"},{"name":"WaveShaperNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"WaveShaperNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"WaveShaperNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"WaveShaperNode interface: attribute curve","status":"PASS"},{"name":"Unscopable handled correctly for curve property on WaveShaperNode","status":"PASS"},{"name":"WaveShaperNode interface: attribute oversample","status":"PASS"},{"name":"Unscopable handled correctly for oversample property on WaveShaperNode","status":"PASS"},{"name":"WaveShaperNode must be primary interface of [object WaveShaperNode]","status":"PASS"},{"name":"Stringification of [object WaveShaperNode]","status":"PASS"},{"name":"WaveShaperNode interface: [object WaveShaperNode] must inherit property \"curve\" with the proper type","status":"PASS"},{"name":"WaveShaperNode interface: [object WaveShaperNode] must inherit property \"oversample\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object WaveShaperNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object WaveShaperNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object WaveShaperNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object WaveShaperNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object WaveShaperNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object WaveShaperNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object WaveShaperNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object WaveShaperNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object WaveShaperNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"AudioWorklet interface: existence and properties of interface object","status":"PASS"},{"name":"AudioWorklet interface object length","status":"PASS"},{"name":"AudioWorklet interface object name","status":"PASS"},{"name":"AudioWorklet interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioWorklet interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioWorklet interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioWorklet must be primary interface of [object AudioWorklet]","status":"PASS"},{"name":"Stringification of [object AudioWorklet]","status":"PASS"},{"name":"AudioWorkletGlobalScope interface: existence and properties of interface object","status":"PASS"},{"name":"AudioParamMap interface: existence and properties of interface object","status":"PASS"},{"name":"AudioParamMap interface object length","status":"PASS"},{"name":"AudioParamMap interface object name","status":"PASS"},{"name":"AudioParamMap interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioParamMap interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioParamMap interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioParamMap must be primary interface of [object AudioParamMap]","status":"PASS"},{"name":"Stringification of [object AudioParamMap]","status":"PASS"},{"name":"AudioWorkletNode interface: existence and properties of interface object","status":"PASS"},{"name":"AudioWorkletNode interface object length","status":"PASS"},{"name":"AudioWorkletNode interface object name","status":"PASS"},{"name":"AudioWorkletNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioWorkletNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioWorkletNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioWorkletNode interface: attribute parameters","status":"FAIL"},{"name":"Unscopable handled correctly for parameters property on AudioWorkletNode","status":"PASS"},{"name":"AudioWorkletNode interface: attribute port","status":"FAIL"},{"name":"Unscopable handled correctly for port property on AudioWorkletNode","status":"PASS"},{"name":"AudioWorkletNode interface: attribute processorState","status":"FAIL"},{"name":"Unscopable handled correctly for processorState property on AudioWorkletNode","status":"PASS"},{"name":"AudioWorkletNode interface: attribute onprocessorstatechange","status":"FAIL"},{"name":"Unscopable handled correctly for onprocessorstatechange property on AudioWorkletNode","status":"PASS"},{"name":"AudioWorkletNode must be primary interface of [object AudioWorkletNode]","status":"PASS"},{"name":"Stringification of [object AudioWorkletNode]","status":"PASS"},{"name":"AudioWorkletNode interface: [object AudioWorkletNode] must inherit property \"parameters\" with the proper type","status":"FAIL"},{"name":"AudioWorkletNode interface: [object AudioWorkletNode] must inherit property \"port\" with the proper type","status":"FAIL"},{"name":"AudioWorkletNode interface: [object AudioWorkletNode] must inherit property \"processorState\" with the proper type","status":"FAIL"},{"name":"AudioWorkletNode interface: [object AudioWorkletNode] must inherit property \"onprocessorstatechange\" with the proper type","status":"FAIL"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"connect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, unsigned long, unsigned long) on [object AudioWorkletNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"connect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, unsigned long) on [object AudioWorkletNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on [object AudioWorkletNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on [object AudioWorkletNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on [object AudioWorkletNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on [object AudioWorkletNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on [object AudioWorkletNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on [object AudioWorkletNode] with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: [object AudioWorkletNode] must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"AudioWorkletProcessor interface: existence and properties of interface object","status":"PASS"}]}