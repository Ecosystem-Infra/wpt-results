{"status":"OK","subtests":[{"name":"Overall test","status":"PASS"},{"name":"WebGL test #0: getError was expected value: INVALID_OPERATION : after evaluating: contextA.compileShader(shaderB)","status":"PASS"},{"name":"WebGL test #1: getError was expected value: INVALID_OPERATION : after evaluating: contextA.linkProgram(programB)","status":"PASS"},{"name":"WebGL test #2: getError was expected value: INVALID_OPERATION : after evaluating: contextA.attachShader(programA, shaderB)","status":"PASS"},{"name":"WebGL test #3: getError was expected value: INVALID_OPERATION : after evaluating: contextA.attachShader(programB, shaderA)","status":"PASS"},{"name":"WebGL test #4: getError was expected value: INVALID_OPERATION : after evaluating: contextA.attachShader(programB, shaderB)","status":"PASS"},{"name":"WebGL test #5: getError was expected value: INVALID_OPERATION : after evaluating: contextA.detachShader(programA, shaderB)","status":"PASS"},{"name":"WebGL test #6: getError was expected value: INVALID_OPERATION : after evaluating: contextA.detachShader(programB, shaderA)","status":"PASS"},{"name":"WebGL test #7: getError was expected value: INVALID_OPERATION : after evaluating: contextA.detachShader(programB, shaderB)","status":"PASS"},{"name":"WebGL test #8: getError was expected value: INVALID_OPERATION : after evaluating: contextA.shaderSource(shaderB, 'foo')","status":"PASS"},{"name":"WebGL test #9: getError was expected value: INVALID_OPERATION : after evaluating: contextA.bindAttribLocation(programB, 0, 'foo')","status":"PASS"},{"name":"WebGL test #10: getError was expected value: INVALID_OPERATION : after evaluating: contextA.bindFramebuffer(contextA.FRAMEBUFFER, frameBufferB)","status":"PASS"},{"name":"WebGL test #11: getError was expected value: INVALID_OPERATION : after evaluating: contextA.bindRenderbuffer(contextA.RENDERBUFFER, renderBufferB)","status":"PASS"},{"name":"WebGL test #12: getError was expected value: INVALID_OPERATION : after evaluating: contextA.bindTexture(contextA.TEXTURE_2D, textureB)","status":"PASS"},{"name":"WebGL test #13: getError was expected value: INVALID_OPERATION : after evaluating: contextA.framebufferRenderbuffer(contextA.FRAMEBUFFER, contextA.DEPTH_ATTACHMENT, contextA.RENDERBUFFER, renderBufferB)","status":"PASS"},{"name":"WebGL test #14: getError was expected value: INVALID_OPERATION : after evaluating: contextA.framebufferTexture2D(contextA.FRAMEBUFFER, contextA.COLOR_ATTACHMENT0, contextA.TEXTURE_2D, textureB, 0)","status":"PASS"},{"name":"WebGL test #15: getError was expected value: INVALID_OPERATION : after evaluating: contextA.getProgramParameter(programB, 0)","status":"PASS"},{"name":"WebGL test #16: getError was expected value: INVALID_OPERATION : after evaluating: contextA.getProgramInfoLog(programB, 0)","status":"PASS"},{"name":"WebGL test #17: getError was expected value: INVALID_OPERATION : after evaluating: contextA.getShaderParameter(shaderB, 0)","status":"PASS"},{"name":"WebGL test #18: getError was expected value: INVALID_OPERATION : after evaluating: contextA.getShaderInfoLog(shaderB, 0)","status":"PASS"},{"name":"WebGL test #19: getError was expected value: INVALID_OPERATION : after evaluating: contextA.getShaderSource(shaderB)","status":"PASS"},{"name":"WebGL test #20: getError was expected value: INVALID_OPERATION : after evaluating: contextA.getUniform(programB, locationA)","status":"PASS"},{"name":"WebGL test #21: getError was expected value: INVALID_OPERATION : after evaluating: contextA.getUniformLocation(programB, 'u_modelViewProjMatrix')","status":"PASS"},{"name":"WebGL test #22: successfullyParsed is true","status":"PASS"}]}