{"status":"OK","subtests":[{"name":"Overall test","status":"PASS"},{"name":"WebGL test #0: shaders.length is 2","status":"PASS"},{"name":"WebGL test #1: shaders[0] == standardVert && shaders[1] == standardFrag || shaders[1] == standardVert && shaders[0] == standardFrag is true","status":"PASS"},{"name":"WebGL test #2: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #3: gl.getAttachedShaders(null) is null","status":"PASS"},{"name":"WebGL test #4: getError was expected value: INVALID_VALUE : ","status":"PASS"},{"name":"WebGL test #5: gl.getAttachedShaders(standardVert) threw exception TypeError: Type error.","status":"PASS"},{"name":"WebGL test #6: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #7: gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE) is 16","status":"PASS"},{"name":"WebGL test #8: gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_USAGE) is gl.DYNAMIC_DRAW","status":"PASS"},{"name":"WebGL test #9: getBufferParameter correctly handled invalid parameter enums","status":"PASS"},{"name":"WebGL test #10: gl.getBufferParameter(gl.ELEMENT_ARRAY_BUFFER, gl.BUFFER_SIZE) is 16","status":"PASS"},{"name":"WebGL test #11: gl.getBufferParameter(gl.ELEMENT_ARRAY_BUFFER, gl.BUFFER_USAGE) is gl.DYNAMIC_DRAW","status":"PASS"},{"name":"WebGL test #12: getBufferParameter correctly handled invalid parameter enums","status":"PASS"},{"name":"WebGL test #13: getBufferParameter correctly handled invalid target enums","status":"PASS"},{"name":"WebGL test #14: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #15: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #16: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #17: gl.checkFramebufferStatus(gl.FRAMEBUFFER) is gl.FRAMEBUFFER_COMPLETE","status":"PASS"},{"name":"WebGL test #18: gl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE) is gl.TEXTURE","status":"PASS"},{"name":"WebGL test #19: gl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME) is texture","status":"PASS"},{"name":"WebGL test #20: gl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL) is 0","status":"PASS"},{"name":"WebGL test #21: gl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE) is 0","status":"PASS"},{"name":"WebGL test #22: gl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE) is gl.RENDERBUFFER","status":"PASS"},{"name":"WebGL test #23: gl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME) is renderbuffer","status":"PASS"},{"name":"WebGL test #24: getFramebufferAttachmentParameter correctly handled invalid parameter enums","status":"PASS"},{"name":"WebGL test #25: getFramebufferAttachmentParameter correctly handled invalid target enums","status":"PASS"},{"name":"WebGL test #26: getFramebufferAttachmentParameter correctly handled invalid attachment enums","status":"PASS"},{"name":"WebGL test #27: gl.getProgramParameter(standardProgram, gl.DELETE_STATUS) is false","status":"PASS"},{"name":"WebGL test #28: gl.getProgramParameter(standardProgram, gl.LINK_STATUS) is true","status":"PASS"},{"name":"WebGL test #29: typeof gl.getProgramParameter(standardProgram, gl.VALIDATE_STATUS) is \"boolean\"","status":"PASS"},{"name":"WebGL test #30: gl.getProgramParameter(standardProgram, gl.ATTACHED_SHADERS) is 2","status":"PASS"},{"name":"WebGL test #31: gl.getProgramParameter(standardProgram, gl.ACTIVE_ATTRIBUTES) is 2","status":"PASS"},{"name":"WebGL test #32: gl.getProgramParameter(standardProgram, gl.ACTIVE_UNIFORMS) is 1","status":"PASS"},{"name":"WebGL test #33: getProgramParameter correctly handled invalid parameter enums","status":"PASS"},{"name":"WebGL test #34: gl.getRenderbufferParameter(gl.RENDERBUFFER, gl.RENDERBUFFER_WIDTH) is 2","status":"PASS"},{"name":"WebGL test #35: gl.getRenderbufferParameter(gl.RENDERBUFFER, gl.RENDERBUFFER_HEIGHT) is 2","status":"PASS"},{"name":"WebGL test #36: gl.getRenderbufferParameter(gl.RENDERBUFFER, gl.RENDERBUFFER_INTERNAL_FORMAT) is non-zero.","status":"PASS"},{"name":"WebGL test #37: gl.getRenderbufferParameter(gl.RENDERBUFFER, gl.RENDERBUFFER_DEPTH_SIZE) is non-zero.","status":"PASS"},{"name":"WebGL test #38: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #39: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #40: gl.getRenderbufferParameter(gl.RENDERBUFFER, gl.RENDERBUFFER_RED_SIZE) is non-zero.","status":"PASS"},{"name":"WebGL test #41: gl.getRenderbufferParameter(gl.RENDERBUFFER, gl.RENDERBUFFER_GREEN_SIZE) is non-zero.","status":"PASS"},{"name":"WebGL test #42: gl.getRenderbufferParameter(gl.RENDERBUFFER, gl.RENDERBUFFER_BLUE_SIZE) is non-zero.","status":"PASS"},{"name":"WebGL test #43: gl.getRenderbufferParameter(gl.RENDERBUFFER, gl.RENDERBUFFER_ALPHA_SIZE) is non-zero.","status":"PASS"},{"name":"WebGL test #44: getRenderbufferParameter correctly handled invalid parameter enums","status":"PASS"},{"name":"WebGL test #45: getRenderbufferParameter correctly handled invalid target enums","status":"PASS"},{"name":"WebGL test #46: gl.getShaderParameter(standardVert, gl.SHADER_TYPE) is gl.VERTEX_SHADER","status":"PASS"},{"name":"WebGL test #47: gl.getShaderParameter(standardVert, gl.DELETE_STATUS) is false","status":"PASS"},{"name":"WebGL test #48: gl.getShaderParameter(standardVert, gl.COMPILE_STATUS) is true","status":"PASS"},{"name":"WebGL test #49: getShaderParameter correctly handled invalid parameter enums","status":"PASS"},{"name":"WebGL test #50: gl.getTexParameter(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER) is gl.NEAREST","status":"PASS"},{"name":"WebGL test #51: gl.getTexParameter(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER) is gl.NEAREST","status":"PASS"},{"name":"WebGL test #52: gl.getTexParameter(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S) is gl.CLAMP_TO_EDGE","status":"PASS"},{"name":"WebGL test #53: gl.getTexParameter(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T) is gl.CLAMP_TO_EDGE","status":"PASS"},{"name":"WebGL test #54: getTexParameter correctly handled invalid parameter enums","status":"PASS"},{"name":"WebGL test #55: getTexParameter correctly handled invalid target enums","status":"PASS"},{"name":"WebGL test #56: gl.getProgramParameter(boolProgram, gl.LINK_STATUS) is true","status":"PASS"},{"name":"WebGL test #57: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #58: gl.getUniform(boolProgram, bvalLoc) is true","status":"PASS"},{"name":"WebGL test #59: gl.getUniform(boolProgram, bval2Loc) is [true, false]","status":"PASS"},{"name":"WebGL test #60: gl.getUniform(boolProgram, bval3Loc) is [true, false, true]","status":"PASS"},{"name":"WebGL test #61: gl.getUniform(boolProgram, bval4Loc) is [true, false, true, false]","status":"PASS"},{"name":"WebGL test #62: gl.getProgramParameter(intProgram, gl.LINK_STATUS) is true","status":"PASS"},{"name":"WebGL test #63: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #64: gl.getUniform(intProgram, ivalLoc) is 1","status":"PASS"},{"name":"WebGL test #65: gl.getUniform(intProgram, ival2Loc) is [2, 3]","status":"PASS"},{"name":"WebGL test #66: gl.getUniform(intProgram, ival3Loc) is [4, 5, 6]","status":"PASS"},{"name":"WebGL test #67: gl.getUniform(intProgram, ival4Loc) is [7, 8, 9, 10]","status":"PASS"},{"name":"WebGL test #68: gl.getProgramParameter(floatProgram, gl.LINK_STATUS) is true","status":"PASS"},{"name":"WebGL test #69: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #70: gl.getUniform(floatProgram, fvalLoc) is 11","status":"PASS"},{"name":"WebGL test #71: gl.getUniform(floatProgram, fval2Loc) is [12, 13]","status":"PASS"},{"name":"WebGL test #72: gl.getUniform(floatProgram, fval3Loc) is [14, 15, 16]","status":"PASS"},{"name":"WebGL test #73: gl.getUniform(floatProgram, fval4Loc) is [17, 18, 19, 20]","status":"PASS"},{"name":"WebGL test #74: gl.getProgramParameter(samplerProgram, gl.LINK_STATUS) is true","status":"PASS"},{"name":"WebGL test #75: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #76: gl.getUniform(samplerProgram, s2DValLoc) is 0","status":"PASS"},{"name":"WebGL test #77: gl.getUniform(samplerProgram, sCubeValLoc) is 1","status":"PASS"},{"name":"WebGL test #78: gl.getProgramParameter(matProgram, gl.LINK_STATUS) is true","status":"PASS"},{"name":"WebGL test #79: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #80: gl.getUniform(matProgram, mval2Loc) is [1, 2, 3, 4]","status":"PASS"},{"name":"WebGL test #81: gl.getUniform(matProgram, mval3Loc) is [5, 6, 7, 8, 9, 10, 11, 12, 13]","status":"PASS"},{"name":"WebGL test #82: gl.getUniform(matProgram, mval4Loc) is [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]","status":"PASS"},{"name":"WebGL test #83: gl.getVertexAttrib(1, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING) is buffer","status":"PASS"},{"name":"WebGL test #84: gl.getVertexAttrib(1, gl.VERTEX_ATTRIB_ARRAY_ENABLED) is true","status":"PASS"},{"name":"WebGL test #85: gl.getVertexAttrib(1, gl.VERTEX_ATTRIB_ARRAY_SIZE) is 4","status":"PASS"},{"name":"WebGL test #86: gl.getVertexAttrib(1, gl.VERTEX_ATTRIB_ARRAY_STRIDE) is 0","status":"PASS"},{"name":"WebGL test #87: gl.getVertexAttrib(1, gl.VERTEX_ATTRIB_ARRAY_TYPE) is gl.FLOAT","status":"PASS"},{"name":"WebGL test #88: gl.getVertexAttrib(1, gl.VERTEX_ATTRIB_ARRAY_NORMALIZED) is false","status":"PASS"},{"name":"WebGL test #89: gl.getVertexAttrib(1, gl.VERTEX_ATTRIB_ARRAY_STRIDE) is 36","status":"PASS"},{"name":"WebGL test #90: gl.getVertexAttribOffset(1, gl.VERTEX_ATTRIB_ARRAY_POINTER) is 12","status":"PASS"},{"name":"WebGL test #91: gl.getVertexAttrib(1, gl.VERTEX_ATTRIB_ARRAY_ENABLED) is false","status":"PASS"},{"name":"WebGL test #92: gl.getVertexAttrib(1, gl.CURRENT_VERTEX_ATTRIB) is [5, 6, 7, 8]","status":"PASS"},{"name":"WebGL test #93: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #94: getVertexAttrib correctly handled invalid parameter enums","status":"PASS"},{"name":"WebGL test #95: getError was expected value: INVALID_VALUE : after evaluating: gl.getVertexAttrib(16, gl.CURRENT_VERTEX_ATTRIB)","status":"PASS"},{"name":"WebGL test #96: gl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE) is gl.NONE","status":"PASS"},{"name":"WebGL test #97: gl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE) is gl.NONE","status":"PASS"},{"name":"WebGL test #98: gl.getVertexAttrib(1, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING) is null","status":"PASS"},{"name":"WebGL test #99: getError was expected value: NO_ERROR : ","status":"PASS"},{"name":"WebGL test #100: successfullyParsed is true","status":"PASS"}]}