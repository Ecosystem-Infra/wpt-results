{"status":"OK","subtests":[{"name":"createStream() returns an RTCQuicStream with initial properties set.","status":"FAIL"},{"name":"createStream() throws if the transport is not connected.","status":"FAIL"},{"name":"createStream() throws if the transport is closed.","status":"FAIL"},{"name":"RTCQuicTransport.stop() closes all local streams.","status":"FAIL"},{"name":"RTCQuicTransport.stop() closes all remote streams.","status":"FAIL"},{"name":"finish() changes state to 'closing'.","status":"FAIL"},{"name":"finish() twice does not change state.","status":"FAIL"},{"name":"reset() changes state to 'closed'.","status":"FAIL"},{"name":"reset() following finish() changes state to 'closed'.","status":"FAIL"},{"name":"createStream() followed by reset() fires a quicstream event followed by a statechange event to 'closed' on the remote side.","status":"FAIL"},{"name":"waitForReadable() resolves with remote finish","status":"FAIL"},{"name":"finish() on a stream that has already read out finish changes state to 'closed'.","status":"FAIL"},{"name":"Reading out finish on stream that has already called finish()  state to 'closed'.","status":"FAIL"},{"name":"Reading out finish then a getting a remote reset fires a statechange event to 'closed'.","status":"FAIL"},{"name":"write() with an empty array does nothing.","status":"FAIL"},{"name":"write() adds to writeBufferedAmount each call.","status":"FAIL"},{"name":"write() can write exactly maxWriteBufferedAmount.","status":"FAIL"},{"name":"write() throws if data longer than maxWriteBufferedAmount.","status":"FAIL"},{"name":"write() throws if total write buffered amount would be greater than maxWriteBufferedAmount.","status":"FAIL"},{"name":"write() causes quicstream event to fire on the remote transport.","status":"FAIL"},{"name":"finish() causes quicstream event to fire on the remote transport.","status":"FAIL"},{"name":"write() throws InvalidStateError if finish() has been called.","status":"FAIL"},{"name":"Stream closed by local reset(): write() throws InvalidStateError.","status":"FAIL"},{"name":"Stream closed by remote reset(): write() throws InvalidStateError.","status":"FAIL"},{"name":"Stream closed by finish(), followed by reading remote finish: write() throws InvalidStateError.","status":"FAIL"},{"name":"Stream closed by by reading remote finish, followed by finish(): write() throws InvalidStateError.","status":"FAIL"},{"name":"Stream closed by local RTCQuicTransport stop(): write() throws InvalidStateError.","status":"FAIL"},{"name":"Stream closed by remote RTCQuicTransport stop(): write() throws InvalidStateError.","status":"FAIL"},{"name":"readBufferedAmount set to 0 after local reset().","status":"FAIL"},{"name":"readBufferedAmount set to 0 after remote reset().","status":"FAIL"},{"name":"writeBufferedAmount set to 0 after local reset().","status":"FAIL"},{"name":"writeBufferedAmount set to 0 after reading remote finish, followed by finish().","status":"FAIL"},{"name":"writeBufferedAmount set to 0 after local RTCQuicTransport stop().","status":"FAIL"},{"name":"writeBufferedAmount maintained after finish() has been called.","status":"FAIL"},{"name":"waitForWriteBufferedAmountBelow(0) resolves immediately.","status":"FAIL"},{"name":"waitForWriteBufferedAmountBelow(maxWriteBufferedAmount) resolves immediately.","status":"FAIL"},{"name":"Pending waitForWriteBufferedAmountBelow() promises rejected after finish().","status":"FAIL"},{"name":"waitForWriteBufferedAmountBelow() promises immediately rejected after finish().","status":"FAIL"},{"name":"Pending waitForWriteBufferedAmountBelow() promises rejected after reset().","status":"FAIL"},{"name":"Pending waitForWriteBufferedAmountBelow() promises rejected after RTCQuicTransport stop().","status":"FAIL"},{"name":"Stream closed by local reset(): waitForWriteBufferedBelow() rejects with InvalidStateError.","status":"FAIL"},{"name":"Stream closed by remote reset(): waitForWriteBufferedBelow() rejects with InvalidStateError.","status":"FAIL"},{"name":"Stream closed by finish(), followed by reading remote finish: waitForWriteBufferedBelow() rejects with InvalidStateError.","status":"FAIL"},{"name":"Stream closed by by reading remote finish, followed by finish(): waitForWriteBufferedBelow() rejects with InvalidStateError.","status":"FAIL"},{"name":"Stream closed by local RTCQuicTransport stop(): waitForWriteBufferedBelow() rejects with InvalidStateError.","status":"FAIL"},{"name":"Stream closed by remote RTCQuicTransport stop(): waitForWriteBufferedBelow() rejects with InvalidStateError.","status":"FAIL"},{"name":"readInto() on new local stream returns amount 0.","status":"FAIL"},{"name":"Stream closed by local reset(): readInto() throws InvalidStateError.","status":"FAIL"},{"name":"Stream closed by remote reset(): readInto() throws InvalidStateError.","status":"FAIL"},{"name":"Stream closed by finish(), followed by reading remote finish: readInto() throws InvalidStateError.","status":"FAIL"},{"name":"Stream closed by by reading remote finish, followed by finish(): readInto() throws InvalidStateError.","status":"FAIL"},{"name":"Stream closed by local RTCQuicTransport stop(): readInto() throws InvalidStateError.","status":"FAIL"},{"name":"Stream closed by remote RTCQuicTransport stop(): readInto() throws InvalidStateError.","status":"FAIL"},{"name":"Read 1 byte.","status":"FAIL"},{"name":"readInto() reads out finish after reading all data.","status":"FAIL"},{"name":"Read maxReadBufferedAmount bytes all at once.","status":"FAIL"},{"name":"waitForReadable() resolves with finish().","status":"FAIL"},{"name":"waitForReadable() resolves early if remote finish is received.","status":"FAIL"},{"name":"waitForReadable() rejects with TypeError if amount is more than maxReadBufferedAmount.","status":"FAIL"},{"name":"waitForReadable() promises immediately rejected with InvalidStateError after finish is read out.","status":"FAIL"},{"name":"Pending waitForReadable() promises rejected after reset().","status":"FAIL"},{"name":"Pending waitForReadable() promises rejected after remote reset().","status":"FAIL"},{"name":"Pending waitForReadable() promises rejected after RTCQuicTransport stop().","status":"FAIL"},{"name":"Pending waitForReadable() promises rejected after remote RTCQuicTransport stop().","status":"FAIL"},{"name":"Stream closed by local reset(): waitForReadable() rejects with InvalidStateError.","status":"FAIL"},{"name":"Stream closed by remote reset(): waitForReadable() rejects with InvalidStateError.","status":"FAIL"},{"name":"Stream closed by finish(), followed by reading remote finish: waitForReadable() rejects with InvalidStateError.","status":"FAIL"},{"name":"Stream closed by by reading remote finish, followed by finish(): waitForReadable() rejects with InvalidStateError.","status":"FAIL"},{"name":"Stream closed by local RTCQuicTransport stop(): waitForReadable() rejects with InvalidStateError.","status":"FAIL"},{"name":"Stream closed by remote RTCQuicTransport stop(): waitForReadable() rejects with InvalidStateError.","status":"FAIL"}]}