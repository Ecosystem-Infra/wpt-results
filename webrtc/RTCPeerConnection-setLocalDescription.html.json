{"status":"OK","subtests":[{"name":"setLocalDescription with valid offer should succeed","status":"FAIL"},{"name":"setLocalDescription with type offer and null sdp should use lastOffer generated from createOffer","status":"FAIL"},{"name":"setLocalDescription() with offer not created by own createOffer() should reject with InvalidModificationError","status":"FAIL"},{"name":"Set created offer other than last offer should reject with InvalidModificationError","status":"FAIL"},{"name":"Creating and setting offer multiple times should succeed","status":"FAIL"},{"name":"setLocalDescription(offer) should never resolve if connection is closed in parallel","status":"PASS"},{"name":"setLocalDescription() with valid answer should succeed","status":"FAIL"},{"name":"setLocalDescription() with type answer and null sdp should use lastAnswer generated from createAnswer","status":"FAIL"},{"name":"setLocalDescription() with answer not created by own createAnswer() should reject with InvalidModificationError","status":"FAIL"},{"name":"Calling createOffer() and setLocalDescription() again after one round of local-offer/remote-answer should succeed","status":"FAIL"},{"name":"Switching role from answerer to offerer after going back to stable state should succeed","status":"FAIL"},{"name":"Calling setLocalDescription(answer) from stable state should reject with InvalidStateError","status":"FAIL"},{"name":"Calling setLocalDescription(answer) from have-local-offer state should reject with InvalidStateError","status":"FAIL"},{"name":"Test onsignalingstatechange event for setLocalDescription with valid offer should succeed","status":"PASS"},{"name":"Test onsignalingstatechange event for Creating and setting offer multiple times should succeed","status":"PASS"},{"name":"Test onsignalingstatechange event for setLocalDescription() with valid answer should succeed","status":"PASS"},{"name":"Test onsignalingstatechange event for Calling createOffer() and setLocalDescription() again after one round of local-offer/remote-answer should succeed","status":"PASS"},{"name":"Test onsignalingstatechange event for Switching role from answerer to offerer after going back to stable state should succeed","status":"PASS"}]}