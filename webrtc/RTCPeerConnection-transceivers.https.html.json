{"status":"TIMEOUT","subtests":[{"name":"addTrack: creates a transceiver for the sender","status":"PASS"},{"name":"addTrack: \"transceiver == {sender,receiver}\"","status":"PASS"},{"name":"addTrack: transceiver.sender is associated with the track","status":"PASS"},{"name":"addTrack: transceiver.receiver has its own track","status":"PASS"},{"name":"addTrack: transceiver.receiver's track is muted","status":"PASS"},{"name":"addTrack: transceiver is not associated with an m-section","status":"PASS"},{"name":"addTrack: transceiver is not stopped","status":"PASS"},{"name":"addTrack: transceiver's direction is sendrecv","status":"PASS"},{"name":"addTrack: transceiver's currentDirection is null","status":"PASS"},{"name":"setLocalDescription(offer): transceiver gets associated with an m-section","status":"PASS"},{"name":"setLocalDescription(offer): transceiver.mid matches the offer SDP","status":"PASS"},{"name":"setRemoteDescription(offer): ontrack fires with a track","status":"PASS"},{"name":"setRemoteDescription(offer): ontrack's track.id is the same as track.id","status":"FAIL"},{"name":"setRemoteDescription(offer): ontrack fires with a transceiver.","status":"PASS"},{"name":"setRemoteDescription(offer): transceiver.mid is the same on both ends","status":"PASS"},{"name":"setRemoteDescription(offer): \"transceiver == {sender,receiver}\"","status":"PASS"},{"name":"setRemoteDescription(offer): transceiver.direction is recvonly","status":"PASS"},{"name":"setRemoteDescription(offer): transceiver.currentDirection is null","status":"PASS"},{"name":"setRemoteDescription(offer): transceiver.stopped is false","status":"PASS"},{"name":"setLocalDescription(answer): transceiver.currentDirection is recvonly","status":"PASS"},{"name":"setLocalDescription(answer): transceiver.currentDirection is sendonly","status":"TIMEOUT"},{"name":"addTransceiver(track): creates a transceiver for the track","status":"NOTRUN"},{"name":"addTransceiver(track): \"transceiver == {sender,receiver}\"","status":"NOTRUN"},{"name":"addTransceiver(track, init): initialize direction to inactive","status":"NOTRUN"},{"name":"addTransceiver(track, init): initialize sendEncodings[0].active to false","status":"NOTRUN"},{"name":"addTransceiver(0 streams): ontrack fires with no stream","status":"NOTRUN"},{"name":"addTransceiver(1 stream): ontrack fires with corresponding stream","status":"NOTRUN"},{"name":"addTransceiver(2 streams): ontrack fires with corresponding two streams","status":"NOTRUN"},{"name":"addTrack(0 streams): ontrack fires with no stream","status":"NOTRUN"},{"name":"addTrack(1 stream): ontrack fires with corresponding stream","status":"NOTRUN"},{"name":"addTrack(2 streams): ontrack fires with corresponding two streams","status":"NOTRUN"},{"name":"addTransceiver('audio'): creates a transceiver with direction sendrecv","status":"NOTRUN"},{"name":"addTransceiver('audio'): transceiver.receiver.track.kind == 'audio'","status":"NOTRUN"},{"name":"addTransceiver('video'): transceiver.receiver.track.kind == 'video'","status":"NOTRUN"},{"name":"addTransceiver('audio'): transceiver.sender.track == null","status":"NOTRUN"},{"name":"addTransceiver('audio'): transceiver.currentDirection is null","status":"NOTRUN"},{"name":"addTransceiver('audio'): transceiver.stopped is false","status":"NOTRUN"},{"name":"addTrack reuses reusable transceivers","status":"NOTRUN"},{"name":"addTransceiver does not reuse reusable transceivers","status":"NOTRUN"},{"name":"Can setup two-way call using a single transceiver","status":"NOTRUN"},{"name":"Closing the PC stops the transceivers","status":"NOTRUN"}]}