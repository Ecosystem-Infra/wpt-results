{"status":"OK","subtests":[{"name":"document.adoptedStyleSheets should initially have length 0.","status":"FAIL"},{"name":"new CSSStyleSheet produces empty CSSStyleSheet","status":"FAIL"},{"name":"CSSStyleSheet.replace produces Promise<CSSStyleSheet>","status":"FAIL"},{"name":"Constructed style sheets can be applied on document","status":"FAIL"},{"name":"Constructed style sheets can be applied on shadow root","status":"FAIL"},{"name":"Changes to constructed stylesheets through CSSOM is reflected","status":"FAIL"},{"name":"Constructed stylesheet can be used and modified in multiple TreeScopes","status":"FAIL"},{"name":"Stylesheets constructed on the main Document cannot be used in iframes","status":"FAIL"},{"name":"Stylesheet constructed on iframe cannot be used in the main Document","status":"FAIL"},{"name":"Adding non-constructed stylesheet to AdoptedStyleSheets is not allowed when the owner document of the stylesheet is in the same document tree as the AdoptedStyleSheets","status":"FAIL"},{"name":"Adding non-constructed stylesheet to AdoptedStyleSheets is not allowed when the owner document of the stylesheet and the AdoptedStyleSheets are in different document trees","status":"FAIL"},{"name":"CSSStyleSheet.replaceSync replaces stylesheet text synchronously","status":"FAIL"},{"name":"CSSStyleSheet.replaceSync throws exception when there is import rule inside","status":"FAIL"},{"name":"Inserting an @import rule through insertRule on a constructed stylesheet throws an exception","status":"FAIL"},{"name":"CSSStyleSheet.replace allows import rule inside","status":"FAIL"},{"name":"CSSStyleSheet.replace returns rejected promise on failed imports","status":"FAIL"},{"name":"Cloning a shadow host will not clone shadow root, and also adoptedStyleSheets","status":"FAIL"},{"name":"Importing a shadow host will not copy shadow root, and also adoptedStyleSheets","status":"FAIL"},{"name":"Adopting a shadow host will empty adoptedStyleSheets if adopting to a different document","status":"FAIL"}]}