{"status":"OK","subtests":[{"name":"Piping through a duck-typed pass-through transform stream should work","status":"FAIL"},{"name":"Piping through a transform errored on the writable end does not cause an unhandled promise rejection","status":"FAIL"},{"name":"pipeThrough should not call pipeTo on this","status":"FAIL"},{"name":"pipeThrough should not call pipeTo on the ReadableStream prototype","status":"FAIL"},{"name":"pipeThrough should brand-check this and not allow 'null'","status":"FAIL"},{"name":"pipeThrough should brand-check readable and not allow 'null'","status":"FAIL"},{"name":"pipeThrough should brand-check this and not allow 'undefined'","status":"FAIL"},{"name":"pipeThrough should brand-check readable and not allow 'undefined'","status":"FAIL"},{"name":"pipeThrough should brand-check this and not allow '0'","status":"FAIL"},{"name":"pipeThrough should brand-check readable and not allow '0'","status":"FAIL"},{"name":"pipeThrough should brand-check this and not allow 'NaN'","status":"FAIL"},{"name":"pipeThrough should brand-check readable and not allow 'NaN'","status":"FAIL"},{"name":"pipeThrough should brand-check this and not allow 'true'","status":"FAIL"},{"name":"pipeThrough should brand-check readable and not allow 'true'","status":"FAIL"},{"name":"pipeThrough should brand-check this and not allow 'ReadableStream'","status":"FAIL"},{"name":"pipeThrough should brand-check readable and not allow 'ReadableStream'","status":"FAIL"},{"name":"pipeThrough should brand-check this and not allow '[object Object]'","status":"FAIL"},{"name":"pipeThrough should brand-check readable and not allow '[object Object]'","status":"FAIL"},{"name":"pipeThrough should brand-check writable and not allow 'null'","status":"FAIL"},{"name":"pipeThrough should brand-check writable and not allow 'undefined'","status":"FAIL"},{"name":"pipeThrough should brand-check writable and not allow '0'","status":"FAIL"},{"name":"pipeThrough should brand-check writable and not allow 'NaN'","status":"FAIL"},{"name":"pipeThrough should brand-check writable and not allow 'true'","status":"FAIL"},{"name":"pipeThrough should brand-check writable and not allow 'WritableStream'","status":"FAIL"},{"name":"pipeThrough should brand-check writable and not allow '[object Object]'","status":"FAIL"},{"name":"pipeThrough should rethrow errors from accessing readable or writable","status":"FAIL"},{"name":"invalid values of signal should throw; specifically 'null'","status":"FAIL"},{"name":"invalid values of signal should throw; specifically '0'","status":"FAIL"},{"name":"invalid values of signal should throw; specifically 'NaN'","status":"FAIL"},{"name":"invalid values of signal should throw; specifically 'true'","status":"FAIL"},{"name":"invalid values of signal should throw; specifically 'AbortSignal'","status":"FAIL"},{"name":"invalid values of signal should throw; specifically '[object Object]'","status":"FAIL"},{"name":"pipeThrough should accept a real AbortSignal","status":"FAIL"},{"name":"pipeThrough should throw if this is locked","status":"FAIL"},{"name":"pipeThrough should throw if writable is locked","status":"FAIL"},{"name":"pipeThrough should not care if readable is locked","status":"FAIL"},{"name":"preventCancel should work","status":"FAIL"},{"name":"preventClose should work","status":"FAIL"},{"name":"preventAbort should work","status":"FAIL"}]}