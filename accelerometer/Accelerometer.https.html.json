{"status":"ERROR","subtests":[{"name":"Accelerometer: Test that 'onreading' is called and sensor reading is valid","status":"FAIL"},{"name":"Accelerometer: sensor reading is correct","status":"FAIL"},{"name":"Accelerometer: sensor timestamp is updated when time passes","status":"FAIL"},{"name":"Accelerometer: Test that sensor can be successfully created and its states are correct.","status":"FAIL"},{"name":"Accelerometer: sensor.start() returns undefined","status":"FAIL"},{"name":"Accelerometer: no exception is thrown when calling start() on already started sensor","status":"FAIL"},{"name":"Accelerometer: sensor.stop() returns undefined","status":"FAIL"},{"name":"Accelerometer: no exception is thrown when calling stop() on already stopped sensor","status":"FAIL"},{"name":"Accelerometer: Test that fresh reading is fetched on start()","status":"FAIL"},{"name":"Accelerometer: sensor readings can not be fired on the background tab","status":"FAIL"},{"name":"Accelerometer: frequency hint works","status":"FAIL"},{"name":"Accelerometer: sensor receives suspend / resume notifications when  cross-origin subframe is focused","status":"FAIL"},{"name":"Accelerometer: throw 'NotSupportedError' for an unsupported sensor option","status":"FAIL"},{"name":"Accelerometer: throw 'TypeError' if frequency is invalid","status":"FAIL"},{"name":"Accelerometer: sensor reading is correct when options.referenceFrame is 'screen'","status":"FAIL"},{"name":"Accelerometer: throw 'TypeError' if referenceFrame is not one of enumeration values","status":"FAIL"}]}