{"status":"OK","subtests":[{"name":"idl_test setup","status":"FAIL"},{"name":"Partial interface Window: original interface defined","status":"FAIL"},{"name":"Node interface: existence and properties of interface object","status":"PASS"},{"name":"Node interface object length","status":"PASS"},{"name":"Node interface object name","status":"PASS"},{"name":"Node interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Node interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Node interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Node interface: constant ELEMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ELEMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant ATTRIBUTE_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ATTRIBUTE_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant TEXT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant TEXT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant CDATA_SECTION_NODE on interface object","status":"PASS"},{"name":"Node interface: constant CDATA_SECTION_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant ENTITY_REFERENCE_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ENTITY_REFERENCE_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant ENTITY_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ENTITY_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant PROCESSING_INSTRUCTION_NODE on interface object","status":"PASS"},{"name":"Node interface: constant PROCESSING_INSTRUCTION_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant COMMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant COMMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_TYPE_NODE on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_TYPE_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_FRAGMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_FRAGMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant NOTATION_NODE on interface object","status":"PASS"},{"name":"Node interface: constant NOTATION_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: attribute nodeType","status":"PASS"},{"name":"Node interface: attribute nodeName","status":"PASS"},{"name":"Node interface: attribute baseURI","status":"PASS"},{"name":"Node interface: attribute isConnected","status":"PASS"},{"name":"Node interface: attribute ownerDocument","status":"PASS"},{"name":"Node interface: operation getRootNode(GetRootNodeOptions)","status":"PASS"},{"name":"Node interface: attribute parentNode","status":"PASS"},{"name":"Node interface: attribute parentElement","status":"PASS"},{"name":"Node interface: operation hasChildNodes()","status":"PASS"},{"name":"Node interface: attribute childNodes","status":"PASS"},{"name":"Node interface: attribute firstChild","status":"PASS"},{"name":"Node interface: attribute lastChild","status":"PASS"},{"name":"Node interface: attribute previousSibling","status":"PASS"},{"name":"Node interface: attribute nextSibling","status":"PASS"},{"name":"Node interface: attribute nodeValue","status":"PASS"},{"name":"Node interface: attribute textContent","status":"PASS"},{"name":"Node interface: operation normalize()","status":"PASS"},{"name":"Node interface: operation cloneNode(boolean)","status":"PASS"},{"name":"Node interface: operation isEqualNode(Node)","status":"PASS"},{"name":"Node interface: operation isSameNode(Node)","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_DISCONNECTED on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_DISCONNECTED on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_PRECEDING on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_PRECEDING on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_FOLLOWING on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_FOLLOWING on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINS on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINS on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINED_BY on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINED_BY on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC on interface prototype object","status":"PASS"},{"name":"Node interface: operation compareDocumentPosition(Node)","status":"PASS"},{"name":"Node interface: operation contains(Node)","status":"PASS"},{"name":"Node interface: operation lookupPrefix(DOMString)","status":"PASS"},{"name":"Node interface: operation lookupNamespaceURI(DOMString)","status":"PASS"},{"name":"Node interface: operation isDefaultNamespace(DOMString)","status":"PASS"},{"name":"Node interface: operation insertBefore(Node, Node)","status":"PASS"},{"name":"Node interface: operation appendChild(Node)","status":"PASS"},{"name":"Node interface: operation replaceChild(Node, Node)","status":"PASS"},{"name":"Node interface: operation removeChild(Node)","status":"PASS"}]}