{"status":"OK","subtests":[{"name":"Test driver","status":"PASS"},{"name":"Partial interface Window: original interface defined","status":"PASS"},{"name":"Event interface: existence and properties of interface object","status":"PASS"},{"name":"Event interface object length","status":"PASS"},{"name":"Event interface object name","status":"PASS"},{"name":"Event interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Event interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Event interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Event interface: attribute type","status":"PASS"},{"name":"Unscopable handled correctly for type property on Event","status":"PASS"},{"name":"Event interface: attribute target","status":"PASS"},{"name":"Unscopable handled correctly for target property on Event","status":"PASS"},{"name":"Event interface: attribute srcElement","status":"PASS"},{"name":"Unscopable handled correctly for srcElement property on Event","status":"PASS"},{"name":"Event interface: attribute currentTarget","status":"PASS"},{"name":"Unscopable handled correctly for currentTarget property on Event","status":"PASS"},{"name":"Event interface: operation composedPath()","status":"PASS"},{"name":"Unscopable handled correctly for composedPath() on Event","status":"PASS"},{"name":"Event interface: constant NONE on interface object","status":"PASS"},{"name":"Event interface: constant NONE on interface prototype object","status":"PASS"},{"name":"Event interface: constant CAPTURING_PHASE on interface object","status":"PASS"},{"name":"Event interface: constant CAPTURING_PHASE on interface prototype object","status":"PASS"},{"name":"Event interface: constant AT_TARGET on interface object","status":"PASS"},{"name":"Event interface: constant AT_TARGET on interface prototype object","status":"PASS"},{"name":"Event interface: constant BUBBLING_PHASE on interface object","status":"PASS"},{"name":"Event interface: constant BUBBLING_PHASE on interface prototype object","status":"PASS"},{"name":"Event interface: attribute eventPhase","status":"PASS"},{"name":"Unscopable handled correctly for eventPhase property on Event","status":"PASS"},{"name":"Event interface: operation stopPropagation()","status":"PASS"},{"name":"Unscopable handled correctly for stopPropagation() on Event","status":"PASS"},{"name":"Event interface: operation stopImmediatePropagation()","status":"PASS"},{"name":"Unscopable handled correctly for stopImmediatePropagation() on Event","status":"PASS"},{"name":"Event interface: attribute bubbles","status":"PASS"},{"name":"Unscopable handled correctly for bubbles property on Event","status":"PASS"},{"name":"Event interface: attribute cancelable","status":"PASS"},{"name":"Unscopable handled correctly for cancelable property on Event","status":"PASS"},{"name":"Event interface: attribute returnValue","status":"PASS"},{"name":"Unscopable handled correctly for returnValue property on Event","status":"PASS"},{"name":"Event interface: operation preventDefault()","status":"PASS"},{"name":"Unscopable handled correctly for preventDefault() on Event","status":"PASS"},{"name":"Event interface: attribute defaultPrevented","status":"PASS"},{"name":"Unscopable handled correctly for defaultPrevented property on Event","status":"PASS"},{"name":"Event interface: attribute composed","status":"PASS"},{"name":"Unscopable handled correctly for composed property on Event","status":"PASS"},{"name":"Event interface: attribute timeStamp","status":"PASS"},{"name":"Unscopable handled correctly for timeStamp property on Event","status":"PASS"},{"name":"Event interface: operation initEvent(DOMString, boolean, boolean)","status":"PASS"},{"name":"Unscopable handled correctly for initEvent(DOMString, boolean, boolean) on Event","status":"PASS"},{"name":"Event must be primary interface of document.createEvent(\"Event\")","status":"PASS"},{"name":"Stringification of document.createEvent(\"Event\")","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"type\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"target\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"srcElement\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"currentTarget\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"composedPath()\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"NONE\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"CAPTURING_PHASE\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"AT_TARGET\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"BUBBLING_PHASE\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"eventPhase\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"stopPropagation()\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"stopImmediatePropagation()\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"bubbles\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"cancelable\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"returnValue\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"preventDefault()\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"defaultPrevented\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"composed\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must have own property \"isTrusted\"","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"timeStamp\" with the proper type","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"initEvent(DOMString, boolean, boolean)\" with the proper type","status":"PASS"},{"name":"Event interface: calling initEvent(DOMString, boolean, boolean) on document.createEvent(\"Event\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Event must be primary interface of new Event(\"foo\")","status":"PASS"},{"name":"Stringification of new Event(\"foo\")","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"type\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"target\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"srcElement\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"currentTarget\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"composedPath()\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"NONE\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"CAPTURING_PHASE\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"AT_TARGET\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"BUBBLING_PHASE\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"eventPhase\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"stopPropagation()\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"stopImmediatePropagation()\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"bubbles\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"cancelable\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"returnValue\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"preventDefault()\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"defaultPrevented\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"composed\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must have own property \"isTrusted\"","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"timeStamp\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"initEvent(DOMString, boolean, boolean)\" with the proper type","status":"PASS"},{"name":"Event interface: calling initEvent(DOMString, boolean, boolean) on new Event(\"foo\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CustomEvent interface: existence and properties of interface object","status":"PASS"},{"name":"CustomEvent interface object length","status":"PASS"},{"name":"CustomEvent interface object name","status":"PASS"},{"name":"CustomEvent interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CustomEvent interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"CustomEvent interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"CustomEvent interface: attribute detail","status":"PASS"},{"name":"Unscopable handled correctly for detail property on CustomEvent","status":"PASS"},{"name":"CustomEvent interface: operation initCustomEvent(DOMString, boolean, boolean, any)","status":"PASS"},{"name":"Unscopable handled correctly for initCustomEvent(DOMString, boolean, boolean, any) on CustomEvent","status":"PASS"},{"name":"CustomEvent must be primary interface of new CustomEvent(\"foo\")","status":"PASS"},{"name":"Stringification of new CustomEvent(\"foo\")","status":"PASS"},{"name":"CustomEvent interface: new CustomEvent(\"foo\") must inherit property \"detail\" with the proper type","status":"PASS"},{"name":"CustomEvent interface: new CustomEvent(\"foo\") must inherit property \"initCustomEvent(DOMString, boolean, boolean, any)\" with the proper type","status":"PASS"},{"name":"CustomEvent interface: calling initCustomEvent(DOMString, boolean, boolean, any) on new CustomEvent(\"foo\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"type\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"target\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"srcElement\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"currentTarget\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"composedPath()\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"NONE\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"CAPTURING_PHASE\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"AT_TARGET\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"BUBBLING_PHASE\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"eventPhase\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"stopPropagation()\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"stopImmediatePropagation()\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"bubbles\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"cancelable\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"returnValue\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"preventDefault()\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"defaultPrevented\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"composed\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must have own property \"isTrusted\"","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"timeStamp\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"initEvent(DOMString, boolean, boolean)\" with the proper type","status":"PASS"},{"name":"Event interface: calling initEvent(DOMString, boolean, boolean) on new CustomEvent(\"foo\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface object","status":"PASS"},{"name":"EventTarget interface object length","status":"PASS"},{"name":"EventTarget interface object name","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface prototype object","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"EventTarget interface: operation addEventListener(DOMString, EventListener, [object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for addEventListener(DOMString, EventListener, [object Object],[object Object]) on EventTarget","status":"PASS"},{"name":"EventTarget interface: operation removeEventListener(DOMString, EventListener, [object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for removeEventListener(DOMString, EventListener, [object Object],[object Object]) on EventTarget","status":"PASS"},{"name":"EventTarget interface: operation dispatchEvent(Event)","status":"PASS"},{"name":"Unscopable handled correctly for dispatchEvent(Event) on EventTarget","status":"PASS"},{"name":"EventTarget must be primary interface of new EventTarget()","status":"FAIL"},{"name":"Stringification of new EventTarget()","status":"FAIL"},{"name":"EventTarget interface: new EventTarget() must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"FAIL"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on new EventTarget() with too few arguments must throw TypeError","status":"FAIL"},{"name":"EventTarget interface: new EventTarget() must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"FAIL"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on new EventTarget() with too few arguments must throw TypeError","status":"FAIL"},{"name":"EventTarget interface: new EventTarget() must inherit property \"dispatchEvent(Event)\" with the proper type","status":"FAIL"},{"name":"EventTarget interface: calling dispatchEvent(Event) on new EventTarget() with too few arguments must throw TypeError","status":"FAIL"},{"name":"EventListener interface: existence and properties of interface object","status":"PASS"},{"name":"EventListener interface: existence and properties of interface prototype object","status":"PASS"},{"name":"EventListener interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"EventListener interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"EventListener interface: operation handleEvent(Event)","status":"PASS"},{"name":"Unscopable handled correctly for handleEvent(Event) on EventListener","status":"PASS"},{"name":"AbortController interface: existence and properties of interface object","status":"PASS"},{"name":"AbortController interface object length","status":"PASS"},{"name":"AbortController interface object name","status":"PASS"},{"name":"AbortController interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AbortController interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AbortController interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AbortController interface: attribute signal","status":"PASS"},{"name":"Unscopable handled correctly for signal property on AbortController","status":"PASS"},{"name":"AbortController interface: operation abort()","status":"PASS"},{"name":"Unscopable handled correctly for abort() on AbortController","status":"PASS"},{"name":"AbortController must be primary interface of new AbortController()","status":"PASS"},{"name":"Stringification of new AbortController()","status":"PASS"},{"name":"AbortController interface: new AbortController() must inherit property \"signal\" with the proper type","status":"PASS"},{"name":"AbortController interface: new AbortController() must inherit property \"abort()\" with the proper type","status":"PASS"},{"name":"AbortSignal interface: existence and properties of interface object","status":"PASS"},{"name":"AbortSignal interface object length","status":"PASS"},{"name":"AbortSignal interface object name","status":"PASS"},{"name":"AbortSignal interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AbortSignal interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AbortSignal interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AbortSignal interface: attribute aborted","status":"PASS"},{"name":"Unscopable handled correctly for aborted property on AbortSignal","status":"PASS"},{"name":"AbortSignal interface: attribute onabort","status":"PASS"},{"name":"Unscopable handled correctly for onabort property on AbortSignal","status":"PASS"},{"name":"AbortSignal must be primary interface of new AbortController().signal","status":"PASS"},{"name":"Stringification of new AbortController().signal","status":"PASS"},{"name":"AbortSignal interface: new AbortController().signal must inherit property \"aborted\" with the proper type","status":"PASS"},{"name":"AbortSignal interface: new AbortController().signal must inherit property \"onabort\" with the proper type","status":"PASS"},{"name":"EventTarget interface: new AbortController().signal must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on new AbortController().signal with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new AbortController().signal must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on new AbortController().signal with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new AbortController().signal must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on new AbortController().signal with too few arguments must throw TypeError","status":"PASS"},{"name":"NodeList interface: existence and properties of interface object","status":"PASS"},{"name":"NodeList interface object length","status":"PASS"},{"name":"NodeList interface object name","status":"PASS"},{"name":"NodeList interface: existence and properties of interface prototype object","status":"PASS"},{"name":"NodeList interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"NodeList interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"NodeList interface: operation item(unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for item(unsigned long) on NodeList","status":"PASS"},{"name":"NodeList interface: attribute length","status":"PASS"},{"name":"Unscopable handled correctly for length property on NodeList","status":"PASS"},{"name":"NodeList must be primary interface of document.querySelectorAll(\"script\")","status":"PASS"},{"name":"Stringification of document.querySelectorAll(\"script\")","status":"PASS"},{"name":"NodeList interface: document.querySelectorAll(\"script\") must inherit property \"item(unsigned long)\" with the proper type","status":"PASS"},{"name":"NodeList interface: calling item(unsigned long) on document.querySelectorAll(\"script\") with too few arguments must throw TypeError","status":"PASS"},{"name":"NodeList interface: document.querySelectorAll(\"script\") must inherit property \"length\" with the proper type","status":"PASS"},{"name":"HTMLCollection interface: existence and properties of interface object","status":"PASS"},{"name":"HTMLCollection interface object length","status":"PASS"},{"name":"HTMLCollection interface object name","status":"PASS"},{"name":"HTMLCollection interface: existence and properties of interface prototype object","status":"PASS"},{"name":"HTMLCollection interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"HTMLCollection interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"HTMLCollection interface: attribute length","status":"PASS"},{"name":"Unscopable handled correctly for length property on HTMLCollection","status":"PASS"},{"name":"HTMLCollection interface: operation item(unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for item(unsigned long) on HTMLCollection","status":"PASS"},{"name":"HTMLCollection interface: operation namedItem(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for namedItem(DOMString) on HTMLCollection","status":"PASS"},{"name":"HTMLCollection must be primary interface of document.body.children","status":"PASS"},{"name":"Stringification of document.body.children","status":"PASS"},{"name":"HTMLCollection interface: document.body.children must inherit property \"length\" with the proper type","status":"PASS"},{"name":"HTMLCollection interface: document.body.children must inherit property \"item(unsigned long)\" with the proper type","status":"PASS"},{"name":"HTMLCollection interface: calling item(unsigned long) on document.body.children with too few arguments must throw TypeError","status":"PASS"},{"name":"HTMLCollection interface: document.body.children must inherit property \"namedItem(DOMString)\" with the proper type","status":"PASS"},{"name":"HTMLCollection interface: calling namedItem(DOMString) on document.body.children with too few arguments must throw TypeError","status":"PASS"},{"name":"MutationObserver interface: existence and properties of interface object","status":"PASS"},{"name":"MutationObserver interface object length","status":"PASS"},{"name":"MutationObserver interface object name","status":"PASS"},{"name":"MutationObserver interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MutationObserver interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MutationObserver interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"MutationObserver interface: operation observe(Node, MutationObserverInit)","status":"PASS"},{"name":"Unscopable handled correctly for observe(Node, MutationObserverInit) on MutationObserver","status":"PASS"},{"name":"MutationObserver interface: operation disconnect()","status":"PASS"},{"name":"Unscopable handled correctly for disconnect() on MutationObserver","status":"PASS"},{"name":"MutationObserver interface: operation takeRecords()","status":"PASS"},{"name":"Unscopable handled correctly for takeRecords() on MutationObserver","status":"PASS"},{"name":"MutationRecord interface: existence and properties of interface object","status":"PASS"},{"name":"MutationRecord interface object length","status":"PASS"},{"name":"MutationRecord interface object name","status":"PASS"},{"name":"MutationRecord interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MutationRecord interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MutationRecord interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"MutationRecord interface: attribute type","status":"PASS"},{"name":"Unscopable handled correctly for type property on MutationRecord","status":"PASS"},{"name":"MutationRecord interface: attribute target","status":"PASS"},{"name":"Unscopable handled correctly for target property on MutationRecord","status":"PASS"},{"name":"MutationRecord interface: attribute addedNodes","status":"PASS"},{"name":"Unscopable handled correctly for addedNodes property on MutationRecord","status":"PASS"},{"name":"MutationRecord interface: attribute removedNodes","status":"PASS"},{"name":"Unscopable handled correctly for removedNodes property on MutationRecord","status":"PASS"},{"name":"MutationRecord interface: attribute previousSibling","status":"PASS"},{"name":"Unscopable handled correctly for previousSibling property on MutationRecord","status":"PASS"},{"name":"MutationRecord interface: attribute nextSibling","status":"PASS"},{"name":"Unscopable handled correctly for nextSibling property on MutationRecord","status":"PASS"},{"name":"MutationRecord interface: attribute attributeName","status":"PASS"},{"name":"Unscopable handled correctly for attributeName property on MutationRecord","status":"PASS"},{"name":"MutationRecord interface: attribute attributeNamespace","status":"PASS"},{"name":"Unscopable handled correctly for attributeNamespace property on MutationRecord","status":"PASS"},{"name":"MutationRecord interface: attribute oldValue","status":"PASS"},{"name":"Unscopable handled correctly for oldValue property on MutationRecord","status":"PASS"},{"name":"Node interface: existence and properties of interface object","status":"PASS"},{"name":"Node interface object length","status":"PASS"},{"name":"Node interface object name","status":"PASS"},{"name":"Node interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Node interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Node interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Node interface: constant ELEMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ELEMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant ATTRIBUTE_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ATTRIBUTE_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant TEXT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant TEXT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant CDATA_SECTION_NODE on interface object","status":"PASS"},{"name":"Node interface: constant CDATA_SECTION_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant ENTITY_REFERENCE_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ENTITY_REFERENCE_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant ENTITY_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ENTITY_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant PROCESSING_INSTRUCTION_NODE on interface object","status":"PASS"},{"name":"Node interface: constant PROCESSING_INSTRUCTION_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant COMMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant COMMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_TYPE_NODE on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_TYPE_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_FRAGMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_FRAGMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant NOTATION_NODE on interface object","status":"PASS"},{"name":"Node interface: constant NOTATION_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: attribute nodeType","status":"PASS"},{"name":"Unscopable handled correctly for nodeType property on Node","status":"PASS"},{"name":"Node interface: attribute nodeName","status":"PASS"},{"name":"Unscopable handled correctly for nodeName property on Node","status":"PASS"},{"name":"Node interface: attribute baseURI","status":"PASS"},{"name":"Unscopable handled correctly for baseURI property on Node","status":"PASS"},{"name":"Node interface: attribute isConnected","status":"PASS"},{"name":"Unscopable handled correctly for isConnected property on Node","status":"PASS"},{"name":"Node interface: attribute ownerDocument","status":"PASS"},{"name":"Unscopable handled correctly for ownerDocument property on Node","status":"PASS"},{"name":"Node interface: operation getRootNode(GetRootNodeOptions)","status":"PASS"},{"name":"Unscopable handled correctly for getRootNode(GetRootNodeOptions) on Node","status":"PASS"},{"name":"Node interface: attribute parentNode","status":"PASS"},{"name":"Unscopable handled correctly for parentNode property on Node","status":"PASS"},{"name":"Node interface: attribute parentElement","status":"PASS"},{"name":"Unscopable handled correctly for parentElement property on Node","status":"PASS"},{"name":"Node interface: operation hasChildNodes()","status":"PASS"},{"name":"Unscopable handled correctly for hasChildNodes() on Node","status":"PASS"},{"name":"Node interface: attribute childNodes","status":"PASS"},{"name":"Unscopable handled correctly for childNodes property on Node","status":"PASS"},{"name":"Node interface: attribute firstChild","status":"PASS"},{"name":"Unscopable handled correctly for firstChild property on Node","status":"PASS"},{"name":"Node interface: attribute lastChild","status":"PASS"},{"name":"Unscopable handled correctly for lastChild property on Node","status":"PASS"},{"name":"Node interface: attribute previousSibling","status":"PASS"},{"name":"Unscopable handled correctly for previousSibling property on Node","status":"PASS"},{"name":"Node interface: attribute nextSibling","status":"PASS"},{"name":"Unscopable handled correctly for nextSibling property on Node","status":"PASS"},{"name":"Node interface: attribute nodeValue","status":"PASS"},{"name":"Unscopable handled correctly for nodeValue property on Node","status":"PASS"},{"name":"Node interface: attribute textContent","status":"PASS"},{"name":"Unscopable handled correctly for textContent property on Node","status":"PASS"},{"name":"Node interface: operation normalize()","status":"PASS"},{"name":"Unscopable handled correctly for normalize() on Node","status":"PASS"},{"name":"Node interface: operation cloneNode(boolean)","status":"PASS"},{"name":"Unscopable handled correctly for cloneNode(boolean) on Node","status":"PASS"},{"name":"Node interface: operation isEqualNode(Node)","status":"PASS"},{"name":"Unscopable handled correctly for isEqualNode(Node) on Node","status":"PASS"},{"name":"Node interface: operation isSameNode(Node)","status":"PASS"},{"name":"Unscopable handled correctly for isSameNode(Node) on Node","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_DISCONNECTED on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_DISCONNECTED on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_PRECEDING on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_PRECEDING on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_FOLLOWING on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_FOLLOWING on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINS on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINS on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINED_BY on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINED_BY on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC on interface prototype object","status":"PASS"},{"name":"Node interface: operation compareDocumentPosition(Node)","status":"PASS"},{"name":"Unscopable handled correctly for compareDocumentPosition(Node) on Node","status":"PASS"},{"name":"Node interface: operation contains(Node)","status":"PASS"},{"name":"Unscopable handled correctly for contains(Node) on Node","status":"PASS"},{"name":"Node interface: operation lookupPrefix(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for lookupPrefix(DOMString) on Node","status":"PASS"},{"name":"Node interface: operation lookupNamespaceURI(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for lookupNamespaceURI(DOMString) on Node","status":"PASS"},{"name":"Node interface: operation isDefaultNamespace(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for isDefaultNamespace(DOMString) on Node","status":"PASS"},{"name":"Node interface: operation insertBefore(Node, Node)","status":"PASS"},{"name":"Unscopable handled correctly for insertBefore(Node, Node) on Node","status":"PASS"},{"name":"Node interface: operation appendChild(Node)","status":"PASS"},{"name":"Unscopable handled correctly for appendChild(Node) on Node","status":"PASS"},{"name":"Node interface: operation replaceChild(Node, Node)","status":"PASS"},{"name":"Unscopable handled correctly for replaceChild(Node, Node) on Node","status":"PASS"},{"name":"Node interface: operation removeChild(Node)","status":"PASS"},{"name":"Unscopable handled correctly for removeChild(Node) on Node","status":"PASS"},{"name":"Document interface: existence and properties of interface object","status":"PASS"},{"name":"Document interface object length","status":"PASS"},{"name":"Document interface object name","status":"PASS"},{"name":"Document interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Document interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Document interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Document interface: attribute implementation","status":"PASS"},{"name":"Unscopable handled correctly for implementation property on Document","status":"PASS"},{"name":"Document interface: attribute URL","status":"PASS"},{"name":"Unscopable handled correctly for URL property on Document","status":"PASS"},{"name":"Document interface: attribute documentURI","status":"PASS"},{"name":"Unscopable handled correctly for documentURI property on Document","status":"PASS"},{"name":"Document interface: attribute origin","status":"PASS"},{"name":"Unscopable handled correctly for origin property on Document","status":"PASS"},{"name":"Document interface: attribute compatMode","status":"PASS"},{"name":"Unscopable handled correctly for compatMode property on Document","status":"PASS"},{"name":"Document interface: attribute characterSet","status":"PASS"},{"name":"Unscopable handled correctly for characterSet property on Document","status":"PASS"},{"name":"Document interface: attribute charset","status":"PASS"},{"name":"Unscopable handled correctly for charset property on Document","status":"PASS"},{"name":"Document interface: attribute inputEncoding","status":"PASS"},{"name":"Unscopable handled correctly for inputEncoding property on Document","status":"PASS"},{"name":"Document interface: attribute contentType","status":"PASS"},{"name":"Unscopable handled correctly for contentType property on Document","status":"PASS"},{"name":"Document interface: attribute doctype","status":"PASS"},{"name":"Unscopable handled correctly for doctype property on Document","status":"PASS"},{"name":"Document interface: attribute documentElement","status":"PASS"},{"name":"Unscopable handled correctly for documentElement property on Document","status":"PASS"},{"name":"Document interface: operation getElementsByTagName(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getElementsByTagName(DOMString) on Document","status":"PASS"},{"name":"Document interface: operation getElementsByTagNameNS(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getElementsByTagNameNS(DOMString, DOMString) on Document","status":"PASS"},{"name":"Document interface: operation getElementsByClassName(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getElementsByClassName(DOMString) on Document","status":"PASS"},{"name":"Document interface: operation createElement(DOMString, [object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for createElement(DOMString, [object Object],[object Object]) on Document","status":"PASS"},{"name":"Document interface: operation createElementNS(DOMString, DOMString, [object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for createElementNS(DOMString, DOMString, [object Object],[object Object]) on Document","status":"PASS"},{"name":"Document interface: operation createDocumentFragment()","status":"PASS"},{"name":"Unscopable handled correctly for createDocumentFragment() on Document","status":"PASS"},{"name":"Document interface: operation createTextNode(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for createTextNode(DOMString) on Document","status":"PASS"},{"name":"Document interface: operation createCDATASection(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for createCDATASection(DOMString) on Document","status":"PASS"},{"name":"Document interface: operation createComment(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for createComment(DOMString) on Document","status":"PASS"},{"name":"Document interface: operation createProcessingInstruction(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for createProcessingInstruction(DOMString, DOMString) on Document","status":"PASS"},{"name":"Document interface: operation importNode(Node, boolean)","status":"PASS"},{"name":"Unscopable handled correctly for importNode(Node, boolean) on Document","status":"PASS"},{"name":"Document interface: operation adoptNode(Node)","status":"PASS"},{"name":"Unscopable handled correctly for adoptNode(Node) on Document","status":"PASS"},{"name":"Document interface: operation createAttribute(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for createAttribute(DOMString) on Document","status":"PASS"},{"name":"Document interface: operation createAttributeNS(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for createAttributeNS(DOMString, DOMString) on Document","status":"PASS"},{"name":"Document interface: operation createEvent(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for createEvent(DOMString) on Document","status":"PASS"},{"name":"Document interface: operation createRange()","status":"PASS"},{"name":"Unscopable handled correctly for createRange() on Document","status":"PASS"},{"name":"Document interface: operation createNodeIterator(Node, unsigned long, NodeFilter)","status":"PASS"},{"name":"Unscopable handled correctly for createNodeIterator(Node, unsigned long, NodeFilter) on Document","status":"PASS"},{"name":"Document interface: operation createTreeWalker(Node, unsigned long, NodeFilter)","status":"PASS"},{"name":"Unscopable handled correctly for createTreeWalker(Node, unsigned long, NodeFilter) on Document","status":"PASS"},{"name":"Document interface: operation getElementById(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getElementById(DOMString) on Document","status":"PASS"},{"name":"Document interface: attribute children","status":"PASS"},{"name":"Unscopable handled correctly for children property on Document","status":"PASS"},{"name":"Document interface: attribute firstElementChild","status":"PASS"},{"name":"Unscopable handled correctly for firstElementChild property on Document","status":"PASS"},{"name":"Document interface: attribute lastElementChild","status":"PASS"},{"name":"Unscopable handled correctly for lastElementChild property on Document","status":"PASS"},{"name":"Document interface: attribute childElementCount","status":"PASS"},{"name":"Unscopable handled correctly for childElementCount property on Document","status":"PASS"},{"name":"Document interface: operation prepend([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for prepend([object Object],[object Object]) on Document","status":"PASS"},{"name":"Document interface: operation append([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for append([object Object],[object Object]) on Document","status":"PASS"},{"name":"Document interface: operation querySelector(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for querySelector(DOMString) on Document","status":"PASS"},{"name":"Document interface: operation querySelectorAll(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for querySelectorAll(DOMString) on Document","status":"PASS"},{"name":"Document must be primary interface of new Document()","status":"PASS"},{"name":"Stringification of new Document()","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"implementation\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"URL\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"documentURI\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"origin\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"compatMode\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"characterSet\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"charset\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"inputEncoding\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"contentType\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"doctype\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"documentElement\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"getElementsByTagName(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling getElementsByTagName(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"getElementsByTagNameNS(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling getElementsByTagNameNS(DOMString, DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"getElementsByClassName(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling getElementsByClassName(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createElement(DOMString, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Document interface: calling createElement(DOMString, [object Object],[object Object]) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createElementNS(DOMString, DOMString, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Document interface: calling createElementNS(DOMString, DOMString, [object Object],[object Object]) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createDocumentFragment()\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createTextNode(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createTextNode(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createCDATASection(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createCDATASection(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createComment(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createComment(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createProcessingInstruction(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createProcessingInstruction(DOMString, DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"importNode(Node, boolean)\" with the proper type","status":"PASS"},{"name":"Document interface: calling importNode(Node, boolean) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"adoptNode(Node)\" with the proper type","status":"PASS"},{"name":"Document interface: calling adoptNode(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createAttribute(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createAttribute(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createAttributeNS(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createAttributeNS(DOMString, DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createEvent(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createEvent(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createRange()\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createNodeIterator(Node, unsigned long, NodeFilter)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createNodeIterator(Node, unsigned long, NodeFilter) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createTreeWalker(Node, unsigned long, NodeFilter)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createTreeWalker(Node, unsigned long, NodeFilter) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"getElementById(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling getElementById(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"children\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"firstElementChild\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"lastElementChild\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"childElementCount\" with the proper type","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"prepend([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Document interface: calling prepend([object Object],[object Object]) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"append([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Document interface: calling append([object Object],[object Object]) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"querySelector(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling querySelector(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"querySelectorAll(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling querySelectorAll(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"ELEMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"ATTRIBUTE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"TEXT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"CDATA_SECTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"ENTITY_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"COMMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"NOTATION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"nodeType\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"nodeName\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"baseURI\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"isConnected\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"ownerDocument\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"getRootNode(GetRootNodeOptions)\" with the proper type","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"parentNode\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"parentElement\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"hasChildNodes()\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"childNodes\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"firstChild\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"lastChild\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"previousSibling\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"nextSibling\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"nodeValue\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"textContent\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"normalize()\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"cloneNode(boolean)\" with the proper type","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"isEqualNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"isSameNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"compareDocumentPosition(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"contains(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling contains(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"lookupPrefix(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"lookupNamespaceURI(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"isDefaultNamespace(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"insertBefore(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling insertBefore(Node, Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"appendChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"replaceChild(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling replaceChild(Node, Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"removeChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new Document() must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new Document() must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new Document() must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"XMLDocument interface: existence and properties of interface object","status":"PASS"},{"name":"XMLDocument interface object length","status":"PASS"},{"name":"XMLDocument interface object name","status":"PASS"},{"name":"XMLDocument interface: existence and properties of interface prototype object","status":"PASS"},{"name":"XMLDocument interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"XMLDocument interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"XMLDocument must be primary interface of xmlDoc","status":"PASS"},{"name":"Stringification of xmlDoc","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"implementation\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"URL\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"documentURI\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"origin\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"compatMode\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"characterSet\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"charset\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"inputEncoding\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"contentType\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"doctype\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"documentElement\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"getElementsByTagName(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling getElementsByTagName(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"getElementsByTagNameNS(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling getElementsByTagNameNS(DOMString, DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"getElementsByClassName(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling getElementsByClassName(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createElement(DOMString, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Document interface: calling createElement(DOMString, [object Object],[object Object]) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createElementNS(DOMString, DOMString, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Document interface: calling createElementNS(DOMString, DOMString, [object Object],[object Object]) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createDocumentFragment()\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createTextNode(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createTextNode(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createCDATASection(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createCDATASection(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createComment(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createComment(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createProcessingInstruction(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createProcessingInstruction(DOMString, DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"importNode(Node, boolean)\" with the proper type","status":"PASS"},{"name":"Document interface: calling importNode(Node, boolean) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"adoptNode(Node)\" with the proper type","status":"PASS"},{"name":"Document interface: calling adoptNode(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createAttribute(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createAttribute(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createAttributeNS(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createAttributeNS(DOMString, DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createEvent(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createEvent(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createRange()\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createNodeIterator(Node, unsigned long, NodeFilter)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createNodeIterator(Node, unsigned long, NodeFilter) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createTreeWalker(Node, unsigned long, NodeFilter)\" with the proper type","status":"PASS"},{"name":"Document interface: calling createTreeWalker(Node, unsigned long, NodeFilter) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"getElementById(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling getElementById(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"children\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"firstElementChild\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"lastElementChild\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"childElementCount\" with the proper type","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"prepend([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Document interface: calling prepend([object Object],[object Object]) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"append([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Document interface: calling append([object Object],[object Object]) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"querySelector(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling querySelector(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"querySelectorAll(DOMString)\" with the proper type","status":"PASS"},{"name":"Document interface: calling querySelectorAll(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"ELEMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"ATTRIBUTE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"TEXT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"CDATA_SECTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"ENTITY_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"COMMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"NOTATION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"nodeType\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"nodeName\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"baseURI\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"isConnected\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"ownerDocument\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"getRootNode(GetRootNodeOptions)\" with the proper type","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"parentNode\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"parentElement\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"hasChildNodes()\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"childNodes\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"firstChild\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"lastChild\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"previousSibling\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"nextSibling\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"nodeValue\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"textContent\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"normalize()\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"cloneNode(boolean)\" with the proper type","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"isEqualNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"isSameNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"compareDocumentPosition(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"contains(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling contains(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"lookupPrefix(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"lookupNamespaceURI(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"isDefaultNamespace(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"insertBefore(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling insertBefore(Node, Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"appendChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"replaceChild(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling replaceChild(Node, Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"removeChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMImplementation interface: existence and properties of interface object","status":"PASS"},{"name":"DOMImplementation interface object length","status":"PASS"},{"name":"DOMImplementation interface object name","status":"PASS"},{"name":"DOMImplementation interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DOMImplementation interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DOMImplementation interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"DOMImplementation interface: operation createDocumentType(DOMString, DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for createDocumentType(DOMString, DOMString, DOMString) on DOMImplementation","status":"PASS"},{"name":"DOMImplementation interface: operation createDocument(DOMString, DOMString, DocumentType)","status":"PASS"},{"name":"Unscopable handled correctly for createDocument(DOMString, DOMString, DocumentType) on DOMImplementation","status":"PASS"},{"name":"DOMImplementation interface: operation createHTMLDocument(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for createHTMLDocument(DOMString) on DOMImplementation","status":"PASS"},{"name":"DOMImplementation interface: operation hasFeature()","status":"PASS"},{"name":"Unscopable handled correctly for hasFeature() on DOMImplementation","status":"PASS"},{"name":"DOMImplementation must be primary interface of document.implementation","status":"PASS"},{"name":"Stringification of document.implementation","status":"PASS"},{"name":"DOMImplementation interface: document.implementation must inherit property \"createDocumentType(DOMString, DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"DOMImplementation interface: calling createDocumentType(DOMString, DOMString, DOMString) on document.implementation with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMImplementation interface: document.implementation must inherit property \"createDocument(DOMString, DOMString, DocumentType)\" with the proper type","status":"PASS"},{"name":"DOMImplementation interface: calling createDocument(DOMString, DOMString, DocumentType) on document.implementation with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMImplementation interface: document.implementation must inherit property \"createHTMLDocument(DOMString)\" with the proper type","status":"PASS"},{"name":"DOMImplementation interface: calling createHTMLDocument(DOMString) on document.implementation with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMImplementation interface: document.implementation must inherit property \"hasFeature()\" with the proper type","status":"PASS"},{"name":"DocumentType interface: existence and properties of interface object","status":"PASS"},{"name":"DocumentType interface object length","status":"PASS"},{"name":"DocumentType interface object name","status":"PASS"},{"name":"DocumentType interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DocumentType interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DocumentType interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"DocumentType interface: attribute name","status":"PASS"},{"name":"Unscopable handled correctly for name property on DocumentType","status":"PASS"},{"name":"DocumentType interface: attribute publicId","status":"PASS"},{"name":"Unscopable handled correctly for publicId property on DocumentType","status":"PASS"},{"name":"DocumentType interface: attribute systemId","status":"PASS"},{"name":"Unscopable handled correctly for systemId property on DocumentType","status":"PASS"},{"name":"DocumentType interface: operation before([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for before([object Object],[object Object]) on DocumentType","status":"PASS"},{"name":"DocumentType interface: operation after([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for after([object Object],[object Object]) on DocumentType","status":"PASS"},{"name":"DocumentType interface: operation replaceWith([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for replaceWith([object Object],[object Object]) on DocumentType","status":"PASS"},{"name":"DocumentType interface: operation remove()","status":"PASS"},{"name":"Unscopable handled correctly for remove() on DocumentType","status":"PASS"},{"name":"DocumentType must be primary interface of document.doctype","status":"PASS"},{"name":"Stringification of document.doctype","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"name\" with the proper type","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"publicId\" with the proper type","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"systemId\" with the proper type","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"before([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"DocumentType interface: calling before([object Object],[object Object]) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"after([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"DocumentType interface: calling after([object Object],[object Object]) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"replaceWith([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"DocumentType interface: calling replaceWith([object Object],[object Object]) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"remove()\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"ELEMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"ATTRIBUTE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"TEXT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"CDATA_SECTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"ENTITY_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"COMMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"NOTATION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"nodeType\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"nodeName\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"baseURI\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"isConnected\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"ownerDocument\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"getRootNode(GetRootNodeOptions)\" with the proper type","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"parentNode\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"parentElement\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"hasChildNodes()\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"childNodes\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"firstChild\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"lastChild\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"previousSibling\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"nextSibling\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"nodeValue\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"textContent\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"normalize()\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"cloneNode(boolean)\" with the proper type","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"isEqualNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"isSameNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"compareDocumentPosition(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"contains(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling contains(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"lookupPrefix(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"lookupNamespaceURI(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"isDefaultNamespace(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"insertBefore(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling insertBefore(Node, Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"appendChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"replaceChild(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling replaceChild(Node, Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"removeChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.doctype must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.doctype must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.doctype must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentFragment interface: existence and properties of interface object","status":"PASS"},{"name":"DocumentFragment interface object length","status":"PASS"},{"name":"DocumentFragment interface object name","status":"PASS"},{"name":"DocumentFragment interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DocumentFragment interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DocumentFragment interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"DocumentFragment interface: operation getElementById(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getElementById(DOMString) on DocumentFragment","status":"PASS"},{"name":"DocumentFragment interface: attribute children","status":"PASS"},{"name":"Unscopable handled correctly for children property on DocumentFragment","status":"PASS"},{"name":"DocumentFragment interface: attribute firstElementChild","status":"PASS"},{"name":"Unscopable handled correctly for firstElementChild property on DocumentFragment","status":"PASS"},{"name":"DocumentFragment interface: attribute lastElementChild","status":"PASS"},{"name":"Unscopable handled correctly for lastElementChild property on DocumentFragment","status":"PASS"},{"name":"DocumentFragment interface: attribute childElementCount","status":"PASS"},{"name":"Unscopable handled correctly for childElementCount property on DocumentFragment","status":"PASS"},{"name":"DocumentFragment interface: operation prepend([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for prepend([object Object],[object Object]) on DocumentFragment","status":"PASS"},{"name":"DocumentFragment interface: operation append([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for append([object Object],[object Object]) on DocumentFragment","status":"PASS"},{"name":"DocumentFragment interface: operation querySelector(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for querySelector(DOMString) on DocumentFragment","status":"PASS"},{"name":"DocumentFragment interface: operation querySelectorAll(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for querySelectorAll(DOMString) on DocumentFragment","status":"PASS"},{"name":"DocumentFragment must be primary interface of document.createDocumentFragment()","status":"PASS"},{"name":"Stringification of document.createDocumentFragment()","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"getElementById(DOMString)\" with the proper type","status":"PASS"},{"name":"DocumentFragment interface: calling getElementById(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"children\" with the proper type","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"firstElementChild\" with the proper type","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"lastElementChild\" with the proper type","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"childElementCount\" with the proper type","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"prepend([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"DocumentFragment interface: calling prepend([object Object],[object Object]) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"append([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"DocumentFragment interface: calling append([object Object],[object Object]) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"querySelector(DOMString)\" with the proper type","status":"PASS"},{"name":"DocumentFragment interface: calling querySelector(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"querySelectorAll(DOMString)\" with the proper type","status":"PASS"},{"name":"DocumentFragment interface: calling querySelectorAll(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"ELEMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"ATTRIBUTE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"TEXT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"CDATA_SECTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"ENTITY_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"COMMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"NOTATION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"nodeType\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"nodeName\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"baseURI\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"isConnected\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"ownerDocument\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"getRootNode(GetRootNodeOptions)\" with the proper type","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"parentNode\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"parentElement\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"hasChildNodes()\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"childNodes\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"firstChild\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"lastChild\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"previousSibling\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"nextSibling\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"nodeValue\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"textContent\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"normalize()\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"cloneNode(boolean)\" with the proper type","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"isEqualNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"isSameNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"compareDocumentPosition(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"contains(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling contains(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"lookupPrefix(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"lookupNamespaceURI(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"isDefaultNamespace(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"insertBefore(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling insertBefore(Node, Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"appendChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"replaceChild(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling replaceChild(Node, Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"removeChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createDocumentFragment() must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createDocumentFragment() must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createDocumentFragment() must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"ShadowRoot interface: existence and properties of interface object","status":"PASS"},{"name":"ShadowRoot interface object length","status":"PASS"},{"name":"ShadowRoot interface object name","status":"PASS"},{"name":"ShadowRoot interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ShadowRoot interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ShadowRoot interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ShadowRoot interface: attribute mode","status":"PASS"},{"name":"Unscopable handled correctly for mode property on ShadowRoot","status":"PASS"},{"name":"ShadowRoot interface: attribute host","status":"PASS"},{"name":"Unscopable handled correctly for host property on ShadowRoot","status":"PASS"},{"name":"Element interface: existence and properties of interface object","status":"PASS"},{"name":"Element interface object length","status":"PASS"},{"name":"Element interface object name","status":"PASS"},{"name":"Element interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Element interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Element interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Element interface: attribute namespaceURI","status":"PASS"},{"name":"Unscopable handled correctly for namespaceURI property on Element","status":"PASS"},{"name":"Element interface: attribute prefix","status":"PASS"},{"name":"Unscopable handled correctly for prefix property on Element","status":"PASS"},{"name":"Element interface: attribute localName","status":"PASS"},{"name":"Unscopable handled correctly for localName property on Element","status":"PASS"},{"name":"Element interface: attribute tagName","status":"PASS"},{"name":"Unscopable handled correctly for tagName property on Element","status":"PASS"},{"name":"Element interface: attribute id","status":"PASS"},{"name":"Unscopable handled correctly for id property on Element","status":"PASS"},{"name":"Element interface: attribute className","status":"PASS"},{"name":"Unscopable handled correctly for className property on Element","status":"PASS"},{"name":"Element interface: attribute classList","status":"PASS"},{"name":"Unscopable handled correctly for classList property on Element","status":"PASS"},{"name":"Element interface: attribute slot","status":"PASS"},{"name":"Unscopable handled correctly for slot property on Element","status":"PASS"},{"name":"Element interface: operation hasAttributes()","status":"PASS"},{"name":"Unscopable handled correctly for hasAttributes() on Element","status":"PASS"},{"name":"Element interface: attribute attributes","status":"PASS"},{"name":"Unscopable handled correctly for attributes property on Element","status":"PASS"},{"name":"Element interface: operation getAttributeNames()","status":"PASS"},{"name":"Unscopable handled correctly for getAttributeNames() on Element","status":"PASS"},{"name":"Element interface: operation getAttribute(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getAttribute(DOMString) on Element","status":"PASS"},{"name":"Element interface: operation getAttributeNS(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getAttributeNS(DOMString, DOMString) on Element","status":"PASS"},{"name":"Element interface: operation setAttribute(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for setAttribute(DOMString, DOMString) on Element","status":"PASS"},{"name":"Element interface: operation setAttributeNS(DOMString, DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for setAttributeNS(DOMString, DOMString, DOMString) on Element","status":"PASS"},{"name":"Element interface: operation removeAttribute(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for removeAttribute(DOMString) on Element","status":"PASS"},{"name":"Element interface: operation removeAttributeNS(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for removeAttributeNS(DOMString, DOMString) on Element","status":"PASS"},{"name":"Element interface: operation hasAttribute(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for hasAttribute(DOMString) on Element","status":"PASS"},{"name":"Element interface: operation hasAttributeNS(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for hasAttributeNS(DOMString, DOMString) on Element","status":"PASS"},{"name":"Element interface: operation getAttributeNode(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getAttributeNode(DOMString) on Element","status":"PASS"},{"name":"Element interface: operation getAttributeNodeNS(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getAttributeNodeNS(DOMString, DOMString) on Element","status":"PASS"},{"name":"Element interface: operation setAttributeNode(Attr)","status":"PASS"},{"name":"Unscopable handled correctly for setAttributeNode(Attr) on Element","status":"PASS"},{"name":"Element interface: operation setAttributeNodeNS(Attr)","status":"PASS"},{"name":"Unscopable handled correctly for setAttributeNodeNS(Attr) on Element","status":"PASS"},{"name":"Element interface: operation removeAttributeNode(Attr)","status":"PASS"},{"name":"Unscopable handled correctly for removeAttributeNode(Attr) on Element","status":"PASS"},{"name":"Element interface: operation attachShadow(ShadowRootInit)","status":"PASS"},{"name":"Unscopable handled correctly for attachShadow(ShadowRootInit) on Element","status":"PASS"},{"name":"Element interface: attribute shadowRoot","status":"PASS"},{"name":"Unscopable handled correctly for shadowRoot property on Element","status":"PASS"},{"name":"Element interface: operation closest(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for closest(DOMString) on Element","status":"PASS"},{"name":"Element interface: operation matches(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for matches(DOMString) on Element","status":"PASS"},{"name":"Element interface: operation webkitMatchesSelector(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for webkitMatchesSelector(DOMString) on Element","status":"PASS"},{"name":"Element interface: operation getElementsByTagName(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getElementsByTagName(DOMString) on Element","status":"PASS"},{"name":"Element interface: operation getElementsByTagNameNS(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getElementsByTagNameNS(DOMString, DOMString) on Element","status":"PASS"},{"name":"Element interface: operation getElementsByClassName(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getElementsByClassName(DOMString) on Element","status":"PASS"},{"name":"Element interface: operation insertAdjacentElement(DOMString, Element)","status":"PASS"},{"name":"Unscopable handled correctly for insertAdjacentElement(DOMString, Element) on Element","status":"PASS"},{"name":"Element interface: operation insertAdjacentText(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for insertAdjacentText(DOMString, DOMString) on Element","status":"PASS"},{"name":"Element interface: attribute children","status":"PASS"},{"name":"Unscopable handled correctly for children property on Element","status":"PASS"},{"name":"Element interface: attribute firstElementChild","status":"PASS"},{"name":"Unscopable handled correctly for firstElementChild property on Element","status":"PASS"},{"name":"Element interface: attribute lastElementChild","status":"PASS"},{"name":"Unscopable handled correctly for lastElementChild property on Element","status":"PASS"},{"name":"Element interface: attribute childElementCount","status":"PASS"},{"name":"Unscopable handled correctly for childElementCount property on Element","status":"PASS"},{"name":"Element interface: operation prepend([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for prepend([object Object],[object Object]) on Element","status":"PASS"},{"name":"Element interface: operation append([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for append([object Object],[object Object]) on Element","status":"PASS"},{"name":"Element interface: operation querySelector(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for querySelector(DOMString) on Element","status":"PASS"},{"name":"Element interface: operation querySelectorAll(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for querySelectorAll(DOMString) on Element","status":"PASS"},{"name":"Element interface: attribute previousElementSibling","status":"PASS"},{"name":"Unscopable handled correctly for previousElementSibling property on Element","status":"PASS"},{"name":"Element interface: attribute nextElementSibling","status":"PASS"},{"name":"Unscopable handled correctly for nextElementSibling property on Element","status":"PASS"},{"name":"Element interface: operation before([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for before([object Object],[object Object]) on Element","status":"PASS"},{"name":"Element interface: operation after([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for after([object Object],[object Object]) on Element","status":"PASS"},{"name":"Element interface: operation replaceWith([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for replaceWith([object Object],[object Object]) on Element","status":"PASS"},{"name":"Element interface: operation remove()","status":"PASS"},{"name":"Unscopable handled correctly for remove() on Element","status":"PASS"},{"name":"Element interface: attribute assignedSlot","status":"PASS"},{"name":"Unscopable handled correctly for assignedSlot property on Element","status":"PASS"},{"name":"Element must be primary interface of element","status":"PASS"},{"name":"Stringification of element","status":"PASS"},{"name":"Element interface: element must inherit property \"namespaceURI\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"prefix\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"localName\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"tagName\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"id\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"className\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"classList\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"slot\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"hasAttributes()\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"attributes\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"getAttributeNames()\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"getAttribute(DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling getAttribute(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getAttributeNS(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling getAttributeNS(DOMString, DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"setAttribute(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling setAttribute(DOMString, DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"setAttributeNS(DOMString, DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling setAttributeNS(DOMString, DOMString, DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"removeAttribute(DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling removeAttribute(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"removeAttributeNS(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling removeAttributeNS(DOMString, DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"hasAttribute(DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling hasAttribute(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"hasAttributeNS(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling hasAttributeNS(DOMString, DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getAttributeNode(DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling getAttributeNode(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getAttributeNodeNS(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling getAttributeNodeNS(DOMString, DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"setAttributeNode(Attr)\" with the proper type","status":"PASS"},{"name":"Element interface: calling setAttributeNode(Attr) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"setAttributeNodeNS(Attr)\" with the proper type","status":"PASS"},{"name":"Element interface: calling setAttributeNodeNS(Attr) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"removeAttributeNode(Attr)\" with the proper type","status":"PASS"},{"name":"Element interface: calling removeAttributeNode(Attr) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"attachShadow(ShadowRootInit)\" with the proper type","status":"PASS"},{"name":"Element interface: calling attachShadow(ShadowRootInit) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"shadowRoot\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"closest(DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling closest(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"matches(DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling matches(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"webkitMatchesSelector(DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling webkitMatchesSelector(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getElementsByTagName(DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling getElementsByTagName(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getElementsByTagNameNS(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling getElementsByTagNameNS(DOMString, DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getElementsByClassName(DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling getElementsByClassName(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"insertAdjacentElement(DOMString, Element)\" with the proper type","status":"PASS"},{"name":"Element interface: calling insertAdjacentElement(DOMString, Element) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"insertAdjacentText(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling insertAdjacentText(DOMString, DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"children\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"firstElementChild\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"lastElementChild\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"childElementCount\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"prepend([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Element interface: calling prepend([object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"append([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Element interface: calling append([object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"querySelector(DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling querySelector(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"querySelectorAll(DOMString)\" with the proper type","status":"PASS"},{"name":"Element interface: calling querySelectorAll(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"previousElementSibling\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"nextElementSibling\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"before([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Element interface: calling before([object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"after([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Element interface: calling after([object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"replaceWith([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"Element interface: calling replaceWith([object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"remove()\" with the proper type","status":"PASS"},{"name":"Element interface: element must inherit property \"assignedSlot\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"ELEMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"ATTRIBUTE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"TEXT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"CDATA_SECTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"ENTITY_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"COMMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"NOTATION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"nodeType\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"nodeName\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"baseURI\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"isConnected\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"ownerDocument\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"getRootNode(GetRootNodeOptions)\" with the proper type","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"parentNode\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"parentElement\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"hasChildNodes()\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"childNodes\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"firstChild\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"lastChild\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"previousSibling\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"nextSibling\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"nodeValue\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"textContent\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"normalize()\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"cloneNode(boolean)\" with the proper type","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"isEqualNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"isSameNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type","status":"PASS"},{"name":"Node interface: element must inherit property \"compareDocumentPosition(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"contains(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling contains(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"lookupPrefix(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"lookupNamespaceURI(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"isDefaultNamespace(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"insertBefore(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling insertBefore(Node, Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"appendChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"replaceChild(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling replaceChild(Node, Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"removeChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: element must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: element must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: element must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"NamedNodeMap interface: existence and properties of interface object","status":"PASS"},{"name":"NamedNodeMap interface object length","status":"PASS"},{"name":"NamedNodeMap interface object name","status":"PASS"},{"name":"NamedNodeMap interface: existence and properties of interface prototype object","status":"PASS"},{"name":"NamedNodeMap interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"NamedNodeMap interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"NamedNodeMap interface: attribute length","status":"PASS"},{"name":"Unscopable handled correctly for length property on NamedNodeMap","status":"PASS"},{"name":"NamedNodeMap interface: operation item(unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for item(unsigned long) on NamedNodeMap","status":"PASS"},{"name":"NamedNodeMap interface: operation getNamedItem(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getNamedItem(DOMString) on NamedNodeMap","status":"PASS"},{"name":"NamedNodeMap interface: operation getNamedItemNS(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for getNamedItemNS(DOMString, DOMString) on NamedNodeMap","status":"PASS"},{"name":"NamedNodeMap interface: operation setNamedItem(Attr)","status":"PASS"},{"name":"Unscopable handled correctly for setNamedItem(Attr) on NamedNodeMap","status":"PASS"},{"name":"NamedNodeMap interface: operation setNamedItemNS(Attr)","status":"PASS"},{"name":"Unscopable handled correctly for setNamedItemNS(Attr) on NamedNodeMap","status":"PASS"},{"name":"NamedNodeMap interface: operation removeNamedItem(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for removeNamedItem(DOMString) on NamedNodeMap","status":"PASS"},{"name":"NamedNodeMap interface: operation removeNamedItemNS(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for removeNamedItemNS(DOMString, DOMString) on NamedNodeMap","status":"PASS"},{"name":"Attr interface: existence and properties of interface object","status":"PASS"},{"name":"Attr interface object length","status":"PASS"},{"name":"Attr interface object name","status":"PASS"},{"name":"Attr interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Attr interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Attr interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Attr interface: attribute namespaceURI","status":"PASS"},{"name":"Unscopable handled correctly for namespaceURI property on Attr","status":"PASS"},{"name":"Attr interface: attribute prefix","status":"PASS"},{"name":"Unscopable handled correctly for prefix property on Attr","status":"PASS"},{"name":"Attr interface: attribute localName","status":"PASS"},{"name":"Unscopable handled correctly for localName property on Attr","status":"PASS"},{"name":"Attr interface: attribute name","status":"PASS"},{"name":"Unscopable handled correctly for name property on Attr","status":"PASS"},{"name":"Attr interface: attribute value","status":"PASS"},{"name":"Unscopable handled correctly for value property on Attr","status":"PASS"},{"name":"Attr interface: attribute ownerElement","status":"PASS"},{"name":"Unscopable handled correctly for ownerElement property on Attr","status":"PASS"},{"name":"Attr interface: attribute specified","status":"PASS"},{"name":"Unscopable handled correctly for specified property on Attr","status":"PASS"},{"name":"Attr must be primary interface of document.querySelector(\"[id]\").attributes[0]","status":"PASS"},{"name":"Stringification of document.querySelector(\"[id]\").attributes[0]","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"namespaceURI\" with the proper type","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"prefix\" with the proper type","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"localName\" with the proper type","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"name\" with the proper type","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"value\" with the proper type","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ownerElement\" with the proper type","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"specified\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ELEMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ATTRIBUTE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"TEXT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"CDATA_SECTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ENTITY_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"COMMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"NOTATION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"nodeType\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"nodeName\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"baseURI\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"isConnected\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ownerDocument\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"getRootNode(GetRootNodeOptions)\" with the proper type","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"parentNode\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"parentElement\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"hasChildNodes()\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"childNodes\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"firstChild\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"lastChild\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"previousSibling\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"nextSibling\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"nodeValue\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"textContent\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"normalize()\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"cloneNode(boolean)\" with the proper type","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"isEqualNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"isSameNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"compareDocumentPosition(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"contains(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling contains(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"lookupPrefix(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"lookupNamespaceURI(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"isDefaultNamespace(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"insertBefore(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling insertBefore(Node, Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"appendChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"replaceChild(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling replaceChild(Node, Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"removeChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: existence and properties of interface object","status":"PASS"},{"name":"CharacterData interface object length","status":"PASS"},{"name":"CharacterData interface object name","status":"PASS"},{"name":"CharacterData interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CharacterData interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"CharacterData interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"CharacterData interface: attribute data","status":"PASS"},{"name":"Unscopable handled correctly for data property on CharacterData","status":"PASS"},{"name":"CharacterData interface: attribute length","status":"PASS"},{"name":"Unscopable handled correctly for length property on CharacterData","status":"PASS"},{"name":"CharacterData interface: operation substringData(unsigned long, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for substringData(unsigned long, unsigned long) on CharacterData","status":"PASS"},{"name":"CharacterData interface: operation appendData(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for appendData(DOMString) on CharacterData","status":"PASS"},{"name":"CharacterData interface: operation insertData(unsigned long, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for insertData(unsigned long, DOMString) on CharacterData","status":"PASS"},{"name":"CharacterData interface: operation deleteData(unsigned long, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for deleteData(unsigned long, unsigned long) on CharacterData","status":"PASS"},{"name":"CharacterData interface: operation replaceData(unsigned long, unsigned long, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for replaceData(unsigned long, unsigned long, DOMString) on CharacterData","status":"PASS"},{"name":"CharacterData interface: attribute previousElementSibling","status":"PASS"},{"name":"Unscopable handled correctly for previousElementSibling property on CharacterData","status":"PASS"},{"name":"CharacterData interface: attribute nextElementSibling","status":"PASS"},{"name":"Unscopable handled correctly for nextElementSibling property on CharacterData","status":"PASS"},{"name":"CharacterData interface: operation before([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for before([object Object],[object Object]) on CharacterData","status":"PASS"},{"name":"CharacterData interface: operation after([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for after([object Object],[object Object]) on CharacterData","status":"PASS"},{"name":"CharacterData interface: operation replaceWith([object Object],[object Object])","status":"PASS"},{"name":"Unscopable handled correctly for replaceWith([object Object],[object Object]) on CharacterData","status":"PASS"},{"name":"CharacterData interface: operation remove()","status":"PASS"},{"name":"Unscopable handled correctly for remove() on CharacterData","status":"PASS"},{"name":"Text interface: existence and properties of interface object","status":"PASS"},{"name":"Text interface object length","status":"PASS"},{"name":"Text interface object name","status":"PASS"},{"name":"Text interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Text interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Text interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Text interface: operation splitText(unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for splitText(unsigned long) on Text","status":"PASS"},{"name":"Text interface: attribute wholeText","status":"PASS"},{"name":"Unscopable handled correctly for wholeText property on Text","status":"PASS"},{"name":"Text interface: attribute assignedSlot","status":"PASS"},{"name":"Unscopable handled correctly for assignedSlot property on Text","status":"PASS"},{"name":"Text must be primary interface of document.createTextNode(\"abc\")","status":"PASS"},{"name":"Stringification of document.createTextNode(\"abc\")","status":"PASS"},{"name":"Text interface: document.createTextNode(\"abc\") must inherit property \"splitText(unsigned long)\" with the proper type","status":"PASS"},{"name":"Text interface: calling splitText(unsigned long) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Text interface: document.createTextNode(\"abc\") must inherit property \"wholeText\" with the proper type","status":"PASS"},{"name":"Text interface: document.createTextNode(\"abc\") must inherit property \"assignedSlot\" with the proper type","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"data\" with the proper type","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"length\" with the proper type","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"substringData(unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling substringData(unsigned long, unsigned long) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"appendData(DOMString)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling appendData(DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"insertData(unsigned long, DOMString)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling insertData(unsigned long, DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"deleteData(unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling deleteData(unsigned long, unsigned long) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"replaceData(unsigned long, unsigned long, DOMString)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling replaceData(unsigned long, unsigned long, DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"previousElementSibling\" with the proper type","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"nextElementSibling\" with the proper type","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"before([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling before([object Object],[object Object]) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"after([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling after([object Object],[object Object]) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"replaceWith([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling replaceWith([object Object],[object Object]) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"remove()\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"ELEMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"ATTRIBUTE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"TEXT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"CDATA_SECTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"ENTITY_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"COMMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"NOTATION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"nodeType\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"nodeName\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"baseURI\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"isConnected\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"ownerDocument\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"getRootNode(GetRootNodeOptions)\" with the proper type","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"parentNode\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"parentElement\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"hasChildNodes()\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"childNodes\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"firstChild\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"lastChild\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"previousSibling\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"nextSibling\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"nodeValue\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"textContent\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"normalize()\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"cloneNode(boolean)\" with the proper type","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"isEqualNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"isSameNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"compareDocumentPosition(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"contains(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling contains(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"lookupPrefix(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"lookupNamespaceURI(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"isDefaultNamespace(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"insertBefore(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling insertBefore(Node, Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"appendChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"replaceChild(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling replaceChild(Node, Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"removeChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createTextNode(\"abc\") must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createTextNode(\"abc\") must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createTextNode(\"abc\") must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CDATASection interface: existence and properties of interface object","status":"PASS"},{"name":"CDATASection interface object length","status":"PASS"},{"name":"CDATASection interface object name","status":"PASS"},{"name":"CDATASection interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CDATASection interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"CDATASection interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ProcessingInstruction interface: existence and properties of interface object","status":"PASS"},{"name":"ProcessingInstruction interface object length","status":"PASS"},{"name":"ProcessingInstruction interface object name","status":"PASS"},{"name":"ProcessingInstruction interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ProcessingInstruction interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ProcessingInstruction interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ProcessingInstruction interface: attribute target","status":"PASS"},{"name":"Unscopable handled correctly for target property on ProcessingInstruction","status":"PASS"},{"name":"ProcessingInstruction must be primary interface of xmlDoc.createProcessingInstruction(\"abc\", \"def\")","status":"PASS"},{"name":"Stringification of xmlDoc.createProcessingInstruction(\"abc\", \"def\")","status":"PASS"},{"name":"ProcessingInstruction interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"target\" with the proper type","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"data\" with the proper type","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"length\" with the proper type","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"substringData(unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling substringData(unsigned long, unsigned long) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"appendData(DOMString)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling appendData(DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"insertData(unsigned long, DOMString)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling insertData(unsigned long, DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"deleteData(unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling deleteData(unsigned long, unsigned long) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"replaceData(unsigned long, unsigned long, DOMString)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling replaceData(unsigned long, unsigned long, DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"previousElementSibling\" with the proper type","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"nextElementSibling\" with the proper type","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"before([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling before([object Object],[object Object]) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"after([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling after([object Object],[object Object]) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"replaceWith([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling replaceWith([object Object],[object Object]) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"remove()\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"ELEMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"ATTRIBUTE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"TEXT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"CDATA_SECTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"ENTITY_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"COMMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"NOTATION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"nodeType\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"nodeName\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"baseURI\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"isConnected\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"ownerDocument\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"getRootNode(GetRootNodeOptions)\" with the proper type","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"parentNode\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"parentElement\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"hasChildNodes()\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"childNodes\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"firstChild\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"lastChild\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"previousSibling\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"nextSibling\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"nodeValue\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"textContent\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"normalize()\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"cloneNode(boolean)\" with the proper type","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"isEqualNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"isSameNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"compareDocumentPosition(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"contains(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling contains(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"lookupPrefix(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"lookupNamespaceURI(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"isDefaultNamespace(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"insertBefore(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling insertBefore(Node, Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"appendChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"replaceChild(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling replaceChild(Node, Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"removeChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Comment interface: existence and properties of interface object","status":"PASS"},{"name":"Comment interface object length","status":"PASS"},{"name":"Comment interface object name","status":"PASS"},{"name":"Comment interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Comment interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Comment interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Comment must be primary interface of document.createComment(\"abc\")","status":"PASS"},{"name":"Stringification of document.createComment(\"abc\")","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"data\" with the proper type","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"length\" with the proper type","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"substringData(unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling substringData(unsigned long, unsigned long) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"appendData(DOMString)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling appendData(DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"insertData(unsigned long, DOMString)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling insertData(unsigned long, DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"deleteData(unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling deleteData(unsigned long, unsigned long) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"replaceData(unsigned long, unsigned long, DOMString)\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling replaceData(unsigned long, unsigned long, DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"previousElementSibling\" with the proper type","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"nextElementSibling\" with the proper type","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"before([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling before([object Object],[object Object]) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"after([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling after([object Object],[object Object]) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"replaceWith([object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"CharacterData interface: calling replaceWith([object Object],[object Object]) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"remove()\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"ELEMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"ATTRIBUTE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"TEXT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"CDATA_SECTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"ENTITY_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"COMMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"NOTATION_NODE\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"nodeType\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"nodeName\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"baseURI\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"isConnected\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"ownerDocument\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"getRootNode(GetRootNodeOptions)\" with the proper type","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"parentNode\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"parentElement\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"hasChildNodes()\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"childNodes\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"firstChild\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"lastChild\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"previousSibling\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"nextSibling\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"nodeValue\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"textContent\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"normalize()\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"cloneNode(boolean)\" with the proper type","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"isEqualNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"isSameNode(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"compareDocumentPosition(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"contains(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling contains(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"lookupPrefix(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"lookupNamespaceURI(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"isDefaultNamespace(DOMString)\" with the proper type","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"insertBefore(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling insertBefore(Node, Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"appendChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"replaceChild(Node, Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling replaceChild(Node, Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"removeChild(Node)\" with the proper type","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createComment(\"abc\") must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createComment(\"abc\") must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createComment(\"abc\") must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"AbstractRange interface: existence and properties of interface object","status":"FAIL"},{"name":"AbstractRange interface object length","status":"FAIL"},{"name":"AbstractRange interface object name","status":"FAIL"},{"name":"AbstractRange interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"AbstractRange interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"AbstractRange interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"AbstractRange interface: attribute startContainer","status":"FAIL"},{"name":"Unscopable handled correctly for startContainer property on AbstractRange","status":"PASS"},{"name":"AbstractRange interface: attribute startOffset","status":"FAIL"},{"name":"Unscopable handled correctly for startOffset property on AbstractRange","status":"PASS"},{"name":"AbstractRange interface: attribute endContainer","status":"FAIL"},{"name":"Unscopable handled correctly for endContainer property on AbstractRange","status":"PASS"},{"name":"AbstractRange interface: attribute endOffset","status":"FAIL"},{"name":"Unscopable handled correctly for endOffset property on AbstractRange","status":"PASS"},{"name":"AbstractRange interface: attribute collapsed","status":"FAIL"},{"name":"Unscopable handled correctly for collapsed property on AbstractRange","status":"PASS"},{"name":"StaticRange interface: existence and properties of interface object","status":"FAIL"},{"name":"StaticRange interface object length","status":"PASS"},{"name":"StaticRange interface object name","status":"PASS"},{"name":"StaticRange interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"StaticRange interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"StaticRange interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Range interface: existence and properties of interface object","status":"FAIL"},{"name":"Range interface object length","status":"PASS"},{"name":"Range interface object name","status":"PASS"},{"name":"Range interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"Range interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Range interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Range interface: attribute commonAncestorContainer","status":"PASS"},{"name":"Unscopable handled correctly for commonAncestorContainer property on Range","status":"PASS"},{"name":"Range interface: operation setStart(Node, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for setStart(Node, unsigned long) on Range","status":"PASS"},{"name":"Range interface: operation setEnd(Node, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for setEnd(Node, unsigned long) on Range","status":"PASS"},{"name":"Range interface: operation setStartBefore(Node)","status":"PASS"},{"name":"Unscopable handled correctly for setStartBefore(Node) on Range","status":"PASS"},{"name":"Range interface: operation setStartAfter(Node)","status":"PASS"},{"name":"Unscopable handled correctly for setStartAfter(Node) on Range","status":"PASS"},{"name":"Range interface: operation setEndBefore(Node)","status":"PASS"},{"name":"Unscopable handled correctly for setEndBefore(Node) on Range","status":"PASS"},{"name":"Range interface: operation setEndAfter(Node)","status":"PASS"},{"name":"Unscopable handled correctly for setEndAfter(Node) on Range","status":"PASS"},{"name":"Range interface: operation collapse(boolean)","status":"PASS"},{"name":"Unscopable handled correctly for collapse(boolean) on Range","status":"PASS"},{"name":"Range interface: operation selectNode(Node)","status":"PASS"},{"name":"Unscopable handled correctly for selectNode(Node) on Range","status":"PASS"},{"name":"Range interface: operation selectNodeContents(Node)","status":"PASS"},{"name":"Unscopable handled correctly for selectNodeContents(Node) on Range","status":"PASS"},{"name":"Range interface: constant START_TO_START on interface object","status":"PASS"},{"name":"Range interface: constant START_TO_START on interface prototype object","status":"PASS"},{"name":"Range interface: constant START_TO_END on interface object","status":"PASS"},{"name":"Range interface: constant START_TO_END on interface prototype object","status":"PASS"},{"name":"Range interface: constant END_TO_END on interface object","status":"PASS"},{"name":"Range interface: constant END_TO_END on interface prototype object","status":"PASS"},{"name":"Range interface: constant END_TO_START on interface object","status":"PASS"},{"name":"Range interface: constant END_TO_START on interface prototype object","status":"PASS"},{"name":"Range interface: operation compareBoundaryPoints(unsigned short, Range)","status":"PASS"},{"name":"Unscopable handled correctly for compareBoundaryPoints(unsigned short, Range) on Range","status":"PASS"},{"name":"Range interface: operation deleteContents()","status":"PASS"},{"name":"Unscopable handled correctly for deleteContents() on Range","status":"PASS"},{"name":"Range interface: operation extractContents()","status":"PASS"},{"name":"Unscopable handled correctly for extractContents() on Range","status":"PASS"},{"name":"Range interface: operation cloneContents()","status":"PASS"},{"name":"Unscopable handled correctly for cloneContents() on Range","status":"PASS"},{"name":"Range interface: operation insertNode(Node)","status":"PASS"},{"name":"Unscopable handled correctly for insertNode(Node) on Range","status":"PASS"},{"name":"Range interface: operation surroundContents(Node)","status":"PASS"},{"name":"Unscopable handled correctly for surroundContents(Node) on Range","status":"PASS"},{"name":"Range interface: operation cloneRange()","status":"PASS"},{"name":"Unscopable handled correctly for cloneRange() on Range","status":"PASS"},{"name":"Range interface: operation detach()","status":"PASS"},{"name":"Unscopable handled correctly for detach() on Range","status":"PASS"},{"name":"Range interface: operation isPointInRange(Node, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for isPointInRange(Node, unsigned long) on Range","status":"PASS"},{"name":"Range interface: operation comparePoint(Node, unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for comparePoint(Node, unsigned long) on Range","status":"PASS"},{"name":"Range interface: operation intersectsNode(Node)","status":"PASS"},{"name":"Unscopable handled correctly for intersectsNode(Node) on Range","status":"PASS"},{"name":"Range interface: stringifier","status":"PASS"},{"name":"Range must be primary interface of document.createRange()","status":"PASS"},{"name":"Stringification of document.createRange()","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"commonAncestorContainer\" with the proper type","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setStart(Node, unsigned long)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setStart(Node, unsigned long) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setEnd(Node, unsigned long)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setEnd(Node, unsigned long) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setStartBefore(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setStartBefore(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setStartAfter(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setStartAfter(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setEndBefore(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setEndBefore(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setEndAfter(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setEndAfter(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"collapse(boolean)\" with the proper type","status":"PASS"},{"name":"Range interface: calling collapse(boolean) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"selectNode(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling selectNode(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"selectNodeContents(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling selectNodeContents(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"START_TO_START\" with the proper type","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"START_TO_END\" with the proper type","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"END_TO_END\" with the proper type","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"END_TO_START\" with the proper type","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"compareBoundaryPoints(unsigned short, Range)\" with the proper type","status":"PASS"},{"name":"Range interface: calling compareBoundaryPoints(unsigned short, Range) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"deleteContents()\" with the proper type","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"extractContents()\" with the proper type","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"cloneContents()\" with the proper type","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"insertNode(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling insertNode(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"surroundContents(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling surroundContents(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"cloneRange()\" with the proper type","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"detach()\" with the proper type","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"isPointInRange(Node, unsigned long)\" with the proper type","status":"PASS"},{"name":"Range interface: calling isPointInRange(Node, unsigned long) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"comparePoint(Node, unsigned long)\" with the proper type","status":"PASS"},{"name":"Range interface: calling comparePoint(Node, unsigned long) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"intersectsNode(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling intersectsNode(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"AbstractRange interface: document.createRange() must inherit property \"startContainer\" with the proper type","status":"PASS"},{"name":"AbstractRange interface: document.createRange() must inherit property \"startOffset\" with the proper type","status":"PASS"},{"name":"AbstractRange interface: document.createRange() must inherit property \"endContainer\" with the proper type","status":"PASS"},{"name":"AbstractRange interface: document.createRange() must inherit property \"endOffset\" with the proper type","status":"PASS"},{"name":"AbstractRange interface: document.createRange() must inherit property \"collapsed\" with the proper type","status":"PASS"},{"name":"Range must be primary interface of detachedRange","status":"PASS"},{"name":"Stringification of detachedRange","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"commonAncestorContainer\" with the proper type","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setStart(Node, unsigned long)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setStart(Node, unsigned long) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setEnd(Node, unsigned long)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setEnd(Node, unsigned long) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setStartBefore(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setStartBefore(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setStartAfter(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setStartAfter(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setEndBefore(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setEndBefore(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setEndAfter(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling setEndAfter(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"collapse(boolean)\" with the proper type","status":"PASS"},{"name":"Range interface: calling collapse(boolean) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"selectNode(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling selectNode(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"selectNodeContents(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling selectNodeContents(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"START_TO_START\" with the proper type","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"START_TO_END\" with the proper type","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"END_TO_END\" with the proper type","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"END_TO_START\" with the proper type","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"compareBoundaryPoints(unsigned short, Range)\" with the proper type","status":"PASS"},{"name":"Range interface: calling compareBoundaryPoints(unsigned short, Range) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"deleteContents()\" with the proper type","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"extractContents()\" with the proper type","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"cloneContents()\" with the proper type","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"insertNode(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling insertNode(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"surroundContents(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling surroundContents(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"cloneRange()\" with the proper type","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"detach()\" with the proper type","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"isPointInRange(Node, unsigned long)\" with the proper type","status":"PASS"},{"name":"Range interface: calling isPointInRange(Node, unsigned long) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"comparePoint(Node, unsigned long)\" with the proper type","status":"PASS"},{"name":"Range interface: calling comparePoint(Node, unsigned long) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"intersectsNode(Node)\" with the proper type","status":"PASS"},{"name":"Range interface: calling intersectsNode(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"AbstractRange interface: detachedRange must inherit property \"startContainer\" with the proper type","status":"PASS"},{"name":"AbstractRange interface: detachedRange must inherit property \"startOffset\" with the proper type","status":"PASS"},{"name":"AbstractRange interface: detachedRange must inherit property \"endContainer\" with the proper type","status":"PASS"},{"name":"AbstractRange interface: detachedRange must inherit property \"endOffset\" with the proper type","status":"PASS"},{"name":"AbstractRange interface: detachedRange must inherit property \"collapsed\" with the proper type","status":"PASS"},{"name":"NodeIterator interface: existence and properties of interface object","status":"PASS"},{"name":"NodeIterator interface object length","status":"PASS"},{"name":"NodeIterator interface object name","status":"PASS"},{"name":"NodeIterator interface: existence and properties of interface prototype object","status":"PASS"},{"name":"NodeIterator interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"NodeIterator interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"NodeIterator interface: attribute root","status":"PASS"},{"name":"Unscopable handled correctly for root property on NodeIterator","status":"PASS"},{"name":"NodeIterator interface: attribute referenceNode","status":"PASS"},{"name":"Unscopable handled correctly for referenceNode property on NodeIterator","status":"PASS"},{"name":"NodeIterator interface: attribute pointerBeforeReferenceNode","status":"PASS"},{"name":"Unscopable handled correctly for pointerBeforeReferenceNode property on NodeIterator","status":"PASS"},{"name":"NodeIterator interface: attribute whatToShow","status":"PASS"},{"name":"Unscopable handled correctly for whatToShow property on NodeIterator","status":"PASS"},{"name":"NodeIterator interface: attribute filter","status":"PASS"},{"name":"Unscopable handled correctly for filter property on NodeIterator","status":"PASS"},{"name":"NodeIterator interface: operation nextNode()","status":"PASS"},{"name":"Unscopable handled correctly for nextNode() on NodeIterator","status":"PASS"},{"name":"NodeIterator interface: operation previousNode()","status":"PASS"},{"name":"Unscopable handled correctly for previousNode() on NodeIterator","status":"PASS"},{"name":"NodeIterator interface: operation detach()","status":"PASS"},{"name":"Unscopable handled correctly for detach() on NodeIterator","status":"PASS"},{"name":"NodeIterator must be primary interface of document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false)","status":"PASS"},{"name":"Stringification of document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false)","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"root\" with the proper type","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"referenceNode\" with the proper type","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"pointerBeforeReferenceNode\" with the proper type","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"whatToShow\" with the proper type","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"filter\" with the proper type","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"nextNode()\" with the proper type","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"previousNode()\" with the proper type","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"detach()\" with the proper type","status":"PASS"},{"name":"TreeWalker interface: existence and properties of interface object","status":"PASS"},{"name":"TreeWalker interface object length","status":"PASS"},{"name":"TreeWalker interface object name","status":"PASS"},{"name":"TreeWalker interface: existence and properties of interface prototype object","status":"PASS"},{"name":"TreeWalker interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"TreeWalker interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"TreeWalker interface: attribute root","status":"PASS"},{"name":"Unscopable handled correctly for root property on TreeWalker","status":"PASS"},{"name":"TreeWalker interface: attribute whatToShow","status":"PASS"},{"name":"Unscopable handled correctly for whatToShow property on TreeWalker","status":"PASS"},{"name":"TreeWalker interface: attribute filter","status":"PASS"},{"name":"Unscopable handled correctly for filter property on TreeWalker","status":"PASS"},{"name":"TreeWalker interface: attribute currentNode","status":"PASS"},{"name":"Unscopable handled correctly for currentNode property on TreeWalker","status":"PASS"},{"name":"TreeWalker interface: operation parentNode()","status":"PASS"},{"name":"Unscopable handled correctly for parentNode() on TreeWalker","status":"PASS"},{"name":"TreeWalker interface: operation firstChild()","status":"PASS"},{"name":"Unscopable handled correctly for firstChild() on TreeWalker","status":"PASS"},{"name":"TreeWalker interface: operation lastChild()","status":"PASS"},{"name":"Unscopable handled correctly for lastChild() on TreeWalker","status":"PASS"},{"name":"TreeWalker interface: operation previousSibling()","status":"PASS"},{"name":"Unscopable handled correctly for previousSibling() on TreeWalker","status":"PASS"},{"name":"TreeWalker interface: operation nextSibling()","status":"PASS"},{"name":"Unscopable handled correctly for nextSibling() on TreeWalker","status":"PASS"},{"name":"TreeWalker interface: operation previousNode()","status":"PASS"},{"name":"Unscopable handled correctly for previousNode() on TreeWalker","status":"PASS"},{"name":"TreeWalker interface: operation nextNode()","status":"PASS"},{"name":"Unscopable handled correctly for nextNode() on TreeWalker","status":"PASS"},{"name":"TreeWalker must be primary interface of document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false)","status":"PASS"},{"name":"Stringification of document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"root\" with the proper type","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"whatToShow\" with the proper type","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"filter\" with the proper type","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"currentNode\" with the proper type","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"parentNode()\" with the proper type","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"firstChild()\" with the proper type","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"lastChild()\" with the proper type","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"previousSibling()\" with the proper type","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"nextSibling()\" with the proper type","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"previousNode()\" with the proper type","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"nextNode()\" with the proper type","status":"PASS"},{"name":"NodeFilter interface: existence and properties of interface object","status":"PASS"},{"name":"NodeFilter interface object name","status":"PASS"},{"name":"NodeFilter interface: existence and properties of interface prototype object","status":"PASS"},{"name":"NodeFilter interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"NodeFilter interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_ACCEPT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_ACCEPT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_REJECT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_REJECT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_SKIP on interface object","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_SKIP on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ALL on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ALL on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ELEMENT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ELEMENT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ATTRIBUTE on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ATTRIBUTE on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_TEXT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_TEXT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_CDATA_SECTION on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_CDATA_SECTION on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ENTITY_REFERENCE on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ENTITY_REFERENCE on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ENTITY on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ENTITY on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_PROCESSING_INSTRUCTION on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_PROCESSING_INSTRUCTION on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_COMMENT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_COMMENT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT_TYPE on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT_TYPE on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT_FRAGMENT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT_FRAGMENT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_NOTATION on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_NOTATION on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: operation acceptNode(Node)","status":"PASS"},{"name":"Unscopable handled correctly for acceptNode(Node) on NodeFilter","status":"PASS"},{"name":"DOMTokenList interface: existence and properties of interface object","status":"PASS"},{"name":"DOMTokenList interface object length","status":"PASS"},{"name":"DOMTokenList interface object name","status":"PASS"},{"name":"DOMTokenList interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DOMTokenList interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DOMTokenList interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"DOMTokenList interface: attribute length","status":"PASS"},{"name":"Unscopable handled correctly for length property on DOMTokenList","status":"PASS"},{"name":"DOMTokenList interface: operation item(unsigned long)","status":"PASS"},{"name":"Unscopable handled correctly for item(unsigned long) on DOMTokenList","status":"PASS"},{"name":"DOMTokenList interface: operation contains(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for contains(DOMString) on DOMTokenList","status":"PASS"},{"name":"DOMTokenList interface: operation add(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for add(DOMString) on DOMTokenList","status":"PASS"},{"name":"DOMTokenList interface: operation remove(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for remove(DOMString) on DOMTokenList","status":"PASS"},{"name":"DOMTokenList interface: operation toggle(DOMString, boolean)","status":"PASS"},{"name":"Unscopable handled correctly for toggle(DOMString, boolean) on DOMTokenList","status":"PASS"},{"name":"DOMTokenList interface: operation replace(DOMString, DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for replace(DOMString, DOMString) on DOMTokenList","status":"PASS"},{"name":"DOMTokenList interface: operation supports(DOMString)","status":"PASS"},{"name":"Unscopable handled correctly for supports(DOMString) on DOMTokenList","status":"PASS"},{"name":"DOMTokenList interface: attribute value","status":"PASS"},{"name":"Unscopable handled correctly for value property on DOMTokenList","status":"PASS"},{"name":"DOMTokenList interface: stringifier","status":"PASS"},{"name":"DOMTokenList must be primary interface of document.body.classList","status":"PASS"},{"name":"Stringification of document.body.classList","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"length\" with the proper type","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"item(unsigned long)\" with the proper type","status":"PASS"},{"name":"DOMTokenList interface: calling item(unsigned long) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"contains(DOMString)\" with the proper type","status":"PASS"},{"name":"DOMTokenList interface: calling contains(DOMString) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"add(DOMString)\" with the proper type","status":"PASS"},{"name":"DOMTokenList interface: calling add(DOMString) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"remove(DOMString)\" with the proper type","status":"PASS"},{"name":"DOMTokenList interface: calling remove(DOMString) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"toggle(DOMString, boolean)\" with the proper type","status":"PASS"},{"name":"DOMTokenList interface: calling toggle(DOMString, boolean) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"replace(DOMString, DOMString)\" with the proper type","status":"PASS"},{"name":"DOMTokenList interface: calling replace(DOMString, DOMString) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"supports(DOMString)\" with the proper type","status":"PASS"},{"name":"DOMTokenList interface: calling supports(DOMString) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"value\" with the proper type","status":"PASS"},{"name":"Window interface: attribute event","status":"PASS"},{"name":"Unscopable handled correctly for event property on Window","status":"PASS"}]}