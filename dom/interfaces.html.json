{"status":"OK","subtests":[{"name":"Test driver","status":"PASS"},{"name":"Event interface: existence and properties of interface object","status":"PASS"},{"name":"Event interface object length","status":"PASS"},{"name":"Event interface object name","status":"PASS"},{"name":"Event interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Event interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Event interface: attribute type","status":"PASS"},{"name":"Event interface: attribute target","status":"PASS"},{"name":"Event interface: attribute currentTarget","status":"PASS"},{"name":"Event interface: constant NONE on interface object","status":"PASS"},{"name":"Event interface: constant NONE on interface prototype object","status":"PASS"},{"name":"Event interface: constant CAPTURING_PHASE on interface object","status":"PASS"},{"name":"Event interface: constant CAPTURING_PHASE on interface prototype object","status":"PASS"},{"name":"Event interface: constant AT_TARGET on interface object","status":"PASS"},{"name":"Event interface: constant AT_TARGET on interface prototype object","status":"PASS"},{"name":"Event interface: constant BUBBLING_PHASE on interface object","status":"PASS"},{"name":"Event interface: constant BUBBLING_PHASE on interface prototype object","status":"PASS"},{"name":"Event interface: attribute eventPhase","status":"PASS"},{"name":"Event interface: operation stopPropagation()","status":"PASS"},{"name":"Event interface: operation stopImmediatePropagation()","status":"PASS"},{"name":"Event interface: attribute bubbles","status":"PASS"},{"name":"Event interface: attribute cancelable","status":"PASS"},{"name":"Event interface: operation preventDefault()","status":"PASS"},{"name":"Event interface: attribute defaultPrevented","status":"PASS"},{"name":"Event interface: attribute timeStamp","status":"PASS"},{"name":"Event interface: operation initEvent(DOMString,boolean,boolean)","status":"PASS"},{"name":"Event must be primary interface of document.createEvent(\"Event\")","status":"PASS"},{"name":"Stringification of document.createEvent(\"Event\")","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"type\" with the proper type (0)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"target\" with the proper type (1)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"currentTarget\" with the proper type (2)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"NONE\" with the proper type (3)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"CAPTURING_PHASE\" with the proper type (4)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"AT_TARGET\" with the proper type (5)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"BUBBLING_PHASE\" with the proper type (6)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"eventPhase\" with the proper type (7)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"stopPropagation\" with the proper type (8)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"stopImmediatePropagation\" with the proper type (9)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"bubbles\" with the proper type (10)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"cancelable\" with the proper type (11)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"preventDefault\" with the proper type (12)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"defaultPrevented\" with the proper type (13)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must have own property \"isTrusted\"","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"timeStamp\" with the proper type (15)","status":"PASS"},{"name":"Event interface: document.createEvent(\"Event\") must inherit property \"initEvent\" with the proper type (16)","status":"PASS"},{"name":"Event interface: calling initEvent(DOMString,boolean,boolean) on document.createEvent(\"Event\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Event must be primary interface of new Event(\"foo\")","status":"PASS"},{"name":"Stringification of new Event(\"foo\")","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"type\" with the proper type (0)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"target\" with the proper type (1)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"currentTarget\" with the proper type (2)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"NONE\" with the proper type (3)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"CAPTURING_PHASE\" with the proper type (4)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"AT_TARGET\" with the proper type (5)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"BUBBLING_PHASE\" with the proper type (6)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"eventPhase\" with the proper type (7)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"stopPropagation\" with the proper type (8)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"stopImmediatePropagation\" with the proper type (9)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"bubbles\" with the proper type (10)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"cancelable\" with the proper type (11)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"preventDefault\" with the proper type (12)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"defaultPrevented\" with the proper type (13)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must have own property \"isTrusted\"","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"timeStamp\" with the proper type (15)","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"initEvent\" with the proper type (16)","status":"PASS"},{"name":"Event interface: calling initEvent(DOMString,boolean,boolean) on new Event(\"foo\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CustomEvent interface: existence and properties of interface object","status":"PASS"},{"name":"CustomEvent interface object length","status":"PASS"},{"name":"CustomEvent interface object name","status":"PASS"},{"name":"CustomEvent interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CustomEvent interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"CustomEvent interface: attribute detail","status":"PASS"},{"name":"CustomEvent interface: operation initCustomEvent(DOMString,boolean,boolean,any)","status":"PASS"},{"name":"CustomEvent must be primary interface of new CustomEvent(\"foo\")","status":"PASS"},{"name":"Stringification of new CustomEvent(\"foo\")","status":"PASS"},{"name":"CustomEvent interface: new CustomEvent(\"foo\") must inherit property \"detail\" with the proper type (0)","status":"PASS"},{"name":"CustomEvent interface: new CustomEvent(\"foo\") must inherit property \"initCustomEvent\" with the proper type (1)","status":"PASS"},{"name":"CustomEvent interface: calling initCustomEvent(DOMString,boolean,boolean,any) on new CustomEvent(\"foo\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"type\" with the proper type (0)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"target\" with the proper type (1)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"currentTarget\" with the proper type (2)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"NONE\" with the proper type (3)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"CAPTURING_PHASE\" with the proper type (4)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"AT_TARGET\" with the proper type (5)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"BUBBLING_PHASE\" with the proper type (6)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"eventPhase\" with the proper type (7)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"stopPropagation\" with the proper type (8)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"stopImmediatePropagation\" with the proper type (9)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"bubbles\" with the proper type (10)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"cancelable\" with the proper type (11)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"preventDefault\" with the proper type (12)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"defaultPrevented\" with the proper type (13)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must have own property \"isTrusted\"","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"timeStamp\" with the proper type (15)","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"initEvent\" with the proper type (16)","status":"PASS"},{"name":"Event interface: calling initEvent(DOMString,boolean,boolean) on new CustomEvent(\"foo\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface object","status":"PASS"},{"name":"EventTarget interface object length","status":"PASS"},{"name":"EventTarget interface object name","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface prototype object","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"EventTarget interface: operation addEventListener(DOMString,EventListener,[object Object],[object Object])","status":"PASS"},{"name":"EventTarget interface: operation removeEventListener(DOMString,EventListener,[object Object],[object Object])","status":"PASS"},{"name":"EventTarget interface: operation dispatchEvent(Event)","status":"PASS"},{"name":"EventTarget must be primary interface of new EventTarget()","status":"FAIL"},{"name":"Stringification of new EventTarget()","status":"FAIL"},{"name":"EventTarget interface: new EventTarget() must inherit property \"addEventListener\" with the proper type (0)","status":"FAIL"},{"name":"EventTarget interface: calling addEventListener(DOMString,EventListener,[object Object],[object Object]) on new EventTarget() with too few arguments must throw TypeError","status":"FAIL"},{"name":"EventTarget interface: new EventTarget() must inherit property \"removeEventListener\" with the proper type (1)","status":"FAIL"},{"name":"EventTarget interface: calling removeEventListener(DOMString,EventListener,[object Object],[object Object]) on new EventTarget() with too few arguments must throw TypeError","status":"FAIL"},{"name":"EventTarget interface: new EventTarget() must inherit property \"dispatchEvent\" with the proper type (2)","status":"FAIL"},{"name":"EventTarget interface: calling dispatchEvent(Event) on new EventTarget() with too few arguments must throw TypeError","status":"FAIL"},{"name":"EventListener interface: existence and properties of interface object","status":"PASS"},{"name":"EventListener interface: existence and properties of interface prototype object","status":"PASS"},{"name":"EventListener interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"EventListener interface: operation handleEvent(Event)","status":"PASS"},{"name":"AbortController interface: existence and properties of interface object","status":"FAIL"},{"name":"AbortController interface object length","status":"FAIL"},{"name":"AbortController interface object name","status":"FAIL"},{"name":"AbortController interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"AbortController interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"AbortController interface: attribute signal","status":"FAIL"},{"name":"AbortController interface: operation abort()","status":"FAIL"},{"name":"AbortController must be primary interface of new AbortController()","status":"FAIL"},{"name":"Stringification of new AbortController()","status":"FAIL"},{"name":"AbortController interface: new AbortController() must inherit property \"signal\" with the proper type (0)","status":"FAIL"},{"name":"AbortController interface: new AbortController() must inherit property \"abort\" with the proper type (1)","status":"FAIL"},{"name":"AbortSignal interface: existence and properties of interface object","status":"FAIL"},{"name":"AbortSignal interface object length","status":"FAIL"},{"name":"AbortSignal interface object name","status":"FAIL"},{"name":"AbortSignal interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"AbortSignal interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"AbortSignal interface: attribute aborted","status":"FAIL"},{"name":"AbortSignal interface: attribute onabort","status":"FAIL"},{"name":"AbortSignal must be primary interface of new AbortController().signal","status":"FAIL"},{"name":"Stringification of new AbortController().signal","status":"FAIL"},{"name":"AbortSignal interface: new AbortController().signal must inherit property \"aborted\" with the proper type (0)","status":"FAIL"},{"name":"AbortSignal interface: new AbortController().signal must inherit property \"onabort\" with the proper type (1)","status":"FAIL"},{"name":"EventTarget interface: new AbortController().signal must inherit property \"addEventListener\" with the proper type (0)","status":"FAIL"},{"name":"EventTarget interface: calling addEventListener(DOMString,EventListener,[object Object],[object Object]) on new AbortController().signal with too few arguments must throw TypeError","status":"FAIL"},{"name":"EventTarget interface: new AbortController().signal must inherit property \"removeEventListener\" with the proper type (1)","status":"FAIL"},{"name":"EventTarget interface: calling removeEventListener(DOMString,EventListener,[object Object],[object Object]) on new AbortController().signal with too few arguments must throw TypeError","status":"FAIL"},{"name":"EventTarget interface: new AbortController().signal must inherit property \"dispatchEvent\" with the proper type (2)","status":"FAIL"},{"name":"EventTarget interface: calling dispatchEvent(Event) on new AbortController().signal with too few arguments must throw TypeError","status":"FAIL"},{"name":"NodeList interface: existence and properties of interface object","status":"PASS"},{"name":"NodeList interface object length","status":"PASS"},{"name":"NodeList interface object name","status":"PASS"},{"name":"NodeList interface: existence and properties of interface prototype object","status":"PASS"},{"name":"NodeList interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"NodeList interface: operation item(unsigned long)","status":"PASS"},{"name":"NodeList interface: attribute length","status":"PASS"},{"name":"NodeList must be primary interface of document.querySelectorAll(\"script\")","status":"PASS"},{"name":"Stringification of document.querySelectorAll(\"script\")","status":"PASS"},{"name":"NodeList interface: document.querySelectorAll(\"script\") must inherit property \"item\" with the proper type (0)","status":"PASS"},{"name":"NodeList interface: calling item(unsigned long) on document.querySelectorAll(\"script\") with too few arguments must throw TypeError","status":"PASS"},{"name":"NodeList interface: document.querySelectorAll(\"script\") must inherit property \"length\" with the proper type (1)","status":"PASS"},{"name":"HTMLCollection interface: existence and properties of interface object","status":"PASS"},{"name":"HTMLCollection interface object length","status":"PASS"},{"name":"HTMLCollection interface object name","status":"PASS"},{"name":"HTMLCollection interface: existence and properties of interface prototype object","status":"PASS"},{"name":"HTMLCollection interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"HTMLCollection interface: attribute length","status":"PASS"},{"name":"HTMLCollection interface: operation item(unsigned long)","status":"PASS"},{"name":"HTMLCollection interface: operation namedItem(DOMString)","status":"PASS"},{"name":"HTMLCollection must be primary interface of document.body.children","status":"PASS"},{"name":"Stringification of document.body.children","status":"PASS"},{"name":"HTMLCollection interface: document.body.children must inherit property \"length\" with the proper type (0)","status":"PASS"},{"name":"HTMLCollection interface: document.body.children must inherit property \"item\" with the proper type (1)","status":"PASS"},{"name":"HTMLCollection interface: calling item(unsigned long) on document.body.children with too few arguments must throw TypeError","status":"PASS"},{"name":"HTMLCollection interface: document.body.children must inherit property \"namedItem\" with the proper type (2)","status":"PASS"},{"name":"HTMLCollection interface: calling namedItem(DOMString) on document.body.children with too few arguments must throw TypeError","status":"PASS"},{"name":"MutationObserver interface: existence and properties of interface object","status":"PASS"},{"name":"MutationObserver interface object length","status":"PASS"},{"name":"MutationObserver interface object name","status":"PASS"},{"name":"MutationObserver interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MutationObserver interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MutationObserver interface: operation observe(Node,MutationObserverInit)","status":"PASS"},{"name":"MutationObserver interface: operation disconnect()","status":"PASS"},{"name":"MutationObserver interface: operation takeRecords()","status":"PASS"},{"name":"MutationRecord interface: existence and properties of interface object","status":"PASS"},{"name":"MutationRecord interface object length","status":"PASS"},{"name":"MutationRecord interface object name","status":"PASS"},{"name":"MutationRecord interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MutationRecord interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MutationRecord interface: attribute type","status":"PASS"},{"name":"MutationRecord interface: attribute target","status":"PASS"},{"name":"MutationRecord interface: attribute addedNodes","status":"PASS"},{"name":"MutationRecord interface: attribute removedNodes","status":"PASS"},{"name":"MutationRecord interface: attribute previousSibling","status":"PASS"},{"name":"MutationRecord interface: attribute nextSibling","status":"PASS"},{"name":"MutationRecord interface: attribute attributeName","status":"PASS"},{"name":"MutationRecord interface: attribute attributeNamespace","status":"PASS"},{"name":"MutationRecord interface: attribute oldValue","status":"PASS"},{"name":"Node interface: existence and properties of interface object","status":"PASS"},{"name":"Node interface object length","status":"PASS"},{"name":"Node interface object name","status":"PASS"},{"name":"Node interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Node interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Node interface: constant ELEMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ELEMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant ATTRIBUTE_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ATTRIBUTE_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant TEXT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant TEXT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant CDATA_SECTION_NODE on interface object","status":"PASS"},{"name":"Node interface: constant CDATA_SECTION_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant ENTITY_REFERENCE_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ENTITY_REFERENCE_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant ENTITY_NODE on interface object","status":"PASS"},{"name":"Node interface: constant ENTITY_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant PROCESSING_INSTRUCTION_NODE on interface object","status":"PASS"},{"name":"Node interface: constant PROCESSING_INSTRUCTION_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant COMMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant COMMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_TYPE_NODE on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_TYPE_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_FRAGMENT_NODE on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_FRAGMENT_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: constant NOTATION_NODE on interface object","status":"PASS"},{"name":"Node interface: constant NOTATION_NODE on interface prototype object","status":"PASS"},{"name":"Node interface: attribute nodeType","status":"PASS"},{"name":"Node interface: attribute nodeName","status":"PASS"},{"name":"Node interface: attribute baseURI","status":"PASS"},{"name":"Node interface: attribute isConnected","status":"PASS"},{"name":"Node interface: attribute ownerDocument","status":"PASS"},{"name":"Node interface: operation getRootNode(GetRootNodeOptions)","status":"PASS"},{"name":"Node interface: attribute parentNode","status":"PASS"},{"name":"Node interface: attribute parentElement","status":"PASS"},{"name":"Node interface: operation hasChildNodes()","status":"PASS"},{"name":"Node interface: attribute childNodes","status":"PASS"},{"name":"Node interface: attribute firstChild","status":"PASS"},{"name":"Node interface: attribute lastChild","status":"PASS"},{"name":"Node interface: attribute previousSibling","status":"PASS"},{"name":"Node interface: attribute nextSibling","status":"PASS"},{"name":"Node interface: attribute nodeValue","status":"PASS"},{"name":"Node interface: attribute textContent","status":"PASS"},{"name":"Node interface: operation normalize()","status":"PASS"},{"name":"Node interface: operation cloneNode(boolean)","status":"PASS"},{"name":"Node interface: operation isEqualNode(Node)","status":"PASS"},{"name":"Node interface: operation isSameNode(Node)","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_DISCONNECTED on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_DISCONNECTED on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_PRECEDING on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_PRECEDING on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_FOLLOWING on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_FOLLOWING on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINS on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINS on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINED_BY on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_CONTAINED_BY on interface prototype object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC on interface object","status":"PASS"},{"name":"Node interface: constant DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC on interface prototype object","status":"PASS"},{"name":"Node interface: operation compareDocumentPosition(Node)","status":"PASS"},{"name":"Node interface: operation contains(Node)","status":"PASS"},{"name":"Node interface: operation lookupPrefix(DOMString)","status":"PASS"},{"name":"Node interface: operation lookupNamespaceURI(DOMString)","status":"PASS"},{"name":"Node interface: operation isDefaultNamespace(DOMString)","status":"PASS"},{"name":"Node interface: operation insertBefore(Node,Node)","status":"PASS"},{"name":"Node interface: operation appendChild(Node)","status":"PASS"},{"name":"Node interface: operation replaceChild(Node,Node)","status":"PASS"},{"name":"Node interface: operation removeChild(Node)","status":"PASS"},{"name":"Document interface: existence and properties of interface object","status":"PASS"},{"name":"Document interface object length","status":"PASS"},{"name":"Document interface object name","status":"PASS"},{"name":"Document interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Document interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Document interface: attribute implementation","status":"PASS"},{"name":"Document interface: attribute URL","status":"PASS"},{"name":"Document interface: attribute documentURI","status":"PASS"},{"name":"Document interface: attribute origin","status":"PASS"},{"name":"Document interface: attribute compatMode","status":"PASS"},{"name":"Document interface: attribute characterSet","status":"PASS"},{"name":"Document interface: attribute charset","status":"PASS"},{"name":"Document interface: attribute inputEncoding","status":"PASS"},{"name":"Document interface: attribute contentType","status":"PASS"},{"name":"Document interface: attribute doctype","status":"PASS"},{"name":"Document interface: attribute documentElement","status":"PASS"},{"name":"Document interface: operation getElementsByTagName(DOMString)","status":"PASS"},{"name":"Document interface: operation getElementsByTagNameNS(DOMString,DOMString)","status":"PASS"},{"name":"Document interface: operation getElementsByClassName(DOMString)","status":"PASS"},{"name":"Document interface: operation createElement(DOMString,ElementCreationOptions)","status":"PASS"},{"name":"Document interface: operation createElementNS(DOMString,DOMString,ElementCreationOptions)","status":"PASS"},{"name":"Document interface: operation createDocumentFragment()","status":"PASS"},{"name":"Document interface: operation createTextNode(DOMString)","status":"PASS"},{"name":"Document interface: operation createCDATASection(DOMString)","status":"PASS"},{"name":"Document interface: operation createComment(DOMString)","status":"PASS"},{"name":"Document interface: operation createProcessingInstruction(DOMString,DOMString)","status":"PASS"},{"name":"Document interface: operation importNode(Node,boolean)","status":"PASS"},{"name":"Document interface: operation adoptNode(Node)","status":"PASS"},{"name":"Document interface: operation createAttribute(DOMString)","status":"PASS"},{"name":"Document interface: operation createAttributeNS(DOMString,DOMString)","status":"PASS"},{"name":"Document interface: operation createEvent(DOMString)","status":"PASS"},{"name":"Document interface: operation createRange()","status":"PASS"},{"name":"Document interface: operation createNodeIterator(Node,unsigned long,NodeFilter)","status":"PASS"},{"name":"Document interface: operation createTreeWalker(Node,unsigned long,NodeFilter)","status":"PASS"},{"name":"Document interface: operation getElementById(DOMString)","status":"PASS"},{"name":"Document interface: attribute children","status":"PASS"},{"name":"Document interface: attribute firstElementChild","status":"PASS"},{"name":"Document interface: attribute lastElementChild","status":"PASS"},{"name":"Document interface: attribute childElementCount","status":"PASS"},{"name":"Document interface: operation prepend([object Object],[object Object])","status":"PASS"},{"name":"Document interface: operation append([object Object],[object Object])","status":"PASS"},{"name":"Document interface: operation querySelector(DOMString)","status":"PASS"},{"name":"Document interface: operation querySelectorAll(DOMString)","status":"PASS"},{"name":"Document must be primary interface of new Document()","status":"PASS"},{"name":"Stringification of new Document()","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"implementation\" with the proper type (0)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"URL\" with the proper type (1)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"documentURI\" with the proper type (2)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"origin\" with the proper type (3)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"compatMode\" with the proper type (4)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"characterSet\" with the proper type (5)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"charset\" with the proper type (6)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"inputEncoding\" with the proper type (7)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"contentType\" with the proper type (8)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"doctype\" with the proper type (9)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"documentElement\" with the proper type (10)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"getElementsByTagName\" with the proper type (11)","status":"PASS"},{"name":"Document interface: calling getElementsByTagName(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"getElementsByTagNameNS\" with the proper type (12)","status":"PASS"},{"name":"Document interface: calling getElementsByTagNameNS(DOMString,DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"getElementsByClassName\" with the proper type (13)","status":"PASS"},{"name":"Document interface: calling getElementsByClassName(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createElement\" with the proper type (14)","status":"PASS"},{"name":"Document interface: calling createElement(DOMString,ElementCreationOptions) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createElementNS\" with the proper type (15)","status":"PASS"},{"name":"Document interface: calling createElementNS(DOMString,DOMString,ElementCreationOptions) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createDocumentFragment\" with the proper type (16)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createTextNode\" with the proper type (17)","status":"PASS"},{"name":"Document interface: calling createTextNode(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createCDATASection\" with the proper type (18)","status":"PASS"},{"name":"Document interface: calling createCDATASection(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createComment\" with the proper type (19)","status":"PASS"},{"name":"Document interface: calling createComment(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createProcessingInstruction\" with the proper type (20)","status":"PASS"},{"name":"Document interface: calling createProcessingInstruction(DOMString,DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"importNode\" with the proper type (21)","status":"PASS"},{"name":"Document interface: calling importNode(Node,boolean) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"adoptNode\" with the proper type (22)","status":"PASS"},{"name":"Document interface: calling adoptNode(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createAttribute\" with the proper type (23)","status":"PASS"},{"name":"Document interface: calling createAttribute(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createAttributeNS\" with the proper type (24)","status":"PASS"},{"name":"Document interface: calling createAttributeNS(DOMString,DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createEvent\" with the proper type (25)","status":"PASS"},{"name":"Document interface: calling createEvent(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createRange\" with the proper type (26)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createNodeIterator\" with the proper type (27)","status":"PASS"},{"name":"Document interface: calling createNodeIterator(Node,unsigned long,NodeFilter) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"createTreeWalker\" with the proper type (28)","status":"PASS"},{"name":"Document interface: calling createTreeWalker(Node,unsigned long,NodeFilter) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"getElementById\" with the proper type (29)","status":"PASS"},{"name":"Document interface: calling getElementById(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"children\" with the proper type (30)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"firstElementChild\" with the proper type (31)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"lastElementChild\" with the proper type (32)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"childElementCount\" with the proper type (33)","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"prepend\" with the proper type (34)","status":"PASS"},{"name":"Document interface: calling prepend([object Object],[object Object]) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"append\" with the proper type (35)","status":"PASS"},{"name":"Document interface: calling append([object Object],[object Object]) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"querySelector\" with the proper type (36)","status":"PASS"},{"name":"Document interface: calling querySelector(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: new Document() must inherit property \"querySelectorAll\" with the proper type (37)","status":"PASS"},{"name":"Document interface: calling querySelectorAll(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"ELEMENT_NODE\" with the proper type (0)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"ATTRIBUTE_NODE\" with the proper type (1)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"TEXT_NODE\" with the proper type (2)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"CDATA_SECTION_NODE\" with the proper type (3)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type (4)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"ENTITY_NODE\" with the proper type (5)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type (6)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"COMMENT_NODE\" with the proper type (7)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_NODE\" with the proper type (8)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type (9)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type (10)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"NOTATION_NODE\" with the proper type (11)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"nodeType\" with the proper type (12)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"nodeName\" with the proper type (13)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"baseURI\" with the proper type (14)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"isConnected\" with the proper type (15)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"ownerDocument\" with the proper type (16)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"getRootNode\" with the proper type (17)","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"parentNode\" with the proper type (18)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"parentElement\" with the proper type (19)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"hasChildNodes\" with the proper type (20)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"childNodes\" with the proper type (21)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"firstChild\" with the proper type (22)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"lastChild\" with the proper type (23)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"previousSibling\" with the proper type (24)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"nextSibling\" with the proper type (25)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"nodeValue\" with the proper type (26)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"textContent\" with the proper type (27)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"normalize\" with the proper type (28)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"cloneNode\" with the proper type (29)","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"isEqualNode\" with the proper type (30)","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"isSameNode\" with the proper type (31)","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type (32)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type (33)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type (34)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type (35)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type (36)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type (37)","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"compareDocumentPosition\" with the proper type (38)","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"contains\" with the proper type (39)","status":"PASS"},{"name":"Node interface: calling contains(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"lookupPrefix\" with the proper type (40)","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"lookupNamespaceURI\" with the proper type (41)","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"isDefaultNamespace\" with the proper type (42)","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"insertBefore\" with the proper type (43)","status":"PASS"},{"name":"Node interface: calling insertBefore(Node,Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"appendChild\" with the proper type (44)","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"replaceChild\" with the proper type (45)","status":"PASS"},{"name":"Node interface: calling replaceChild(Node,Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: new Document() must inherit property \"removeChild\" with the proper type (46)","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new Document() must inherit property \"addEventListener\" with the proper type (0)","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString,EventListener,[object Object],[object Object]) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new Document() must inherit property \"removeEventListener\" with the proper type (1)","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString,EventListener,[object Object],[object Object]) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new Document() must inherit property \"dispatchEvent\" with the proper type (2)","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on new Document() with too few arguments must throw TypeError","status":"PASS"},{"name":"XMLDocument interface: existence and properties of interface object","status":"PASS"},{"name":"XMLDocument interface object length","status":"PASS"},{"name":"XMLDocument interface object name","status":"PASS"},{"name":"XMLDocument interface: existence and properties of interface prototype object","status":"PASS"},{"name":"XMLDocument interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"XMLDocument must be primary interface of xmlDoc","status":"PASS"},{"name":"Stringification of xmlDoc","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"implementation\" with the proper type (0)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"URL\" with the proper type (1)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"documentURI\" with the proper type (2)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"origin\" with the proper type (3)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"compatMode\" with the proper type (4)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"characterSet\" with the proper type (5)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"charset\" with the proper type (6)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"inputEncoding\" with the proper type (7)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"contentType\" with the proper type (8)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"doctype\" with the proper type (9)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"documentElement\" with the proper type (10)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"getElementsByTagName\" with the proper type (11)","status":"PASS"},{"name":"Document interface: calling getElementsByTagName(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"getElementsByTagNameNS\" with the proper type (12)","status":"PASS"},{"name":"Document interface: calling getElementsByTagNameNS(DOMString,DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"getElementsByClassName\" with the proper type (13)","status":"PASS"},{"name":"Document interface: calling getElementsByClassName(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createElement\" with the proper type (14)","status":"PASS"},{"name":"Document interface: calling createElement(DOMString,ElementCreationOptions) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createElementNS\" with the proper type (15)","status":"PASS"},{"name":"Document interface: calling createElementNS(DOMString,DOMString,ElementCreationOptions) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createDocumentFragment\" with the proper type (16)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createTextNode\" with the proper type (17)","status":"PASS"},{"name":"Document interface: calling createTextNode(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createCDATASection\" with the proper type (18)","status":"PASS"},{"name":"Document interface: calling createCDATASection(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createComment\" with the proper type (19)","status":"PASS"},{"name":"Document interface: calling createComment(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createProcessingInstruction\" with the proper type (20)","status":"PASS"},{"name":"Document interface: calling createProcessingInstruction(DOMString,DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"importNode\" with the proper type (21)","status":"PASS"},{"name":"Document interface: calling importNode(Node,boolean) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"adoptNode\" with the proper type (22)","status":"PASS"},{"name":"Document interface: calling adoptNode(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createAttribute\" with the proper type (23)","status":"PASS"},{"name":"Document interface: calling createAttribute(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createAttributeNS\" with the proper type (24)","status":"PASS"},{"name":"Document interface: calling createAttributeNS(DOMString,DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createEvent\" with the proper type (25)","status":"PASS"},{"name":"Document interface: calling createEvent(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createRange\" with the proper type (26)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createNodeIterator\" with the proper type (27)","status":"PASS"},{"name":"Document interface: calling createNodeIterator(Node,unsigned long,NodeFilter) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"createTreeWalker\" with the proper type (28)","status":"PASS"},{"name":"Document interface: calling createTreeWalker(Node,unsigned long,NodeFilter) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"getElementById\" with the proper type (29)","status":"PASS"},{"name":"Document interface: calling getElementById(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"children\" with the proper type (30)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"firstElementChild\" with the proper type (31)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"lastElementChild\" with the proper type (32)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"childElementCount\" with the proper type (33)","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"prepend\" with the proper type (34)","status":"PASS"},{"name":"Document interface: calling prepend([object Object],[object Object]) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"append\" with the proper type (35)","status":"PASS"},{"name":"Document interface: calling append([object Object],[object Object]) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"querySelector\" with the proper type (36)","status":"PASS"},{"name":"Document interface: calling querySelector(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: xmlDoc must inherit property \"querySelectorAll\" with the proper type (37)","status":"PASS"},{"name":"Document interface: calling querySelectorAll(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"ELEMENT_NODE\" with the proper type (0)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"ATTRIBUTE_NODE\" with the proper type (1)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"TEXT_NODE\" with the proper type (2)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"CDATA_SECTION_NODE\" with the proper type (3)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type (4)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"ENTITY_NODE\" with the proper type (5)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type (6)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"COMMENT_NODE\" with the proper type (7)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_NODE\" with the proper type (8)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type (9)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type (10)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"NOTATION_NODE\" with the proper type (11)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"nodeType\" with the proper type (12)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"nodeName\" with the proper type (13)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"baseURI\" with the proper type (14)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"isConnected\" with the proper type (15)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"ownerDocument\" with the proper type (16)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"getRootNode\" with the proper type (17)","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"parentNode\" with the proper type (18)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"parentElement\" with the proper type (19)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"hasChildNodes\" with the proper type (20)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"childNodes\" with the proper type (21)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"firstChild\" with the proper type (22)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"lastChild\" with the proper type (23)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"previousSibling\" with the proper type (24)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"nextSibling\" with the proper type (25)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"nodeValue\" with the proper type (26)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"textContent\" with the proper type (27)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"normalize\" with the proper type (28)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"cloneNode\" with the proper type (29)","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"isEqualNode\" with the proper type (30)","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"isSameNode\" with the proper type (31)","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type (32)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type (33)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type (34)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type (35)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type (36)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type (37)","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"compareDocumentPosition\" with the proper type (38)","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"contains\" with the proper type (39)","status":"PASS"},{"name":"Node interface: calling contains(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"lookupPrefix\" with the proper type (40)","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"lookupNamespaceURI\" with the proper type (41)","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"isDefaultNamespace\" with the proper type (42)","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"insertBefore\" with the proper type (43)","status":"PASS"},{"name":"Node interface: calling insertBefore(Node,Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"appendChild\" with the proper type (44)","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"replaceChild\" with the proper type (45)","status":"PASS"},{"name":"Node interface: calling replaceChild(Node,Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc must inherit property \"removeChild\" with the proper type (46)","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc must inherit property \"addEventListener\" with the proper type (0)","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString,EventListener,[object Object],[object Object]) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc must inherit property \"removeEventListener\" with the proper type (1)","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString,EventListener,[object Object],[object Object]) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc must inherit property \"dispatchEvent\" with the proper type (2)","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on xmlDoc with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMImplementation interface: existence and properties of interface object","status":"PASS"},{"name":"DOMImplementation interface object length","status":"PASS"},{"name":"DOMImplementation interface object name","status":"PASS"},{"name":"DOMImplementation interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DOMImplementation interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DOMImplementation interface: operation createDocumentType(DOMString,DOMString,DOMString)","status":"PASS"},{"name":"DOMImplementation interface: operation createDocument(DOMString,DOMString,DocumentType)","status":"PASS"},{"name":"DOMImplementation interface: operation createHTMLDocument(DOMString)","status":"PASS"},{"name":"DOMImplementation interface: operation hasFeature()","status":"PASS"},{"name":"DOMImplementation must be primary interface of document.implementation","status":"PASS"},{"name":"Stringification of document.implementation","status":"PASS"},{"name":"DOMImplementation interface: document.implementation must inherit property \"createDocumentType\" with the proper type (0)","status":"PASS"},{"name":"DOMImplementation interface: calling createDocumentType(DOMString,DOMString,DOMString) on document.implementation with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMImplementation interface: document.implementation must inherit property \"createDocument\" with the proper type (1)","status":"PASS"},{"name":"DOMImplementation interface: calling createDocument(DOMString,DOMString,DocumentType) on document.implementation with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMImplementation interface: document.implementation must inherit property \"createHTMLDocument\" with the proper type (2)","status":"PASS"},{"name":"DOMImplementation interface: calling createHTMLDocument(DOMString) on document.implementation with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMImplementation interface: document.implementation must inherit property \"hasFeature\" with the proper type (3)","status":"PASS"},{"name":"DocumentType interface: existence and properties of interface object","status":"PASS"},{"name":"DocumentType interface object length","status":"PASS"},{"name":"DocumentType interface object name","status":"PASS"},{"name":"DocumentType interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DocumentType interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DocumentType interface: attribute name","status":"PASS"},{"name":"DocumentType interface: attribute publicId","status":"PASS"},{"name":"DocumentType interface: attribute systemId","status":"PASS"},{"name":"DocumentType interface: operation before([object Object],[object Object])","status":"PASS"},{"name":"DocumentType interface: operation after([object Object],[object Object])","status":"PASS"},{"name":"DocumentType interface: operation replaceWith([object Object],[object Object])","status":"PASS"},{"name":"DocumentType interface: operation remove()","status":"PASS"},{"name":"DocumentType must be primary interface of document.doctype","status":"PASS"},{"name":"Stringification of document.doctype","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"name\" with the proper type (0)","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"publicId\" with the proper type (1)","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"systemId\" with the proper type (2)","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"before\" with the proper type (3)","status":"PASS"},{"name":"DocumentType interface: calling before([object Object],[object Object]) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"after\" with the proper type (4)","status":"PASS"},{"name":"DocumentType interface: calling after([object Object],[object Object]) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"replaceWith\" with the proper type (5)","status":"PASS"},{"name":"DocumentType interface: calling replaceWith([object Object],[object Object]) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentType interface: document.doctype must inherit property \"remove\" with the proper type (6)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"ELEMENT_NODE\" with the proper type (0)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"ATTRIBUTE_NODE\" with the proper type (1)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"TEXT_NODE\" with the proper type (2)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"CDATA_SECTION_NODE\" with the proper type (3)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type (4)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"ENTITY_NODE\" with the proper type (5)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type (6)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"COMMENT_NODE\" with the proper type (7)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_NODE\" with the proper type (8)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type (9)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type (10)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"NOTATION_NODE\" with the proper type (11)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"nodeType\" with the proper type (12)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"nodeName\" with the proper type (13)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"baseURI\" with the proper type (14)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"isConnected\" with the proper type (15)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"ownerDocument\" with the proper type (16)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"getRootNode\" with the proper type (17)","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"parentNode\" with the proper type (18)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"parentElement\" with the proper type (19)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"hasChildNodes\" with the proper type (20)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"childNodes\" with the proper type (21)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"firstChild\" with the proper type (22)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"lastChild\" with the proper type (23)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"previousSibling\" with the proper type (24)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"nextSibling\" with the proper type (25)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"nodeValue\" with the proper type (26)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"textContent\" with the proper type (27)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"normalize\" with the proper type (28)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"cloneNode\" with the proper type (29)","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"isEqualNode\" with the proper type (30)","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"isSameNode\" with the proper type (31)","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type (32)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type (33)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type (34)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type (35)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type (36)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type (37)","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"compareDocumentPosition\" with the proper type (38)","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"contains\" with the proper type (39)","status":"PASS"},{"name":"Node interface: calling contains(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"lookupPrefix\" with the proper type (40)","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"lookupNamespaceURI\" with the proper type (41)","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"isDefaultNamespace\" with the proper type (42)","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"insertBefore\" with the proper type (43)","status":"PASS"},{"name":"Node interface: calling insertBefore(Node,Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"appendChild\" with the proper type (44)","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"replaceChild\" with the proper type (45)","status":"PASS"},{"name":"Node interface: calling replaceChild(Node,Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.doctype must inherit property \"removeChild\" with the proper type (46)","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.doctype must inherit property \"addEventListener\" with the proper type (0)","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString,EventListener,[object Object],[object Object]) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.doctype must inherit property \"removeEventListener\" with the proper type (1)","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString,EventListener,[object Object],[object Object]) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.doctype must inherit property \"dispatchEvent\" with the proper type (2)","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on document.doctype with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentFragment interface: existence and properties of interface object","status":"PASS"},{"name":"DocumentFragment interface object length","status":"PASS"},{"name":"DocumentFragment interface object name","status":"PASS"},{"name":"DocumentFragment interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DocumentFragment interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DocumentFragment interface: operation getElementById(DOMString)","status":"PASS"},{"name":"DocumentFragment interface: attribute children","status":"PASS"},{"name":"DocumentFragment interface: attribute firstElementChild","status":"PASS"},{"name":"DocumentFragment interface: attribute lastElementChild","status":"PASS"},{"name":"DocumentFragment interface: attribute childElementCount","status":"PASS"},{"name":"DocumentFragment interface: operation prepend([object Object],[object Object])","status":"PASS"},{"name":"DocumentFragment interface: operation append([object Object],[object Object])","status":"PASS"},{"name":"DocumentFragment interface: operation querySelector(DOMString)","status":"PASS"},{"name":"DocumentFragment interface: operation querySelectorAll(DOMString)","status":"PASS"},{"name":"DocumentFragment must be primary interface of document.createDocumentFragment()","status":"PASS"},{"name":"Stringification of document.createDocumentFragment()","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"getElementById\" with the proper type (0)","status":"PASS"},{"name":"DocumentFragment interface: calling getElementById(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"children\" with the proper type (1)","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"firstElementChild\" with the proper type (2)","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"lastElementChild\" with the proper type (3)","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"childElementCount\" with the proper type (4)","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"prepend\" with the proper type (5)","status":"PASS"},{"name":"DocumentFragment interface: calling prepend([object Object],[object Object]) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"append\" with the proper type (6)","status":"PASS"},{"name":"DocumentFragment interface: calling append([object Object],[object Object]) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"querySelector\" with the proper type (7)","status":"PASS"},{"name":"DocumentFragment interface: calling querySelector(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"DocumentFragment interface: document.createDocumentFragment() must inherit property \"querySelectorAll\" with the proper type (8)","status":"PASS"},{"name":"DocumentFragment interface: calling querySelectorAll(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"ELEMENT_NODE\" with the proper type (0)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"ATTRIBUTE_NODE\" with the proper type (1)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"TEXT_NODE\" with the proper type (2)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"CDATA_SECTION_NODE\" with the proper type (3)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type (4)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"ENTITY_NODE\" with the proper type (5)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type (6)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"COMMENT_NODE\" with the proper type (7)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_NODE\" with the proper type (8)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type (9)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type (10)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"NOTATION_NODE\" with the proper type (11)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"nodeType\" with the proper type (12)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"nodeName\" with the proper type (13)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"baseURI\" with the proper type (14)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"isConnected\" with the proper type (15)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"ownerDocument\" with the proper type (16)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"getRootNode\" with the proper type (17)","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"parentNode\" with the proper type (18)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"parentElement\" with the proper type (19)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"hasChildNodes\" with the proper type (20)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"childNodes\" with the proper type (21)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"firstChild\" with the proper type (22)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"lastChild\" with the proper type (23)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"previousSibling\" with the proper type (24)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"nextSibling\" with the proper type (25)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"nodeValue\" with the proper type (26)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"textContent\" with the proper type (27)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"normalize\" with the proper type (28)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"cloneNode\" with the proper type (29)","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"isEqualNode\" with the proper type (30)","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"isSameNode\" with the proper type (31)","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type (32)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type (33)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type (34)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type (35)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type (36)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type (37)","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"compareDocumentPosition\" with the proper type (38)","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"contains\" with the proper type (39)","status":"PASS"},{"name":"Node interface: calling contains(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"lookupPrefix\" with the proper type (40)","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"lookupNamespaceURI\" with the proper type (41)","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"isDefaultNamespace\" with the proper type (42)","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"insertBefore\" with the proper type (43)","status":"PASS"},{"name":"Node interface: calling insertBefore(Node,Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"appendChild\" with the proper type (44)","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"replaceChild\" with the proper type (45)","status":"PASS"},{"name":"Node interface: calling replaceChild(Node,Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createDocumentFragment() must inherit property \"removeChild\" with the proper type (46)","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createDocumentFragment() must inherit property \"addEventListener\" with the proper type (0)","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString,EventListener,[object Object],[object Object]) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createDocumentFragment() must inherit property \"removeEventListener\" with the proper type (1)","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString,EventListener,[object Object],[object Object]) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createDocumentFragment() must inherit property \"dispatchEvent\" with the proper type (2)","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on document.createDocumentFragment() with too few arguments must throw TypeError","status":"PASS"},{"name":"ShadowRoot interface: existence and properties of interface object","status":"PASS"},{"name":"ShadowRoot interface object length","status":"PASS"},{"name":"ShadowRoot interface object name","status":"PASS"},{"name":"ShadowRoot interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ShadowRoot interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ShadowRoot interface: attribute mode","status":"PASS"},{"name":"ShadowRoot interface: attribute host","status":"PASS"},{"name":"Element interface: existence and properties of interface object","status":"PASS"},{"name":"Element interface object length","status":"PASS"},{"name":"Element interface object name","status":"PASS"},{"name":"Element interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Element interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Element interface: attribute namespaceURI","status":"PASS"},{"name":"Element interface: attribute prefix","status":"PASS"},{"name":"Element interface: attribute localName","status":"PASS"},{"name":"Element interface: attribute tagName","status":"PASS"},{"name":"Element interface: attribute id","status":"PASS"},{"name":"Element interface: attribute className","status":"PASS"},{"name":"Element interface: attribute classList","status":"PASS"},{"name":"Element interface: attribute slot","status":"PASS"},{"name":"Element interface: operation hasAttributes()","status":"PASS"},{"name":"Element interface: attribute attributes","status":"PASS"},{"name":"Element interface: operation getAttributeNames()","status":"PASS"},{"name":"Element interface: operation getAttribute(DOMString)","status":"PASS"},{"name":"Element interface: operation getAttributeNS(DOMString,DOMString)","status":"PASS"},{"name":"Element interface: operation setAttribute(DOMString,DOMString)","status":"PASS"},{"name":"Element interface: operation setAttributeNS(DOMString,DOMString,DOMString)","status":"PASS"},{"name":"Element interface: operation removeAttribute(DOMString)","status":"PASS"},{"name":"Element interface: operation removeAttributeNS(DOMString,DOMString)","status":"PASS"},{"name":"Element interface: operation hasAttribute(DOMString)","status":"PASS"},{"name":"Element interface: operation hasAttributeNS(DOMString,DOMString)","status":"PASS"},{"name":"Element interface: operation getAttributeNode(DOMString)","status":"PASS"},{"name":"Element interface: operation getAttributeNodeNS(DOMString,DOMString)","status":"PASS"},{"name":"Element interface: operation setAttributeNode(Attr)","status":"PASS"},{"name":"Element interface: operation setAttributeNodeNS(Attr)","status":"PASS"},{"name":"Element interface: operation removeAttributeNode(Attr)","status":"PASS"},{"name":"Element interface: operation attachShadow(ShadowRootInit)","status":"PASS"},{"name":"Element interface: attribute shadowRoot","status":"PASS"},{"name":"Element interface: operation closest(DOMString)","status":"PASS"},{"name":"Element interface: operation matches(DOMString)","status":"PASS"},{"name":"Element interface: operation webkitMatchesSelector(DOMString)","status":"PASS"},{"name":"Element interface: operation getElementsByTagName(DOMString)","status":"PASS"},{"name":"Element interface: operation getElementsByTagNameNS(DOMString,DOMString)","status":"PASS"},{"name":"Element interface: operation getElementsByClassName(DOMString)","status":"PASS"},{"name":"Element interface: operation insertAdjacentElement(DOMString,Element)","status":"PASS"},{"name":"Element interface: operation insertAdjacentText(DOMString,DOMString)","status":"PASS"},{"name":"Element interface: attribute children","status":"PASS"},{"name":"Element interface: attribute firstElementChild","status":"PASS"},{"name":"Element interface: attribute lastElementChild","status":"PASS"},{"name":"Element interface: attribute childElementCount","status":"PASS"},{"name":"Element interface: operation prepend([object Object],[object Object])","status":"PASS"},{"name":"Element interface: operation append([object Object],[object Object])","status":"PASS"},{"name":"Element interface: operation querySelector(DOMString)","status":"PASS"},{"name":"Element interface: operation querySelectorAll(DOMString)","status":"PASS"},{"name":"Element interface: attribute previousElementSibling","status":"PASS"},{"name":"Element interface: attribute nextElementSibling","status":"PASS"},{"name":"Element interface: operation before([object Object],[object Object])","status":"PASS"},{"name":"Element interface: operation after([object Object],[object Object])","status":"PASS"},{"name":"Element interface: operation replaceWith([object Object],[object Object])","status":"PASS"},{"name":"Element interface: operation remove()","status":"PASS"},{"name":"Element interface: attribute assignedSlot","status":"PASS"},{"name":"Element must be primary interface of element","status":"PASS"},{"name":"Stringification of element","status":"PASS"},{"name":"Element interface: element must inherit property \"namespaceURI\" with the proper type (0)","status":"PASS"},{"name":"Element interface: element must inherit property \"prefix\" with the proper type (1)","status":"PASS"},{"name":"Element interface: element must inherit property \"localName\" with the proper type (2)","status":"PASS"},{"name":"Element interface: element must inherit property \"tagName\" with the proper type (3)","status":"PASS"},{"name":"Element interface: element must inherit property \"id\" with the proper type (4)","status":"PASS"},{"name":"Element interface: element must inherit property \"className\" with the proper type (5)","status":"PASS"},{"name":"Element interface: element must inherit property \"classList\" with the proper type (6)","status":"PASS"},{"name":"Element interface: element must inherit property \"slot\" with the proper type (7)","status":"PASS"},{"name":"Element interface: element must inherit property \"hasAttributes\" with the proper type (8)","status":"PASS"},{"name":"Element interface: element must inherit property \"attributes\" with the proper type (9)","status":"PASS"},{"name":"Element interface: element must inherit property \"getAttributeNames\" with the proper type (10)","status":"PASS"},{"name":"Element interface: element must inherit property \"getAttribute\" with the proper type (11)","status":"PASS"},{"name":"Element interface: calling getAttribute(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getAttributeNS\" with the proper type (12)","status":"PASS"},{"name":"Element interface: calling getAttributeNS(DOMString,DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"setAttribute\" with the proper type (13)","status":"PASS"},{"name":"Element interface: calling setAttribute(DOMString,DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"setAttributeNS\" with the proper type (14)","status":"PASS"},{"name":"Element interface: calling setAttributeNS(DOMString,DOMString,DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"removeAttribute\" with the proper type (15)","status":"PASS"},{"name":"Element interface: calling removeAttribute(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"removeAttributeNS\" with the proper type (16)","status":"PASS"},{"name":"Element interface: calling removeAttributeNS(DOMString,DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"hasAttribute\" with the proper type (17)","status":"PASS"},{"name":"Element interface: calling hasAttribute(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"hasAttributeNS\" with the proper type (18)","status":"PASS"},{"name":"Element interface: calling hasAttributeNS(DOMString,DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getAttributeNode\" with the proper type (19)","status":"PASS"},{"name":"Element interface: calling getAttributeNode(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getAttributeNodeNS\" with the proper type (20)","status":"PASS"},{"name":"Element interface: calling getAttributeNodeNS(DOMString,DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"setAttributeNode\" with the proper type (21)","status":"PASS"},{"name":"Element interface: calling setAttributeNode(Attr) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"setAttributeNodeNS\" with the proper type (22)","status":"PASS"},{"name":"Element interface: calling setAttributeNodeNS(Attr) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"removeAttributeNode\" with the proper type (23)","status":"PASS"},{"name":"Element interface: calling removeAttributeNode(Attr) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"attachShadow\" with the proper type (24)","status":"PASS"},{"name":"Element interface: calling attachShadow(ShadowRootInit) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"shadowRoot\" with the proper type (25)","status":"PASS"},{"name":"Element interface: element must inherit property \"closest\" with the proper type (26)","status":"PASS"},{"name":"Element interface: calling closest(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"matches\" with the proper type (27)","status":"PASS"},{"name":"Element interface: calling matches(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"webkitMatchesSelector\" with the proper type (28)","status":"PASS"},{"name":"Element interface: calling webkitMatchesSelector(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getElementsByTagName\" with the proper type (29)","status":"PASS"},{"name":"Element interface: calling getElementsByTagName(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getElementsByTagNameNS\" with the proper type (30)","status":"PASS"},{"name":"Element interface: calling getElementsByTagNameNS(DOMString,DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"getElementsByClassName\" with the proper type (31)","status":"PASS"},{"name":"Element interface: calling getElementsByClassName(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"insertAdjacentElement\" with the proper type (32)","status":"PASS"},{"name":"Element interface: calling insertAdjacentElement(DOMString,Element) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"insertAdjacentText\" with the proper type (33)","status":"PASS"},{"name":"Element interface: calling insertAdjacentText(DOMString,DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"children\" with the proper type (34)","status":"PASS"},{"name":"Element interface: element must inherit property \"firstElementChild\" with the proper type (35)","status":"PASS"},{"name":"Element interface: element must inherit property \"lastElementChild\" with the proper type (36)","status":"PASS"},{"name":"Element interface: element must inherit property \"childElementCount\" with the proper type (37)","status":"PASS"},{"name":"Element interface: element must inherit property \"prepend\" with the proper type (38)","status":"PASS"},{"name":"Element interface: calling prepend([object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"append\" with the proper type (39)","status":"PASS"},{"name":"Element interface: calling append([object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"querySelector\" with the proper type (40)","status":"PASS"},{"name":"Element interface: calling querySelector(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"querySelectorAll\" with the proper type (41)","status":"PASS"},{"name":"Element interface: calling querySelectorAll(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"previousElementSibling\" with the proper type (42)","status":"PASS"},{"name":"Element interface: element must inherit property \"nextElementSibling\" with the proper type (43)","status":"PASS"},{"name":"Element interface: element must inherit property \"before\" with the proper type (44)","status":"PASS"},{"name":"Element interface: calling before([object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"after\" with the proper type (45)","status":"PASS"},{"name":"Element interface: calling after([object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"replaceWith\" with the proper type (46)","status":"PASS"},{"name":"Element interface: calling replaceWith([object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: element must inherit property \"remove\" with the proper type (47)","status":"PASS"},{"name":"Element interface: element must inherit property \"assignedSlot\" with the proper type (48)","status":"PASS"},{"name":"Node interface: element must inherit property \"ELEMENT_NODE\" with the proper type (0)","status":"PASS"},{"name":"Node interface: element must inherit property \"ATTRIBUTE_NODE\" with the proper type (1)","status":"PASS"},{"name":"Node interface: element must inherit property \"TEXT_NODE\" with the proper type (2)","status":"PASS"},{"name":"Node interface: element must inherit property \"CDATA_SECTION_NODE\" with the proper type (3)","status":"PASS"},{"name":"Node interface: element must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type (4)","status":"PASS"},{"name":"Node interface: element must inherit property \"ENTITY_NODE\" with the proper type (5)","status":"PASS"},{"name":"Node interface: element must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type (6)","status":"PASS"},{"name":"Node interface: element must inherit property \"COMMENT_NODE\" with the proper type (7)","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_NODE\" with the proper type (8)","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type (9)","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type (10)","status":"PASS"},{"name":"Node interface: element must inherit property \"NOTATION_NODE\" with the proper type (11)","status":"PASS"},{"name":"Node interface: element must inherit property \"nodeType\" with the proper type (12)","status":"PASS"},{"name":"Node interface: element must inherit property \"nodeName\" with the proper type (13)","status":"PASS"},{"name":"Node interface: element must inherit property \"baseURI\" with the proper type (14)","status":"PASS"},{"name":"Node interface: element must inherit property \"isConnected\" with the proper type (15)","status":"PASS"},{"name":"Node interface: element must inherit property \"ownerDocument\" with the proper type (16)","status":"PASS"},{"name":"Node interface: element must inherit property \"getRootNode\" with the proper type (17)","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"parentNode\" with the proper type (18)","status":"PASS"},{"name":"Node interface: element must inherit property \"parentElement\" with the proper type (19)","status":"PASS"},{"name":"Node interface: element must inherit property \"hasChildNodes\" with the proper type (20)","status":"PASS"},{"name":"Node interface: element must inherit property \"childNodes\" with the proper type (21)","status":"PASS"},{"name":"Node interface: element must inherit property \"firstChild\" with the proper type (22)","status":"PASS"},{"name":"Node interface: element must inherit property \"lastChild\" with the proper type (23)","status":"PASS"},{"name":"Node interface: element must inherit property \"previousSibling\" with the proper type (24)","status":"PASS"},{"name":"Node interface: element must inherit property \"nextSibling\" with the proper type (25)","status":"PASS"},{"name":"Node interface: element must inherit property \"nodeValue\" with the proper type (26)","status":"PASS"},{"name":"Node interface: element must inherit property \"textContent\" with the proper type (27)","status":"PASS"},{"name":"Node interface: element must inherit property \"normalize\" with the proper type (28)","status":"PASS"},{"name":"Node interface: element must inherit property \"cloneNode\" with the proper type (29)","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"isEqualNode\" with the proper type (30)","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"isSameNode\" with the proper type (31)","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type (32)","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type (33)","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type (34)","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type (35)","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type (36)","status":"PASS"},{"name":"Node interface: element must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type (37)","status":"PASS"},{"name":"Node interface: element must inherit property \"compareDocumentPosition\" with the proper type (38)","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"contains\" with the proper type (39)","status":"PASS"},{"name":"Node interface: calling contains(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"lookupPrefix\" with the proper type (40)","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"lookupNamespaceURI\" with the proper type (41)","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"isDefaultNamespace\" with the proper type (42)","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"insertBefore\" with the proper type (43)","status":"PASS"},{"name":"Node interface: calling insertBefore(Node,Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"appendChild\" with the proper type (44)","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"replaceChild\" with the proper type (45)","status":"PASS"},{"name":"Node interface: calling replaceChild(Node,Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: element must inherit property \"removeChild\" with the proper type (46)","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: element must inherit property \"addEventListener\" with the proper type (0)","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString,EventListener,[object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: element must inherit property \"removeEventListener\" with the proper type (1)","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString,EventListener,[object Object],[object Object]) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: element must inherit property \"dispatchEvent\" with the proper type (2)","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on element with too few arguments must throw TypeError","status":"PASS"},{"name":"NamedNodeMap interface: existence and properties of interface object","status":"PASS"},{"name":"NamedNodeMap interface object length","status":"PASS"},{"name":"NamedNodeMap interface object name","status":"PASS"},{"name":"NamedNodeMap interface: existence and properties of interface prototype object","status":"PASS"},{"name":"NamedNodeMap interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"NamedNodeMap interface: attribute length","status":"PASS"},{"name":"NamedNodeMap interface: operation item(unsigned long)","status":"PASS"},{"name":"NamedNodeMap interface: operation getNamedItem(DOMString)","status":"PASS"},{"name":"NamedNodeMap interface: operation getNamedItemNS(DOMString,DOMString)","status":"PASS"},{"name":"NamedNodeMap interface: operation setNamedItem(Attr)","status":"PASS"},{"name":"NamedNodeMap interface: operation setNamedItemNS(Attr)","status":"PASS"},{"name":"NamedNodeMap interface: operation removeNamedItem(DOMString)","status":"PASS"},{"name":"NamedNodeMap interface: operation removeNamedItemNS(DOMString,DOMString)","status":"PASS"},{"name":"Attr interface: existence and properties of interface object","status":"PASS"},{"name":"Attr interface object length","status":"PASS"},{"name":"Attr interface object name","status":"PASS"},{"name":"Attr interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Attr interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Attr interface: attribute namespaceURI","status":"PASS"},{"name":"Attr interface: attribute prefix","status":"PASS"},{"name":"Attr interface: attribute localName","status":"PASS"},{"name":"Attr interface: attribute name","status":"PASS"},{"name":"Attr interface: attribute value","status":"PASS"},{"name":"Attr interface: attribute ownerElement","status":"PASS"},{"name":"Attr interface: attribute specified","status":"PASS"},{"name":"Attr must be primary interface of document.querySelector(\"[id]\").attributes[0]","status":"PASS"},{"name":"Stringification of document.querySelector(\"[id]\").attributes[0]","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"namespaceURI\" with the proper type (0)","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"prefix\" with the proper type (1)","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"localName\" with the proper type (2)","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"name\" with the proper type (3)","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"value\" with the proper type (4)","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ownerElement\" with the proper type (5)","status":"PASS"},{"name":"Attr interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"specified\" with the proper type (6)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ELEMENT_NODE\" with the proper type (0)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ATTRIBUTE_NODE\" with the proper type (1)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"TEXT_NODE\" with the proper type (2)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"CDATA_SECTION_NODE\" with the proper type (3)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type (4)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ENTITY_NODE\" with the proper type (5)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type (6)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"COMMENT_NODE\" with the proper type (7)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_NODE\" with the proper type (8)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type (9)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type (10)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"NOTATION_NODE\" with the proper type (11)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"nodeType\" with the proper type (12)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"nodeName\" with the proper type (13)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"baseURI\" with the proper type (14)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"isConnected\" with the proper type (15)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"ownerDocument\" with the proper type (16)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"getRootNode\" with the proper type (17)","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"parentNode\" with the proper type (18)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"parentElement\" with the proper type (19)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"hasChildNodes\" with the proper type (20)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"childNodes\" with the proper type (21)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"firstChild\" with the proper type (22)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"lastChild\" with the proper type (23)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"previousSibling\" with the proper type (24)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"nextSibling\" with the proper type (25)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"nodeValue\" with the proper type (26)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"textContent\" with the proper type (27)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"normalize\" with the proper type (28)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"cloneNode\" with the proper type (29)","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"isEqualNode\" with the proper type (30)","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"isSameNode\" with the proper type (31)","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type (32)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type (33)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type (34)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type (35)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type (36)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type (37)","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"compareDocumentPosition\" with the proper type (38)","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"contains\" with the proper type (39)","status":"PASS"},{"name":"Node interface: calling contains(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"lookupPrefix\" with the proper type (40)","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"lookupNamespaceURI\" with the proper type (41)","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"isDefaultNamespace\" with the proper type (42)","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"insertBefore\" with the proper type (43)","status":"PASS"},{"name":"Node interface: calling insertBefore(Node,Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"appendChild\" with the proper type (44)","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"replaceChild\" with the proper type (45)","status":"PASS"},{"name":"Node interface: calling replaceChild(Node,Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"removeChild\" with the proper type (46)","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"addEventListener\" with the proper type (0)","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString,EventListener,[object Object],[object Object]) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"removeEventListener\" with the proper type (1)","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString,EventListener,[object Object],[object Object]) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.querySelector(\"[id]\").attributes[0] must inherit property \"dispatchEvent\" with the proper type (2)","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on document.querySelector(\"[id]\").attributes[0] with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: existence and properties of interface object","status":"PASS"},{"name":"CharacterData interface object length","status":"PASS"},{"name":"CharacterData interface object name","status":"PASS"},{"name":"CharacterData interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CharacterData interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"CharacterData interface: attribute data","status":"PASS"},{"name":"CharacterData interface: attribute length","status":"PASS"},{"name":"CharacterData interface: operation substringData(unsigned long,unsigned long)","status":"PASS"},{"name":"CharacterData interface: operation appendData(DOMString)","status":"PASS"},{"name":"CharacterData interface: operation insertData(unsigned long,DOMString)","status":"PASS"},{"name":"CharacterData interface: operation deleteData(unsigned long,unsigned long)","status":"PASS"},{"name":"CharacterData interface: operation replaceData(unsigned long,unsigned long,DOMString)","status":"PASS"},{"name":"CharacterData interface: attribute previousElementSibling","status":"PASS"},{"name":"CharacterData interface: attribute nextElementSibling","status":"PASS"},{"name":"CharacterData interface: operation before([object Object],[object Object])","status":"PASS"},{"name":"CharacterData interface: operation after([object Object],[object Object])","status":"PASS"},{"name":"CharacterData interface: operation replaceWith([object Object],[object Object])","status":"PASS"},{"name":"CharacterData interface: operation remove()","status":"PASS"},{"name":"Text interface: existence and properties of interface object","status":"PASS"},{"name":"Text interface object length","status":"PASS"},{"name":"Text interface object name","status":"PASS"},{"name":"Text interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Text interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Text interface: operation splitText(unsigned long)","status":"PASS"},{"name":"Text interface: attribute wholeText","status":"PASS"},{"name":"Text interface: attribute assignedSlot","status":"PASS"},{"name":"Text must be primary interface of document.createTextNode(\"abc\")","status":"PASS"},{"name":"Stringification of document.createTextNode(\"abc\")","status":"PASS"},{"name":"Text interface: document.createTextNode(\"abc\") must inherit property \"splitText\" with the proper type (0)","status":"PASS"},{"name":"Text interface: calling splitText(unsigned long) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Text interface: document.createTextNode(\"abc\") must inherit property \"wholeText\" with the proper type (1)","status":"PASS"},{"name":"Text interface: document.createTextNode(\"abc\") must inherit property \"assignedSlot\" with the proper type (2)","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"data\" with the proper type (0)","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"length\" with the proper type (1)","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"substringData\" with the proper type (2)","status":"PASS"},{"name":"CharacterData interface: calling substringData(unsigned long,unsigned long) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"appendData\" with the proper type (3)","status":"PASS"},{"name":"CharacterData interface: calling appendData(DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"insertData\" with the proper type (4)","status":"PASS"},{"name":"CharacterData interface: calling insertData(unsigned long,DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"deleteData\" with the proper type (5)","status":"PASS"},{"name":"CharacterData interface: calling deleteData(unsigned long,unsigned long) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"replaceData\" with the proper type (6)","status":"PASS"},{"name":"CharacterData interface: calling replaceData(unsigned long,unsigned long,DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"previousElementSibling\" with the proper type (7)","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"nextElementSibling\" with the proper type (8)","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"before\" with the proper type (9)","status":"PASS"},{"name":"CharacterData interface: calling before([object Object],[object Object]) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"after\" with the proper type (10)","status":"PASS"},{"name":"CharacterData interface: calling after([object Object],[object Object]) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"replaceWith\" with the proper type (11)","status":"PASS"},{"name":"CharacterData interface: calling replaceWith([object Object],[object Object]) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createTextNode(\"abc\") must inherit property \"remove\" with the proper type (12)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"ELEMENT_NODE\" with the proper type (0)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"ATTRIBUTE_NODE\" with the proper type (1)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"TEXT_NODE\" with the proper type (2)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"CDATA_SECTION_NODE\" with the proper type (3)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type (4)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"ENTITY_NODE\" with the proper type (5)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type (6)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"COMMENT_NODE\" with the proper type (7)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_NODE\" with the proper type (8)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type (9)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type (10)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"NOTATION_NODE\" with the proper type (11)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"nodeType\" with the proper type (12)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"nodeName\" with the proper type (13)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"baseURI\" with the proper type (14)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"isConnected\" with the proper type (15)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"ownerDocument\" with the proper type (16)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"getRootNode\" with the proper type (17)","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"parentNode\" with the proper type (18)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"parentElement\" with the proper type (19)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"hasChildNodes\" with the proper type (20)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"childNodes\" with the proper type (21)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"firstChild\" with the proper type (22)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"lastChild\" with the proper type (23)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"previousSibling\" with the proper type (24)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"nextSibling\" with the proper type (25)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"nodeValue\" with the proper type (26)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"textContent\" with the proper type (27)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"normalize\" with the proper type (28)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"cloneNode\" with the proper type (29)","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"isEqualNode\" with the proper type (30)","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"isSameNode\" with the proper type (31)","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type (32)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type (33)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type (34)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type (35)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type (36)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type (37)","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"compareDocumentPosition\" with the proper type (38)","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"contains\" with the proper type (39)","status":"PASS"},{"name":"Node interface: calling contains(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"lookupPrefix\" with the proper type (40)","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"lookupNamespaceURI\" with the proper type (41)","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"isDefaultNamespace\" with the proper type (42)","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"insertBefore\" with the proper type (43)","status":"PASS"},{"name":"Node interface: calling insertBefore(Node,Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"appendChild\" with the proper type (44)","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"replaceChild\" with the proper type (45)","status":"PASS"},{"name":"Node interface: calling replaceChild(Node,Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createTextNode(\"abc\") must inherit property \"removeChild\" with the proper type (46)","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createTextNode(\"abc\") must inherit property \"addEventListener\" with the proper type (0)","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString,EventListener,[object Object],[object Object]) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createTextNode(\"abc\") must inherit property \"removeEventListener\" with the proper type (1)","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString,EventListener,[object Object],[object Object]) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createTextNode(\"abc\") must inherit property \"dispatchEvent\" with the proper type (2)","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on document.createTextNode(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CDATASection interface: existence and properties of interface object","status":"PASS"},{"name":"CDATASection interface object length","status":"PASS"},{"name":"CDATASection interface object name","status":"PASS"},{"name":"CDATASection interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CDATASection interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ProcessingInstruction interface: existence and properties of interface object","status":"PASS"},{"name":"ProcessingInstruction interface object length","status":"PASS"},{"name":"ProcessingInstruction interface object name","status":"PASS"},{"name":"ProcessingInstruction interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ProcessingInstruction interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ProcessingInstruction interface: attribute target","status":"PASS"},{"name":"ProcessingInstruction must be primary interface of xmlDoc.createProcessingInstruction(\"abc\", \"def\")","status":"PASS"},{"name":"Stringification of xmlDoc.createProcessingInstruction(\"abc\", \"def\")","status":"PASS"},{"name":"ProcessingInstruction interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"target\" with the proper type (0)","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"data\" with the proper type (0)","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"length\" with the proper type (1)","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"substringData\" with the proper type (2)","status":"PASS"},{"name":"CharacterData interface: calling substringData(unsigned long,unsigned long) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"appendData\" with the proper type (3)","status":"PASS"},{"name":"CharacterData interface: calling appendData(DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"insertData\" with the proper type (4)","status":"PASS"},{"name":"CharacterData interface: calling insertData(unsigned long,DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"deleteData\" with the proper type (5)","status":"PASS"},{"name":"CharacterData interface: calling deleteData(unsigned long,unsigned long) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"replaceData\" with the proper type (6)","status":"PASS"},{"name":"CharacterData interface: calling replaceData(unsigned long,unsigned long,DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"previousElementSibling\" with the proper type (7)","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"nextElementSibling\" with the proper type (8)","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"before\" with the proper type (9)","status":"PASS"},{"name":"CharacterData interface: calling before([object Object],[object Object]) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"after\" with the proper type (10)","status":"PASS"},{"name":"CharacterData interface: calling after([object Object],[object Object]) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"replaceWith\" with the proper type (11)","status":"PASS"},{"name":"CharacterData interface: calling replaceWith([object Object],[object Object]) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"remove\" with the proper type (12)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"ELEMENT_NODE\" with the proper type (0)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"ATTRIBUTE_NODE\" with the proper type (1)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"TEXT_NODE\" with the proper type (2)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"CDATA_SECTION_NODE\" with the proper type (3)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type (4)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"ENTITY_NODE\" with the proper type (5)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type (6)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"COMMENT_NODE\" with the proper type (7)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_NODE\" with the proper type (8)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type (9)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type (10)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"NOTATION_NODE\" with the proper type (11)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"nodeType\" with the proper type (12)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"nodeName\" with the proper type (13)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"baseURI\" with the proper type (14)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"isConnected\" with the proper type (15)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"ownerDocument\" with the proper type (16)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"getRootNode\" with the proper type (17)","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"parentNode\" with the proper type (18)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"parentElement\" with the proper type (19)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"hasChildNodes\" with the proper type (20)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"childNodes\" with the proper type (21)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"firstChild\" with the proper type (22)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"lastChild\" with the proper type (23)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"previousSibling\" with the proper type (24)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"nextSibling\" with the proper type (25)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"nodeValue\" with the proper type (26)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"textContent\" with the proper type (27)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"normalize\" with the proper type (28)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"cloneNode\" with the proper type (29)","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"isEqualNode\" with the proper type (30)","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"isSameNode\" with the proper type (31)","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type (32)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type (33)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type (34)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type (35)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type (36)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type (37)","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"compareDocumentPosition\" with the proper type (38)","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"contains\" with the proper type (39)","status":"PASS"},{"name":"Node interface: calling contains(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"lookupPrefix\" with the proper type (40)","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"lookupNamespaceURI\" with the proper type (41)","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"isDefaultNamespace\" with the proper type (42)","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"insertBefore\" with the proper type (43)","status":"PASS"},{"name":"Node interface: calling insertBefore(Node,Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"appendChild\" with the proper type (44)","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"replaceChild\" with the proper type (45)","status":"PASS"},{"name":"Node interface: calling replaceChild(Node,Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"removeChild\" with the proper type (46)","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"addEventListener\" with the proper type (0)","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString,EventListener,[object Object],[object Object]) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"removeEventListener\" with the proper type (1)","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString,EventListener,[object Object],[object Object]) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: xmlDoc.createProcessingInstruction(\"abc\", \"def\") must inherit property \"dispatchEvent\" with the proper type (2)","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on xmlDoc.createProcessingInstruction(\"abc\", \"def\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Comment interface: existence and properties of interface object","status":"PASS"},{"name":"Comment interface object length","status":"PASS"},{"name":"Comment interface object name","status":"PASS"},{"name":"Comment interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Comment interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Comment must be primary interface of document.createComment(\"abc\")","status":"PASS"},{"name":"Stringification of document.createComment(\"abc\")","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"data\" with the proper type (0)","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"length\" with the proper type (1)","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"substringData\" with the proper type (2)","status":"PASS"},{"name":"CharacterData interface: calling substringData(unsigned long,unsigned long) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"appendData\" with the proper type (3)","status":"PASS"},{"name":"CharacterData interface: calling appendData(DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"insertData\" with the proper type (4)","status":"PASS"},{"name":"CharacterData interface: calling insertData(unsigned long,DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"deleteData\" with the proper type (5)","status":"PASS"},{"name":"CharacterData interface: calling deleteData(unsigned long,unsigned long) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"replaceData\" with the proper type (6)","status":"PASS"},{"name":"CharacterData interface: calling replaceData(unsigned long,unsigned long,DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"previousElementSibling\" with the proper type (7)","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"nextElementSibling\" with the proper type (8)","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"before\" with the proper type (9)","status":"PASS"},{"name":"CharacterData interface: calling before([object Object],[object Object]) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"after\" with the proper type (10)","status":"PASS"},{"name":"CharacterData interface: calling after([object Object],[object Object]) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"replaceWith\" with the proper type (11)","status":"PASS"},{"name":"CharacterData interface: calling replaceWith([object Object],[object Object]) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CharacterData interface: document.createComment(\"abc\") must inherit property \"remove\" with the proper type (12)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"ELEMENT_NODE\" with the proper type (0)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"ATTRIBUTE_NODE\" with the proper type (1)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"TEXT_NODE\" with the proper type (2)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"CDATA_SECTION_NODE\" with the proper type (3)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"ENTITY_REFERENCE_NODE\" with the proper type (4)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"ENTITY_NODE\" with the proper type (5)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"PROCESSING_INSTRUCTION_NODE\" with the proper type (6)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"COMMENT_NODE\" with the proper type (7)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_NODE\" with the proper type (8)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_TYPE_NODE\" with the proper type (9)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_FRAGMENT_NODE\" with the proper type (10)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"NOTATION_NODE\" with the proper type (11)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"nodeType\" with the proper type (12)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"nodeName\" with the proper type (13)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"baseURI\" with the proper type (14)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"isConnected\" with the proper type (15)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"ownerDocument\" with the proper type (16)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"getRootNode\" with the proper type (17)","status":"PASS"},{"name":"Node interface: calling getRootNode(GetRootNodeOptions) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"parentNode\" with the proper type (18)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"parentElement\" with the proper type (19)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"hasChildNodes\" with the proper type (20)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"childNodes\" with the proper type (21)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"firstChild\" with the proper type (22)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"lastChild\" with the proper type (23)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"previousSibling\" with the proper type (24)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"nextSibling\" with the proper type (25)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"nodeValue\" with the proper type (26)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"textContent\" with the proper type (27)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"normalize\" with the proper type (28)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"cloneNode\" with the proper type (29)","status":"PASS"},{"name":"Node interface: calling cloneNode(boolean) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"isEqualNode\" with the proper type (30)","status":"PASS"},{"name":"Node interface: calling isEqualNode(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"isSameNode\" with the proper type (31)","status":"PASS"},{"name":"Node interface: calling isSameNode(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_DISCONNECTED\" with the proper type (32)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_PRECEDING\" with the proper type (33)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_FOLLOWING\" with the proper type (34)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_CONTAINS\" with the proper type (35)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_CONTAINED_BY\" with the proper type (36)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\" with the proper type (37)","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"compareDocumentPosition\" with the proper type (38)","status":"PASS"},{"name":"Node interface: calling compareDocumentPosition(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"contains\" with the proper type (39)","status":"PASS"},{"name":"Node interface: calling contains(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"lookupPrefix\" with the proper type (40)","status":"PASS"},{"name":"Node interface: calling lookupPrefix(DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"lookupNamespaceURI\" with the proper type (41)","status":"PASS"},{"name":"Node interface: calling lookupNamespaceURI(DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"isDefaultNamespace\" with the proper type (42)","status":"PASS"},{"name":"Node interface: calling isDefaultNamespace(DOMString) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"insertBefore\" with the proper type (43)","status":"PASS"},{"name":"Node interface: calling insertBefore(Node,Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"appendChild\" with the proper type (44)","status":"PASS"},{"name":"Node interface: calling appendChild(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"replaceChild\" with the proper type (45)","status":"PASS"},{"name":"Node interface: calling replaceChild(Node,Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Node interface: document.createComment(\"abc\") must inherit property \"removeChild\" with the proper type (46)","status":"PASS"},{"name":"Node interface: calling removeChild(Node) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createComment(\"abc\") must inherit property \"addEventListener\" with the proper type (0)","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString,EventListener,[object Object],[object Object]) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createComment(\"abc\") must inherit property \"removeEventListener\" with the proper type (1)","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString,EventListener,[object Object],[object Object]) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: document.createComment(\"abc\") must inherit property \"dispatchEvent\" with the proper type (2)","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on document.createComment(\"abc\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: existence and properties of interface object","status":"PASS"},{"name":"Range interface object length","status":"PASS"},{"name":"Range interface object name","status":"PASS"},{"name":"Range interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Range interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Range interface: attribute startContainer","status":"PASS"},{"name":"Range interface: attribute startOffset","status":"PASS"},{"name":"Range interface: attribute endContainer","status":"PASS"},{"name":"Range interface: attribute endOffset","status":"PASS"},{"name":"Range interface: attribute collapsed","status":"PASS"},{"name":"Range interface: attribute commonAncestorContainer","status":"PASS"},{"name":"Range interface: operation setStart(Node,unsigned long)","status":"PASS"},{"name":"Range interface: operation setEnd(Node,unsigned long)","status":"PASS"},{"name":"Range interface: operation setStartBefore(Node)","status":"PASS"},{"name":"Range interface: operation setStartAfter(Node)","status":"PASS"},{"name":"Range interface: operation setEndBefore(Node)","status":"PASS"},{"name":"Range interface: operation setEndAfter(Node)","status":"PASS"},{"name":"Range interface: operation collapse(boolean)","status":"PASS"},{"name":"Range interface: operation selectNode(Node)","status":"PASS"},{"name":"Range interface: operation selectNodeContents(Node)","status":"PASS"},{"name":"Range interface: constant START_TO_START on interface object","status":"PASS"},{"name":"Range interface: constant START_TO_START on interface prototype object","status":"PASS"},{"name":"Range interface: constant START_TO_END on interface object","status":"PASS"},{"name":"Range interface: constant START_TO_END on interface prototype object","status":"PASS"},{"name":"Range interface: constant END_TO_END on interface object","status":"PASS"},{"name":"Range interface: constant END_TO_END on interface prototype object","status":"PASS"},{"name":"Range interface: constant END_TO_START on interface object","status":"PASS"},{"name":"Range interface: constant END_TO_START on interface prototype object","status":"PASS"},{"name":"Range interface: operation compareBoundaryPoints(unsigned short,Range)","status":"PASS"},{"name":"Range interface: operation deleteContents()","status":"PASS"},{"name":"Range interface: operation extractContents()","status":"PASS"},{"name":"Range interface: operation cloneContents()","status":"PASS"},{"name":"Range interface: operation insertNode(Node)","status":"PASS"},{"name":"Range interface: operation surroundContents(Node)","status":"PASS"},{"name":"Range interface: operation cloneRange()","status":"PASS"},{"name":"Range interface: operation detach()","status":"PASS"},{"name":"Range interface: operation isPointInRange(Node,unsigned long)","status":"PASS"},{"name":"Range interface: operation comparePoint(Node,unsigned long)","status":"PASS"},{"name":"Range interface: operation intersectsNode(Node)","status":"PASS"},{"name":"Range interface: stringifier","status":"PASS"},{"name":"Range must be primary interface of document.createRange()","status":"PASS"},{"name":"Stringification of document.createRange()","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"startContainer\" with the proper type (0)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"startOffset\" with the proper type (1)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"endContainer\" with the proper type (2)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"endOffset\" with the proper type (3)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"collapsed\" with the proper type (4)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"commonAncestorContainer\" with the proper type (5)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setStart\" with the proper type (6)","status":"PASS"},{"name":"Range interface: calling setStart(Node,unsigned long) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setEnd\" with the proper type (7)","status":"PASS"},{"name":"Range interface: calling setEnd(Node,unsigned long) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setStartBefore\" with the proper type (8)","status":"PASS"},{"name":"Range interface: calling setStartBefore(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setStartAfter\" with the proper type (9)","status":"PASS"},{"name":"Range interface: calling setStartAfter(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setEndBefore\" with the proper type (10)","status":"PASS"},{"name":"Range interface: calling setEndBefore(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"setEndAfter\" with the proper type (11)","status":"PASS"},{"name":"Range interface: calling setEndAfter(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"collapse\" with the proper type (12)","status":"PASS"},{"name":"Range interface: calling collapse(boolean) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"selectNode\" with the proper type (13)","status":"PASS"},{"name":"Range interface: calling selectNode(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"selectNodeContents\" with the proper type (14)","status":"PASS"},{"name":"Range interface: calling selectNodeContents(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"START_TO_START\" with the proper type (15)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"START_TO_END\" with the proper type (16)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"END_TO_END\" with the proper type (17)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"END_TO_START\" with the proper type (18)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"compareBoundaryPoints\" with the proper type (19)","status":"PASS"},{"name":"Range interface: calling compareBoundaryPoints(unsigned short,Range) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"deleteContents\" with the proper type (20)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"extractContents\" with the proper type (21)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"cloneContents\" with the proper type (22)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"insertNode\" with the proper type (23)","status":"PASS"},{"name":"Range interface: calling insertNode(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"surroundContents\" with the proper type (24)","status":"PASS"},{"name":"Range interface: calling surroundContents(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"cloneRange\" with the proper type (25)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"detach\" with the proper type (26)","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"isPointInRange\" with the proper type (27)","status":"PASS"},{"name":"Range interface: calling isPointInRange(Node,unsigned long) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"comparePoint\" with the proper type (28)","status":"PASS"},{"name":"Range interface: calling comparePoint(Node,unsigned long) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: document.createRange() must inherit property \"intersectsNode\" with the proper type (29)","status":"PASS"},{"name":"Range interface: calling intersectsNode(Node) on document.createRange() with too few arguments must throw TypeError","status":"PASS"},{"name":"Range must be primary interface of detachedRange","status":"PASS"},{"name":"Stringification of detachedRange","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"startContainer\" with the proper type (0)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"startOffset\" with the proper type (1)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"endContainer\" with the proper type (2)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"endOffset\" with the proper type (3)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"collapsed\" with the proper type (4)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"commonAncestorContainer\" with the proper type (5)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setStart\" with the proper type (6)","status":"PASS"},{"name":"Range interface: calling setStart(Node,unsigned long) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setEnd\" with the proper type (7)","status":"PASS"},{"name":"Range interface: calling setEnd(Node,unsigned long) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setStartBefore\" with the proper type (8)","status":"PASS"},{"name":"Range interface: calling setStartBefore(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setStartAfter\" with the proper type (9)","status":"PASS"},{"name":"Range interface: calling setStartAfter(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setEndBefore\" with the proper type (10)","status":"PASS"},{"name":"Range interface: calling setEndBefore(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"setEndAfter\" with the proper type (11)","status":"PASS"},{"name":"Range interface: calling setEndAfter(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"collapse\" with the proper type (12)","status":"PASS"},{"name":"Range interface: calling collapse(boolean) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"selectNode\" with the proper type (13)","status":"PASS"},{"name":"Range interface: calling selectNode(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"selectNodeContents\" with the proper type (14)","status":"PASS"},{"name":"Range interface: calling selectNodeContents(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"START_TO_START\" with the proper type (15)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"START_TO_END\" with the proper type (16)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"END_TO_END\" with the proper type (17)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"END_TO_START\" with the proper type (18)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"compareBoundaryPoints\" with the proper type (19)","status":"PASS"},{"name":"Range interface: calling compareBoundaryPoints(unsigned short,Range) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"deleteContents\" with the proper type (20)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"extractContents\" with the proper type (21)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"cloneContents\" with the proper type (22)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"insertNode\" with the proper type (23)","status":"PASS"},{"name":"Range interface: calling insertNode(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"surroundContents\" with the proper type (24)","status":"PASS"},{"name":"Range interface: calling surroundContents(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"cloneRange\" with the proper type (25)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"detach\" with the proper type (26)","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"isPointInRange\" with the proper type (27)","status":"PASS"},{"name":"Range interface: calling isPointInRange(Node,unsigned long) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"comparePoint\" with the proper type (28)","status":"PASS"},{"name":"Range interface: calling comparePoint(Node,unsigned long) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"Range interface: detachedRange must inherit property \"intersectsNode\" with the proper type (29)","status":"PASS"},{"name":"Range interface: calling intersectsNode(Node) on detachedRange with too few arguments must throw TypeError","status":"PASS"},{"name":"NodeIterator interface: existence and properties of interface object","status":"PASS"},{"name":"NodeIterator interface object length","status":"PASS"},{"name":"NodeIterator interface object name","status":"PASS"},{"name":"NodeIterator interface: existence and properties of interface prototype object","status":"PASS"},{"name":"NodeIterator interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"NodeIterator interface: attribute root","status":"PASS"},{"name":"NodeIterator interface: attribute referenceNode","status":"PASS"},{"name":"NodeIterator interface: attribute pointerBeforeReferenceNode","status":"PASS"},{"name":"NodeIterator interface: attribute whatToShow","status":"PASS"},{"name":"NodeIterator interface: attribute filter","status":"PASS"},{"name":"NodeIterator interface: operation nextNode()","status":"PASS"},{"name":"NodeIterator interface: operation previousNode()","status":"PASS"},{"name":"NodeIterator interface: operation detach()","status":"PASS"},{"name":"NodeIterator must be primary interface of document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false)","status":"PASS"},{"name":"Stringification of document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false)","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"root\" with the proper type (0)","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"referenceNode\" with the proper type (1)","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"pointerBeforeReferenceNode\" with the proper type (2)","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"whatToShow\" with the proper type (3)","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"filter\" with the proper type (4)","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"nextNode\" with the proper type (5)","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"previousNode\" with the proper type (6)","status":"PASS"},{"name":"NodeIterator interface: document.createNodeIterator(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"detach\" with the proper type (7)","status":"PASS"},{"name":"TreeWalker interface: existence and properties of interface object","status":"PASS"},{"name":"TreeWalker interface object length","status":"PASS"},{"name":"TreeWalker interface object name","status":"PASS"},{"name":"TreeWalker interface: existence and properties of interface prototype object","status":"PASS"},{"name":"TreeWalker interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"TreeWalker interface: attribute root","status":"PASS"},{"name":"TreeWalker interface: attribute whatToShow","status":"PASS"},{"name":"TreeWalker interface: attribute filter","status":"PASS"},{"name":"TreeWalker interface: attribute currentNode","status":"PASS"},{"name":"TreeWalker interface: operation parentNode()","status":"PASS"},{"name":"TreeWalker interface: operation firstChild()","status":"PASS"},{"name":"TreeWalker interface: operation lastChild()","status":"PASS"},{"name":"TreeWalker interface: operation previousSibling()","status":"PASS"},{"name":"TreeWalker interface: operation nextSibling()","status":"PASS"},{"name":"TreeWalker interface: operation previousNode()","status":"PASS"},{"name":"TreeWalker interface: operation nextNode()","status":"PASS"},{"name":"TreeWalker must be primary interface of document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false)","status":"PASS"},{"name":"Stringification of document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"root\" with the proper type (0)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"whatToShow\" with the proper type (1)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"filter\" with the proper type (2)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"currentNode\" with the proper type (3)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"parentNode\" with the proper type (4)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"firstChild\" with the proper type (5)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"lastChild\" with the proper type (6)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"previousSibling\" with the proper type (7)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"nextSibling\" with the proper type (8)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"previousNode\" with the proper type (9)","status":"PASS"},{"name":"TreeWalker interface: document.createTreeWalker(document.body, NodeFilter.SHOW_ALL, null, false) must inherit property \"nextNode\" with the proper type (10)","status":"PASS"},{"name":"NodeFilter interface: existence and properties of interface object","status":"PASS"},{"name":"NodeFilter interface object name","status":"PASS"},{"name":"NodeFilter interface: existence and properties of interface prototype object","status":"PASS"},{"name":"NodeFilter interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_ACCEPT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_ACCEPT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_REJECT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_REJECT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_SKIP on interface object","status":"PASS"},{"name":"NodeFilter interface: constant FILTER_SKIP on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ALL on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ALL on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ELEMENT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ELEMENT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ATTRIBUTE on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ATTRIBUTE on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_TEXT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_TEXT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_CDATA_SECTION on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_CDATA_SECTION on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ENTITY_REFERENCE on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ENTITY_REFERENCE on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ENTITY on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_ENTITY on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_PROCESSING_INSTRUCTION on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_PROCESSING_INSTRUCTION on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_COMMENT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_COMMENT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT_TYPE on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT_TYPE on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT_FRAGMENT on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_DOCUMENT_FRAGMENT on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_NOTATION on interface object","status":"PASS"},{"name":"NodeFilter interface: constant SHOW_NOTATION on interface prototype object","status":"PASS"},{"name":"NodeFilter interface: operation acceptNode(Node)","status":"PASS"},{"name":"DOMTokenList interface: existence and properties of interface object","status":"PASS"},{"name":"DOMTokenList interface object length","status":"PASS"},{"name":"DOMTokenList interface object name","status":"PASS"},{"name":"DOMTokenList interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DOMTokenList interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DOMTokenList interface: attribute length","status":"PASS"},{"name":"DOMTokenList interface: operation item(unsigned long)","status":"PASS"},{"name":"DOMTokenList interface: operation contains(DOMString)","status":"PASS"},{"name":"DOMTokenList interface: operation add(DOMString)","status":"PASS"},{"name":"DOMTokenList interface: operation remove(DOMString)","status":"PASS"},{"name":"DOMTokenList interface: operation toggle(DOMString,boolean)","status":"PASS"},{"name":"DOMTokenList interface: operation replace(DOMString,DOMString)","status":"PASS"},{"name":"DOMTokenList interface: operation supports(DOMString)","status":"PASS"},{"name":"DOMTokenList interface: attribute value","status":"PASS"},{"name":"DOMTokenList interface: stringifier","status":"PASS"},{"name":"DOMTokenList must be primary interface of document.body.classList","status":"PASS"},{"name":"Stringification of document.body.classList","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"length\" with the proper type (0)","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"item\" with the proper type (1)","status":"PASS"},{"name":"DOMTokenList interface: calling item(unsigned long) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"contains\" with the proper type (2)","status":"PASS"},{"name":"DOMTokenList interface: calling contains(DOMString) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"add\" with the proper type (3)","status":"PASS"},{"name":"DOMTokenList interface: calling add(DOMString) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"remove\" with the proper type (4)","status":"PASS"},{"name":"DOMTokenList interface: calling remove(DOMString) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"toggle\" with the proper type (5)","status":"PASS"},{"name":"DOMTokenList interface: calling toggle(DOMString,boolean) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"replace\" with the proper type (6)","status":"PASS"},{"name":"DOMTokenList interface: calling replace(DOMString,DOMString) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"supports\" with the proper type (7)","status":"PASS"},{"name":"DOMTokenList interface: calling supports(DOMString) on document.body.classList with too few arguments must throw TypeError","status":"PASS"},{"name":"DOMTokenList interface: document.body.classList must inherit property \"value\" with the proper type (8)","status":"PASS"}]}