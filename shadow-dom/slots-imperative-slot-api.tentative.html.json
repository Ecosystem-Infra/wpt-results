{"status":"OK","subtests":[{"name":"attachShadow can take slotAssignment parameter.","status":"FAIL"},{"name":"Imperative slot API throws exception when not slotAssignment != 'manual'.","status":"PASS"},{"name":"Imperative slot API throws exception when slottable parentNode != slot's host.","status":"PASS"},{"name":"Imperative slot API can assign nodes in manual slot assignment.","status":"PASS"},{"name":"Order of slottables is preserved in manual slot assignment.","status":"PASS"},{"name":"Previously assigned slottable is moved to new slot when it's reassigned.","status":"PASS"},{"name":"Order and assignment of nodes are preserved during multiple assignment in a row.","status":"PASS"},{"name":"Assigning invalid nodes causes exception and slot returns to its previous state.","status":"PASS"},{"name":"Moving a slot to a new host, the slot loses its previously assigned slottables.","status":"PASS"},{"name":"Moving a slot's tree order position within a shadow host has no impact on its assigned slottables.","status":"PASS"},{"name":"Appending slottable to different host, it loses slot assignment. It can be re-assigned within a new host.","status":"PASS"},{"name":"Previously assigned node should not be assigned if slot moved to a new shadow root. The slot remains empty when moved back, no trigger recalc.","status":"PASS"},{"name":"Previously assigned node should not be assigned if slot moved to a new shadow root. The slot remains empty when moved back, trigger recalc.","status":"PASS"},{"name":"Assignment with the same node in parameters should be ignored, last one wins.","status":"PASS"},{"name":"Removing a slot from DOM resets its slottable's slot assignment.","status":"PASS"},{"name":"A slot should be cleared of assigned nodes even if it's re-inserted into the same shadow root.","status":"PASS"}]}