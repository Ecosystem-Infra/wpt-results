{"status":"OK","subtests":[{"name":"Test that NDEFReader.scan rejects if signal is not an AbortSignal.","status":"FAIL"},{"name":"Test that NDEFReader.scan rejects if NDEFScanOptions.url is missing components.","status":"FAIL"},{"name":"Test that NDEFReader.scan rejects if NDEFScanOptions.url is invalid.","status":"FAIL"},{"name":"Test that NDEFReader.scan rejects if NDEFScanOptions.url has wrong protocol.","status":"FAIL"},{"name":"NDEFReader.scan should fail if NFC HW is disabled.","status":"FAIL"},{"name":"NDEFReader.scan should fail if NFC HW is not supported.","status":"FAIL"},{"name":"Test that nfc watch success if NFC HW is enabled.","status":"FAIL"},{"name":"Test that NDEFReader.scan succeeds if NDEFScanOptions.url is valid URL.","status":"FAIL"},{"name":"Test that NDEFReader.scan succeeds if NDEFScanOptions.url is valid URL with '*' wildcard character in path.","status":"FAIL"},{"name":"Test that NDEFReader.scan succeeds if NDEFScanOptions.url is valid URL with '*' wildcard character in the beginning of path component followed by subpath.","status":"FAIL"},{"name":"Test that NDEFReader.scan succeeds if NDEFScanOptions.url is empty.","status":"FAIL"},{"name":"Test that NDEFReader.scan rejects if NDEFScanOptions.signal is already aborted.","status":"FAIL"},{"name":"Test that NDEFReader.scan rejects if NDEFScanOptions.signal aborts right after the scan invocation.","status":"FAIL"},{"name":"Test that NDEFReader can not get any reading events once the signal aborts.","status":"FAIL"},{"name":"NDEFRecord.toRecords returns its embedded records correctly.","status":"FAIL"},{"name":"Test that NDEFReader.onreading should not be fired if the NFC tag does not expose NDEF technology.","status":"FAIL"},{"name":"Test that NDEFReader.onreading should be fired on an unformatted NFC tag with empty records array for NDEFMessage.","status":"FAIL"}]}