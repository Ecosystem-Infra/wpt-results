{"status":"ERROR","subtests":[{"name":"Test that NDEFReader.scan rejects if signal is not an AbortSignal.","status":"PASS"},{"name":"NDEFReader.scan should fail if user permission is not granted.","status":"PASS"},{"name":"NDEFReader.scan should fail if no implementation for NFC Mojo interface.","status":"PASS"},{"name":"NDEFReader.scan should fail if NFC HW is disabled.","status":"PASS"},{"name":"NDEFReader.scan should fail if NFC HW is not supported.","status":"PASS"},{"name":"Test that WebNFC API is not accessible from iframe context.","status":"FAIL"},{"name":"Test that nfc watch success if NFC HW is enabled.","status":"PASS"},{"name":"Test that NDEFReader.scan rejects if NDEFScanOptions.signal is already aborted.","status":"PASS"},{"name":"Test that NDEFReader.scan rejects if NDEFScanOptions.signal aborts right after the scan invocation.","status":"PASS"},{"name":"Test that NDEFReader can not get any reading events once the signal aborts.","status":"PASS"},{"name":"NDEFRecord.toRecords returns its embedded records correctly.","status":"PASS"},{"name":"NDEFReader.scan returns smart-poster record correctly.","status":"PASS"},{"name":"Test that NDEFReader.onreadingerror should be fired if the NFC tag does not expose NDEF technology.","status":"TIMEOUT"},{"name":"Test that NDEFReader.onreading should be fired on an unformatted NFC tag with empty records array for NDEFMessage.","status":"NOTRUN"},{"name":"Test that reading message with multiple records should succeed.","status":"NOTRUN"},{"name":"Test that NDEFReader.scan rejects if there is already an ongoing scan.","status":"NOTRUN"},{"name":"Test that NDEFReader.scan can be started after the previous scan is aborted.","status":"NOTRUN"}]}