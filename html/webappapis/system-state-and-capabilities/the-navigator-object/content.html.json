{"status":"OK","subtests":[{"name":"the registerContentHandler method should exist on the navigator object","status":"FAIL"},{"name":"a handler with valid arguments should work","status":"FAIL"},{"name":"a relative URL should work","status":"FAIL"},{"name":"a URL with a fragment identifier should work","status":"FAIL"},{"name":"a URL with a query string should work","status":"FAIL"},{"name":"a URL with a multi-argument query string should work","status":"FAIL"},{"name":"a URL with the passed string as a directory name should work","status":"FAIL"},{"name":"a URL with the passed string as a directory name followed by a query string and fragment identifier should work","status":"FAIL"},{"name":"a URL with the passed string included twice should work","status":"FAIL"},{"name":"an empty url argument should throw SYNTAX_ERR","status":"FAIL"},{"name":"%s instead of domain name should throw SYNTAX_ERR","status":"FAIL"},{"name":"%s instead of subdomain name should throw syntax_err","status":"FAIL"},{"name":"a url argument without %s should throw SYNTAX_ERR","status":"FAIL"},{"name":"a url argument pointing to a different domain name, without %s should throw SYNTAX_ERR","status":"FAIL"},{"name":"a url argument without %s (but with %) should throw SYNTAX_ERR","status":"FAIL"},{"name":"a url argument without %s (but with %a) should throw SYNTAX_ERR","status":"FAIL"},{"name":"a url argument pointing to a different domain name should throw SECURITY_ERR","status":"FAIL"},{"name":"a url argument pointing to a different domain name should throw SECURITY_ERR (2)","status":"FAIL"},{"name":"a url argument pointing to a different domain name should throw SECURITY_ERR (3)","status":"FAIL"},{"name":"attempting to override the image/jpeg MIME type should throw SECURITY_ERR","status":"FAIL"},{"name":"attempting to override the text/html MIME type should throw SECURITY_ERR","status":"FAIL"},{"name":"attempting to override the text/javascript MIME type should throw SECURITY_ERR","status":"FAIL"},{"name":"attempting to override the text/plain MIME type should throw SECURITY_ERR","status":"FAIL"},{"name":"overriding the application/atom+xml MIME type should work","status":"FAIL"},{"name":"overriding the application/rss+xml MIME type should work","status":"FAIL"},{"name":"overriding the application/x-unrecognized MIME type should work","status":"FAIL"},{"name":"overriding the text/unrecognized MIME type should work","status":"FAIL"},{"name":"overriding the foo/bar MIME type should work","status":"FAIL"}]}