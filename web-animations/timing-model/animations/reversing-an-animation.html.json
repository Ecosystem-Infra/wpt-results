{"status":"OK","subtests":[{"name":"Reversing an animation inverts the playback rate","status":"FAIL"},{"name":"Reversing an animation plays a pausing animation","status":"FAIL"},{"name":"Reversing an animation maintains the same current time","status":"PASS"},{"name":"Reversing an animation does not cause it to leave the pending state","status":"PASS"},{"name":"Reversing an animation does not cause it to resolve the ready promise","status":"FAIL"},{"name":"Reversing an animation when playbackRate > 0 and currentTime > effect end should make it play from the end","status":"PASS"},{"name":"Reversing an animation when playbackRate > 0 and currentTime < 0 should make it play from the end","status":"PASS"},{"name":"Reversing an animation when playbackRate < 0 and currentTime < 0 should make it play from the start","status":"PASS"},{"name":"Reversing an animation when playbackRate < 0 and currentTime > effect end should make it play from the start","status":"PASS"},{"name":"Reversing an animation when playbackRate > 0 and currentTime < 0 and the target effect end is positive infinity should throw an exception","status":"PASS"},{"name":"When reversing throws an exception, the playback rate remains unchanged","status":"FAIL"},{"name":"Reversing animation when playbackRate = 0 and currentTime < 0 and the target effect end is positive infinity should NOT throw an exception","status":"PASS"},{"name":"Reversing an animation when playbackRate < 0 and currentTime < 0 and the target effect end is positive infinity should make it play from the start","status":"PASS"},{"name":"Reversing when when playbackRate == 0 should preserve the current time and playback rate","status":"PASS"},{"name":"Reversing an animation without an active timeline throws an InvalidStateError","status":"FAIL"}]}