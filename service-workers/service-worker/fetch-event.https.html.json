{"status":"OK","subtests":[{"name":"Service Worker headers in the request of a fetch event","status":"FAIL"},{"name":"Service Worker responds to fetch event with string","status":"PASS"},{"name":"Service Worker responds to fetch event with blob body","status":"PASS"},{"name":"Service Worker responds to fetch event with the referrer URL","status":"PASS"},{"name":"Service Worker responds to fetch event with an existing client id","status":"FAIL"},{"name":"Service Worker does not respond to fetch event","status":"PASS"},{"name":"Service Worker responds to fetch event with null response body","status":"PASS"},{"name":"Service Worker fetches other file in fetch event","status":"PASS"},{"name":"Service Worker responds to fetch event with POST form","status":"PASS"},{"name":"Multiple calls of respondWith must throw InvalidStateErrors","status":"PASS"},{"name":"Service Worker event.respondWith must set the used flag","status":"PASS"},{"name":"Service Worker should expose FetchEvent URL fragments.","status":"PASS"},{"name":"Service Worker responds to fetch event with the correct cache types","status":"PASS"},{"name":"Service Worker should intercept EventSource","status":"PASS"},{"name":"Service Worker responds to fetch event with the correct integrity_metadata","status":"PASS"},{"name":"FetchEvent#body is a string","status":"PASS"},{"name":"FetchEvent#body is a blob","status":"PASS"},{"name":"Service Worker responds to fetch event with the correct keepalive value","status":"FAIL"}]}