{"status":"TIMEOUT","subtests":[{"name":"Service Worker intercepts fetches in scope with wildcard origin.","status":"TIMEOUT"},{"name":"Service Worker intercepts fetches in scope with explicit origin.","status":"NOTRUN"},{"name":"Service Worker doesn't intercept fetches with non matching origin.","status":"NOTRUN"},{"name":"Service Worker intercepts fetches in scope with explicit origin list.","status":"NOTRUN"},{"name":"Service Worker does not intercept same origin fetches.","status":"NOTRUN"},{"name":"Service Worker does not intercept navigations.","status":"NOTRUN"},{"name":"Service Worker that fallback to network should fallback to network.","status":"NOTRUN"},{"name":"Service Worker that fetch from the network should fallback to network.","status":"NOTRUN"},{"name":"Falling back to network should still respect CORS.","status":"NOTRUN"},{"name":"Foreign fetch can intercept fetch requests from SW controlled pages.","status":"NOTRUN"},{"name":"Foreign fetch can intercept resource requests from SW controlled pages.","status":"NOTRUN"},{"name":"Referrer and origin are set correctly in ForeignFetchEvent.","status":"NOTRUN"},{"name":"Service Worker does not intercept fetches from an insecure context.","status":"NOTRUN"},{"name":"Service Worker does not intercept fetches with CORS preflight","status":"NOTRUN"},{"name":"Foreign fetch rejects if resolved with a null response.","status":"NOTRUN"}]}