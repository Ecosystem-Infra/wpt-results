{"status":"OK","subtests":[{"name":"Test calling waitUntil in a different task without an existing extension throws","status":"FAIL"},{"name":"Test calling waitUntil in a different microtask without an existing extension throws","status":"FAIL"},{"name":"Test calling waitUntil in a different task with an existing extension succeeds","status":"FAIL"},{"name":"Test calling waitUntil with an existing extension promise handler succeeds","status":"FAIL"},{"name":"Test calling waitUntil at the end of the microtask turn throws","status":"FAIL"},{"name":"Test calling waitUntil after the current extension expired in a different task fails","status":"FAIL"},{"name":"Test calling waitUntil on a script constructed ExtendableEvent throws exception","status":"FAIL"},{"name":"Test calling waitUntil asynchronously with pending respondWith promise.","status":"FAIL"},{"name":"Test calling waitUntil synchronously inside microtask of respondWith promise.","status":"FAIL"},{"name":"Test calling waitUntil asynchronously inside microtask of respondWith promise.","status":"FAIL"}]}