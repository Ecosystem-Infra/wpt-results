{"status":"OK","subtests":[{"name":"Interfaces and attributes in ServiceWorkerGlobalScope","status":"PASS"},{"name":"test setup (cache creation)","status":"PASS"},{"name":"Event constructors","status":"FAIL"},{"name":"xhr is not exposed","status":"PASS"},{"name":"URL.createObjectURL is not exposed","status":"FAIL"},{"name":"ServiceWorker includes AbstractWorker: member names are unique","status":"PASS"},{"name":"WorkerGlobalScope includes WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface object","status":"FAIL"},{"name":"ServiceWorker interface object length","status":"PASS"},{"name":"ServiceWorker interface object name","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ServiceWorker interface: attribute scriptURL","status":"FAIL"},{"name":"ServiceWorker interface: attribute state","status":"FAIL"},{"name":"ServiceWorker interface: operation postMessage(any, [object Object])","status":"PASS"},{"name":"ServiceWorker interface: operation postMessage(any, PostMessageOptions)","status":"PASS"},{"name":"ServiceWorker interface: attribute onstatechange","status":"FAIL"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface object","status":"FAIL"},{"name":"ServiceWorkerRegistration interface object length","status":"PASS"},{"name":"ServiceWorkerRegistration interface object name","status":"PASS"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute installing","status":"FAIL"},{"name":"ServiceWorkerRegistration interface: attribute waiting","status":"FAIL"},{"name":"ServiceWorkerRegistration interface: attribute active","status":"FAIL"},{"name":"ServiceWorkerRegistration interface: attribute navigationPreload","status":"FAIL"},{"name":"ServiceWorkerRegistration interface: attribute scope","status":"FAIL"},{"name":"ServiceWorkerRegistration interface: attribute updateViaCache","status":"FAIL"},{"name":"ServiceWorkerRegistration interface: operation update()","status":"PASS"},{"name":"ServiceWorkerRegistration interface: operation unregister()","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute onupdatefound","status":"FAIL"},{"name":"ServiceWorkerRegistration must be primary interface of self.registration","status":"PASS"},{"name":"Stringification of self.registration","status":"PASS"},{"name":"ServiceWorkerRegistration interface: self.registration must inherit property \"installing\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: self.registration must inherit property \"waiting\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: self.registration must inherit property \"active\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: self.registration must inherit property \"navigationPreload\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: self.registration must inherit property \"scope\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: self.registration must inherit property \"updateViaCache\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: self.registration must inherit property \"update()\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: self.registration must inherit property \"unregister()\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: self.registration must inherit property \"onupdatefound\" with the proper type","status":"PASS"},{"name":"NavigationPreloadManager interface: existence and properties of interface object","status":"PASS"},{"name":"NavigationPreloadManager interface object length","status":"PASS"},{"name":"NavigationPreloadManager interface object name","status":"PASS"},{"name":"NavigationPreloadManager interface: existence and properties of interface prototype object","status":"PASS"},{"name":"NavigationPreloadManager interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"NavigationPreloadManager interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"NavigationPreloadManager interface: operation enable()","status":"PASS"},{"name":"NavigationPreloadManager interface: operation disable()","status":"PASS"},{"name":"NavigationPreloadManager interface: operation setHeaderValue(ByteString)","status":"PASS"},{"name":"NavigationPreloadManager interface: operation getState()","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: existence and properties of interface object","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface object length","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface object name","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to a new value via Object.setPrototypeOf should throw a TypeError","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to a new value via __proto__ should throw a TypeError","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to a new value via Reflect.setPrototypeOf should return false","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to its original value via Object.setPrototypeOf should not throw","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to its original value via __proto__ should not throw","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to its original value via Reflect.setPrototypeOf should return true","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: attribute clients","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: attribute registration","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: attribute serviceWorker","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: operation skipWaiting()","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: attribute oninstall","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: attribute onactivate","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: attribute onfetch","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: attribute onmessage","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: attribute onmessageerror","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to a new value via Object.setPrototypeOf should throw a TypeError","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to a new value via __proto__ should throw a TypeError","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to a new value via Reflect.setPrototypeOf should return false","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to its original value via Object.setPrototypeOf should not throw","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to its original value via __proto__ should not throw","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to its original value via Reflect.setPrototypeOf should return true","status":"PASS"},{"name":"ServiceWorkerGlobalScope must be primary interface of self","status":"PASS"},{"name":"Stringification of self","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"clients\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"registration\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"serviceWorker\" with the proper type","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"skipWaiting()\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"oninstall\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"onactivate\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"onfetch\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"onmessage\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"onmessageerror\" with the proper type","status":"PASS"},{"name":"Client interface: existence and properties of interface object","status":"PASS"},{"name":"Client interface object length","status":"PASS"},{"name":"Client interface object name","status":"PASS"},{"name":"Client interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Client interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Client interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Client interface: attribute url","status":"FAIL"},{"name":"Client interface: attribute frameType","status":"FAIL"},{"name":"Client interface: attribute id","status":"FAIL"},{"name":"Client interface: attribute type","status":"FAIL"},{"name":"Client interface: operation postMessage(any, [object Object])","status":"PASS"},{"name":"Client interface: operation postMessage(any, PostMessageOptions)","status":"PASS"},{"name":"WindowClient interface: existence and properties of interface object","status":"FAIL"},{"name":"WindowClient interface object length","status":"PASS"},{"name":"WindowClient interface object name","status":"PASS"},{"name":"WindowClient interface: existence and properties of interface prototype object","status":"PASS"},{"name":"WindowClient interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"WindowClient interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"WindowClient interface: attribute visibilityState","status":"FAIL"},{"name":"WindowClient interface: attribute focused","status":"FAIL"},{"name":"WindowClient interface: attribute ancestorOrigins","status":"FAIL"},{"name":"WindowClient interface: operation focus()","status":"PASS"},{"name":"WindowClient interface: operation navigate(USVString)","status":"PASS"},{"name":"Clients interface: existence and properties of interface object","status":"PASS"},{"name":"Clients interface object length","status":"PASS"},{"name":"Clients interface object name","status":"PASS"},{"name":"Clients interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Clients interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Clients interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Clients interface: operation get(DOMString)","status":"PASS"},{"name":"Clients interface: operation matchAll(ClientQueryOptions)","status":"PASS"},{"name":"Clients interface: operation openWindow(USVString)","status":"PASS"},{"name":"Clients interface: operation claim()","status":"PASS"},{"name":"Clients must be primary interface of self.clients","status":"PASS"},{"name":"Stringification of self.clients","status":"PASS"},{"name":"Clients interface: self.clients must inherit property \"get(DOMString)\" with the proper type","status":"PASS"},{"name":"Clients interface: calling get(DOMString) on self.clients with too few arguments must throw TypeError","status":"PASS"},{"name":"Clients interface: self.clients must inherit property \"matchAll(ClientQueryOptions)\" with the proper type","status":"PASS"},{"name":"Clients interface: calling matchAll(ClientQueryOptions) on self.clients with too few arguments must throw TypeError","status":"PASS"},{"name":"Clients interface: self.clients must inherit property \"openWindow(USVString)\" with the proper type","status":"PASS"},{"name":"Clients interface: calling openWindow(USVString) on self.clients with too few arguments must throw TypeError","status":"PASS"},{"name":"Clients interface: self.clients must inherit property \"claim()\" with the proper type","status":"PASS"},{"name":"Cache interface: existence and properties of interface object","status":"PASS"},{"name":"Cache interface object length","status":"PASS"},{"name":"Cache interface object name","status":"PASS"},{"name":"Cache interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Cache interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Cache interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Cache interface: operation match(RequestInfo, CacheQueryOptions)","status":"PASS"},{"name":"Cache interface: operation matchAll(RequestInfo, CacheQueryOptions)","status":"PASS"},{"name":"Cache interface: operation add(RequestInfo)","status":"PASS"},{"name":"Cache interface: operation addAll([object Object])","status":"PASS"},{"name":"Cache interface: operation put(RequestInfo, Response)","status":"PASS"},{"name":"Cache interface: operation delete(RequestInfo, CacheQueryOptions)","status":"PASS"},{"name":"Cache interface: operation keys(RequestInfo, CacheQueryOptions)","status":"PASS"},{"name":"Cache must be primary interface of self.cacheInstance","status":"PASS"},{"name":"Stringification of self.cacheInstance","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"match(RequestInfo, CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling match(RequestInfo, CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"matchAll(RequestInfo, CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling matchAll(RequestInfo, CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"add(RequestInfo)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling add(RequestInfo) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"addAll([object Object])\" with the proper type","status":"PASS"},{"name":"Cache interface: calling addAll([object Object]) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"put(RequestInfo, Response)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling put(RequestInfo, Response) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"delete(RequestInfo, CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling delete(RequestInfo, CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"keys(RequestInfo, CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling keys(RequestInfo, CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface object","status":"PASS"},{"name":"CacheStorage interface object length","status":"PASS"},{"name":"CacheStorage interface object name","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"CacheStorage interface: operation match(RequestInfo, MultiCacheQueryOptions)","status":"PASS"},{"name":"CacheStorage interface: operation has(DOMString)","status":"PASS"},{"name":"CacheStorage interface: operation open(DOMString)","status":"PASS"},{"name":"CacheStorage interface: operation delete(DOMString)","status":"PASS"},{"name":"CacheStorage interface: operation keys()","status":"PASS"},{"name":"CacheStorage must be primary interface of self.caches","status":"PASS"},{"name":"Stringification of self.caches","status":"PASS"},{"name":"CacheStorage interface: self.caches must inherit property \"match(RequestInfo, MultiCacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling match(RequestInfo, MultiCacheQueryOptions) on self.caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: self.caches must inherit property \"has(DOMString)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling has(DOMString) on self.caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: self.caches must inherit property \"open(DOMString)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling open(DOMString) on self.caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: self.caches must inherit property \"delete(DOMString)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling delete(DOMString) on self.caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: self.caches must inherit property \"keys()\" with the proper type","status":"PASS"}]}